# Copyright 2023 Carver Automation Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Stage 1: Build the Next.js web UI
FROM --platform=linux/amd64 node:18-bullseye AS web-builder

WORKDIR /web-build

COPY web/package*.json ./
RUN npm install
COPY web/ .
RUN npm run build

# Verify build output structure
RUN ls -la .next || echo "No .next directory"
RUN ls -la || echo "Listing directory contents"

# Copy all necessary files to a clean directory
# This replicates what the DEB package build script does
RUN mkdir -p /web-output && \
    # Copy server.js and other files from standalone build if available
    if [ -d ".next/standalone" ]; then \
        cp -r .next/standalone/* /web-output/ && \
        # Copy .next from standalone for static files
        mkdir -p /web-output/.next && \
        cp -r .next/standalone/.next/* /web-output/.next/ || true; \
    fi && \
    # Ensure static files are copied
    mkdir -p /web-output/.next/static && \
    cp -r .next/static /web-output/.next/ || true && \
    # Copy public files if they exist
    if [ -d "public" ]; then \
        cp -r public /web-output/; \
    fi

# Stage 2: Create RPM
FROM --platform=linux/amd64 rockylinux:9 AS rpm-builder

# Update and install RPM build tools
RUN dnf update -y && \
    dnf install -y \
    rpm-build \
    rpmdevtools \
    systemd-devel

# Set up RPM build environment
RUN rpmdev-setuptree

# Create source directories
RUN mkdir -p /root/rpmbuild/SOURCES/systemd /root/rpmbuild/SOURCES/config

# Create build directory structure
RUN mkdir -p /root/rpmbuild/BUILD/web

# Show what's in the web-builder output
COPY --from=web-builder /web-output/ /root/rpmbuild/BUILD/web/
RUN ls -la /root/rpmbuild/BUILD/web/ || true

# Copy config and systemd files
COPY packaging/web/config/web.json /root/rpmbuild/SOURCES/config/
COPY packaging/web/config/nginx.conf /root/rpmbuild/SOURCES/config/
COPY packaging/web/systemd/serviceradar-web.service /root/rpmbuild/SOURCES/systemd/
COPY packaging/specs/serviceradar-web.spec /root/rpmbuild/SPECS/

# Set default version (can be overridden at build time)
ARG VERSION=1.0.21
ARG RELEASE=1

# Build the RPM with verbose output for debugging
RUN rpmbuild -bb -v \
    --define "version ${VERSION}" \
    --define "release ${RELEASE}" \
    /root/rpmbuild/SPECS/serviceradar-web.spec

# Final stage to store RPM
FROM --platform=linux/amd64 rockylinux:9
WORKDIR /rpms
COPY --from=rpm-builder /root/rpmbuild/RPMS/*/*.rpm .
CMD ["/bin/bash"]