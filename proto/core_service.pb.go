// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.14.0
// source: core_service.proto

package proto

import (
	v1 "github.com/carverauto/serviceradar/proto/identitymap/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetCanonicalDeviceRequest asks Core to resolve one or more identity keys into a canonical device record.
type GetCanonicalDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// identity_keys may be provided in preference order; the server will attempt them sequentially.
	IdentityKeys []*v1.IdentityKey `protobuf:"bytes,1,rep,name=identity_keys,json=identityKeys,proto3" json:"identity_keys,omitempty"`
	// namespace overrides the default identity map namespace when provided.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// ip_hint can be supplied when only MAC or external identity is known; it helps narrow DB fallbacks.
	IpHint        string `protobuf:"bytes,3,opt,name=ip_hint,json=ipHint,proto3" json:"ip_hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCanonicalDeviceRequest) Reset() {
	*x = GetCanonicalDeviceRequest{}
	mi := &file_core_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCanonicalDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCanonicalDeviceRequest) ProtoMessage() {}

func (x *GetCanonicalDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCanonicalDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetCanonicalDeviceRequest) Descriptor() ([]byte, []int) {
	return file_core_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetCanonicalDeviceRequest) GetIdentityKeys() []*v1.IdentityKey {
	if x != nil {
		return x.IdentityKeys
	}
	return nil
}

func (x *GetCanonicalDeviceRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetCanonicalDeviceRequest) GetIpHint() string {
	if x != nil {
		return x.IpHint
	}
	return ""
}

// GetCanonicalDeviceResponse contains the canonical record if found.
type GetCanonicalDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// found indicates whether a canonical record was located in KV or via fallback.
	Found bool `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	// record is the canonical identity payload stored in KV.
	Record *v1.CanonicalRecord `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
	// matched_key reports which identity key produced the result (may differ from request order if fallback used).
	MatchedKey *v1.IdentityKey `protobuf:"bytes,3,opt,name=matched_key,json=matchedKey,proto3" json:"matched_key,omitempty"`
	// revision is the KV revision number, if retrieved directly from KV (0 otherwise).
	Revision uint64 `protobuf:"varint,4,opt,name=revision,proto3" json:"revision,omitempty"`
	// hydrated is true when Core populated KV as part of servicing the request.
	Hydrated      bool `protobuf:"varint,5,opt,name=hydrated,proto3" json:"hydrated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCanonicalDeviceResponse) Reset() {
	*x = GetCanonicalDeviceResponse{}
	mi := &file_core_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCanonicalDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCanonicalDeviceResponse) ProtoMessage() {}

func (x *GetCanonicalDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCanonicalDeviceResponse.ProtoReflect.Descriptor instead.
func (*GetCanonicalDeviceResponse) Descriptor() ([]byte, []int) {
	return file_core_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCanonicalDeviceResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *GetCanonicalDeviceResponse) GetRecord() *v1.CanonicalRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *GetCanonicalDeviceResponse) GetMatchedKey() *v1.IdentityKey {
	if x != nil {
		return x.MatchedKey
	}
	return nil
}

func (x *GetCanonicalDeviceResponse) GetRevision() uint64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *GetCanonicalDeviceResponse) GetHydrated() bool {
	if x != nil {
		return x.Hydrated
	}
	return false
}

var File_core_service_proto protoreflect.FileDescriptor

const file_core_service_proto_rawDesc = "" +
	"\n" +
	"\x12core_service.proto\x12\x04core\x1a!identitymap/v1/identity_map.proto\"\x94\x01\n" +
	"\x19GetCanonicalDeviceRequest\x12@\n" +
	"\ridentity_keys\x18\x01 \x03(\v2\x1b.identitymap.v1.IdentityKeyR\fidentityKeys\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x17\n" +
	"\aip_hint\x18\x03 \x01(\tR\x06ipHint\"\xe1\x01\n" +
	"\x1aGetCanonicalDeviceResponse\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x127\n" +
	"\x06record\x18\x02 \x01(\v2\x1f.identitymap.v1.CanonicalRecordR\x06record\x12<\n" +
	"\vmatched_key\x18\x03 \x01(\v2\x1b.identitymap.v1.IdentityKeyR\n" +
	"matchedKey\x12\x1a\n" +
	"\brevision\x18\x04 \x01(\x04R\brevision\x12\x1a\n" +
	"\bhydrated\x18\x05 \x01(\bR\bhydrated2f\n" +
	"\vCoreService\x12W\n" +
	"\x12GetCanonicalDevice\x12\x1f.core.GetCanonicalDeviceRequest\x1a .core.GetCanonicalDeviceResponseB*Z(github.com/carverauto/serviceradar/protob\x06proto3"

var (
	file_core_service_proto_rawDescOnce sync.Once
	file_core_service_proto_rawDescData []byte
)

func file_core_service_proto_rawDescGZIP() []byte {
	file_core_service_proto_rawDescOnce.Do(func() {
		file_core_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_service_proto_rawDesc), len(file_core_service_proto_rawDesc)))
	})
	return file_core_service_proto_rawDescData
}

var file_core_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_core_service_proto_goTypes = []any{
	(*GetCanonicalDeviceRequest)(nil),  // 0: core.GetCanonicalDeviceRequest
	(*GetCanonicalDeviceResponse)(nil), // 1: core.GetCanonicalDeviceResponse
	(*v1.IdentityKey)(nil),             // 2: identitymap.v1.IdentityKey
	(*v1.CanonicalRecord)(nil),         // 3: identitymap.v1.CanonicalRecord
}
var file_core_service_proto_depIdxs = []int32{
	2, // 0: core.GetCanonicalDeviceRequest.identity_keys:type_name -> identitymap.v1.IdentityKey
	3, // 1: core.GetCanonicalDeviceResponse.record:type_name -> identitymap.v1.CanonicalRecord
	2, // 2: core.GetCanonicalDeviceResponse.matched_key:type_name -> identitymap.v1.IdentityKey
	0, // 3: core.CoreService.GetCanonicalDevice:input_type -> core.GetCanonicalDeviceRequest
	1, // 4: core.CoreService.GetCanonicalDevice:output_type -> core.GetCanonicalDeviceResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_core_service_proto_init() }
func file_core_service_proto_init() {
	if File_core_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_service_proto_rawDesc), len(file_core_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_core_service_proto_goTypes,
		DependencyIndexes: file_core_service_proto_depIdxs,
		MessageInfos:      file_core_service_proto_msgTypes,
	}.Build()
	File_core_service_proto = out.File
	file_core_service_proto_goTypes = nil
	file_core_service_proto_depIdxs = nil
}
