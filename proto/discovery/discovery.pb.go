// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.14.0
// source: discovery/discovery.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DiscoveryStatus describes the current state of a discovery job
type DiscoveryStatus int32

const (
	DiscoveryStatus_UNKNOWN   DiscoveryStatus = 0
	DiscoveryStatus_PENDING   DiscoveryStatus = 1
	DiscoveryStatus_RUNNING   DiscoveryStatus = 2
	DiscoveryStatus_COMPLETED DiscoveryStatus = 3
	DiscoveryStatus_FAILED    DiscoveryStatus = 4
	DiscoveryStatus_CANCELED  DiscoveryStatus = 5
)

// Enum value maps for DiscoveryStatus.
var (
	DiscoveryStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "RUNNING",
		3: "COMPLETED",
		4: "FAILED",
		5: "CANCELED",
	}
	DiscoveryStatus_value = map[string]int32{
		"UNKNOWN":   0,
		"PENDING":   1,
		"RUNNING":   2,
		"COMPLETED": 3,
		"FAILED":    4,
		"CANCELED":  5,
	}
)

func (x DiscoveryStatus) Enum() *DiscoveryStatus {
	p := new(DiscoveryStatus)
	*p = x
	return p
}

func (x DiscoveryStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoveryStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_discovery_discovery_proto_enumTypes[0].Descriptor()
}

func (DiscoveryStatus) Type() protoreflect.EnumType {
	return &file_discovery_discovery_proto_enumTypes[0]
}

func (x DiscoveryStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoveryStatus.Descriptor instead.
func (DiscoveryStatus) EnumDescriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{0}
}

type DiscoveryRequest_DiscoveryType int32

const (
	DiscoveryRequest_FULL       DiscoveryRequest_DiscoveryType = 0 // Full discovery of all available information
	DiscoveryRequest_BASIC      DiscoveryRequest_DiscoveryType = 1 // Basic device discovery only
	DiscoveryRequest_INTERFACES DiscoveryRequest_DiscoveryType = 2 // Interface discovery
	DiscoveryRequest_TOPOLOGY   DiscoveryRequest_DiscoveryType = 3 // Topology discovery (LLDP/CDP)
)

// Enum value maps for DiscoveryRequest_DiscoveryType.
var (
	DiscoveryRequest_DiscoveryType_name = map[int32]string{
		0: "FULL",
		1: "BASIC",
		2: "INTERFACES",
		3: "TOPOLOGY",
	}
	DiscoveryRequest_DiscoveryType_value = map[string]int32{
		"FULL":       0,
		"BASIC":      1,
		"INTERFACES": 2,
		"TOPOLOGY":   3,
	}
)

func (x DiscoveryRequest_DiscoveryType) Enum() *DiscoveryRequest_DiscoveryType {
	p := new(DiscoveryRequest_DiscoveryType)
	*p = x
	return p
}

func (x DiscoveryRequest_DiscoveryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoveryRequest_DiscoveryType) Descriptor() protoreflect.EnumDescriptor {
	return file_discovery_discovery_proto_enumTypes[1].Descriptor()
}

func (DiscoveryRequest_DiscoveryType) Type() protoreflect.EnumType {
	return &file_discovery_discovery_proto_enumTypes[1]
}

func (x DiscoveryRequest_DiscoveryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoveryRequest_DiscoveryType.Descriptor instead.
func (DiscoveryRequest_DiscoveryType) EnumDescriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{3, 0}
}

type SNMPCredentials_SNMPVersion int32

const (
	SNMPCredentials_V1  SNMPCredentials_SNMPVersion = 0
	SNMPCredentials_V2C SNMPCredentials_SNMPVersion = 1
	SNMPCredentials_V3  SNMPCredentials_SNMPVersion = 2
)

// Enum value maps for SNMPCredentials_SNMPVersion.
var (
	SNMPCredentials_SNMPVersion_name = map[int32]string{
		0: "V1",
		1: "V2C",
		2: "V3",
	}
	SNMPCredentials_SNMPVersion_value = map[string]int32{
		"V1":  0,
		"V2C": 1,
		"V3":  2,
	}
)

func (x SNMPCredentials_SNMPVersion) Enum() *SNMPCredentials_SNMPVersion {
	p := new(SNMPCredentials_SNMPVersion)
	*p = x
	return p
}

func (x SNMPCredentials_SNMPVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SNMPCredentials_SNMPVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_discovery_discovery_proto_enumTypes[2].Descriptor()
}

func (SNMPCredentials_SNMPVersion) Type() protoreflect.EnumType {
	return &file_discovery_discovery_proto_enumTypes[2]
}

func (x SNMPCredentials_SNMPVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SNMPCredentials_SNMPVersion.Descriptor instead.
func (SNMPCredentials_SNMPVersion) EnumDescriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{4, 0}
}

type GetLatestCachedResultsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AgentId        string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                         // ID of the agent requesting
	PollerId       string                 `protobuf:"bytes,2,opt,name=poller_id,json=pollerId,proto3" json:"poller_id,omitempty"`                      // ID of the poller requesting
	IncludeRawData bool                   `protobuf:"varint,3,opt,name=include_raw_data,json=includeRawData,proto3" json:"include_raw_data,omitempty"` // Whether to include raw SNMP data
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetLatestCachedResultsRequest) Reset() {
	*x = GetLatestCachedResultsRequest{}
	mi := &file_discovery_discovery_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestCachedResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestCachedResultsRequest) ProtoMessage() {}

func (x *GetLatestCachedResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestCachedResultsRequest.ProtoReflect.Descriptor instead.
func (*GetLatestCachedResultsRequest) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{0}
}

func (x *GetLatestCachedResultsRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *GetLatestCachedResultsRequest) GetPollerId() string {
	if x != nil {
		return x.PollerId
	}
	return ""
}

func (x *GetLatestCachedResultsRequest) GetIncludeRawData() bool {
	if x != nil {
		return x.IncludeRawData
	}
	return false
}

// StatusRequest is used to query the status of the discovery service
type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DiscoveryId   string                 `protobuf:"bytes,1,opt,name=discovery_id,json=discoveryId,proto3" json:"discovery_id,omitempty"` // Optional: if provided, get status of specific discovery job
	AgentId       string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`             // ID of the agent requesting status
	PollerId      string                 `protobuf:"bytes,3,opt,name=poller_id,json=pollerId,proto3" json:"poller_id,omitempty"`          // ID of the poller requesting status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_discovery_discovery_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{1}
}

func (x *StatusRequest) GetDiscoveryId() string {
	if x != nil {
		return x.DiscoveryId
	}
	return ""
}

func (x *StatusRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *StatusRequest) GetPollerId() string {
	if x != nil {
		return x.PollerId
	}
	return ""
}

// StatusResponse contains information about the discovery service status
type StatusResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Available         bool                   `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`                                         // Whether the service is available
	Status            string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                                                // Current status description
	ActiveDiscoveries []string               `protobuf:"bytes,3,rep,name=active_discoveries,json=activeDiscoveries,proto3" json:"active_discoveries,omitempty"` // List of active discovery job IDs
	PendingJobs       int32                  `protobuf:"varint,4,opt,name=pending_jobs,json=pendingJobs,proto3" json:"pending_jobs,omitempty"`                  // Number of pending discovery jobs
	CompletedJobs     int32                  `protobuf:"varint,5,opt,name=completed_jobs,json=completedJobs,proto3" json:"completed_jobs,omitempty"`            // Number of completed discovery jobs
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_discovery_discovery_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{2}
}

func (x *StatusResponse) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *StatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusResponse) GetActiveDiscoveries() []string {
	if x != nil {
		return x.ActiveDiscoveries
	}
	return nil
}

func (x *StatusResponse) GetPendingJobs() int32 {
	if x != nil {
		return x.PendingJobs
	}
	return 0
}

func (x *StatusResponse) GetCompletedJobs() int32 {
	if x != nil {
		return x.CompletedJobs
	}
	return 0
}

// DiscoveryRequest initiates a new discovery operation
type DiscoveryRequest struct {
	state          protoimpl.MessageState         `protogen:"open.v1"`
	Seeds          []string                       `protobuf:"bytes,1,rep,name=seeds,proto3" json:"seeds,omitempty"`                                                                               // List of IP addresses or CIDR ranges to scan
	Type           DiscoveryRequest_DiscoveryType `protobuf:"varint,2,opt,name=type,proto3,enum=discovery.DiscoveryRequest_DiscoveryType" json:"type,omitempty"`                                  // Type of discovery to perform
	Credentials    *SNMPCredentials               `protobuf:"bytes,3,opt,name=credentials,proto3" json:"credentials,omitempty"`                                                                   // SNMP credentials to use
	Options        map[string]string              `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional discovery options
	Concurrency    int32                          `protobuf:"varint,5,opt,name=concurrency,proto3" json:"concurrency,omitempty"`                                                                  // Maximum number of concurrent operations
	TimeoutSeconds int32                          `protobuf:"varint,6,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`                                      // Timeout in seconds for each operation
	Retries        int32                          `protobuf:"varint,7,opt,name=retries,proto3" json:"retries,omitempty"`                                                                          // Number of retries for failed operations
	AgentId        string                         `protobuf:"bytes,8,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                                            // ID of the agent performing discovery
	PollerId       string                         `protobuf:"bytes,9,opt,name=poller_id,json=pollerId,proto3" json:"poller_id,omitempty"`                                                         // ID of the poller initiating discovery
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DiscoveryRequest) Reset() {
	*x = DiscoveryRequest{}
	mi := &file_discovery_discovery_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryRequest) ProtoMessage() {}

func (x *DiscoveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryRequest.ProtoReflect.Descriptor instead.
func (*DiscoveryRequest) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{3}
}

func (x *DiscoveryRequest) GetSeeds() []string {
	if x != nil {
		return x.Seeds
	}
	return nil
}

func (x *DiscoveryRequest) GetType() DiscoveryRequest_DiscoveryType {
	if x != nil {
		return x.Type
	}
	return DiscoveryRequest_FULL
}

func (x *DiscoveryRequest) GetCredentials() *SNMPCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *DiscoveryRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *DiscoveryRequest) GetConcurrency() int32 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *DiscoveryRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *DiscoveryRequest) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

func (x *DiscoveryRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *DiscoveryRequest) GetPollerId() string {
	if x != nil {
		return x.PollerId
	}
	return ""
}

// SNMPCredentials contains information needed to authenticate with SNMP devices
type SNMPCredentials struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	Version         SNMPCredentials_SNMPVersion `protobuf:"varint,1,opt,name=version,proto3,enum=discovery.SNMPCredentials_SNMPVersion" json:"version,omitempty"`                                                                   // SNMP protocol version
	Community       string                      `protobuf:"bytes,2,opt,name=community,proto3" json:"community,omitempty"`                                                                                                           // Community string for v1/v2c
	Username        string                      `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                                                                                                             // Username for v3
	AuthProtocol    string                      `protobuf:"bytes,4,opt,name=auth_protocol,json=authProtocol,proto3" json:"auth_protocol,omitempty"`                                                                                 // Auth protocol for v3 (MD5/SHA)
	AuthPassword    string                      `protobuf:"bytes,5,opt,name=auth_password,json=authPassword,proto3" json:"auth_password,omitempty"`                                                                                 // Auth password for v3
	PrivacyProtocol string                      `protobuf:"bytes,6,opt,name=privacy_protocol,json=privacyProtocol,proto3" json:"privacy_protocol,omitempty"`                                                                        // Privacy protocol for v3 (DES/AES)
	PrivacyPassword string                      `protobuf:"bytes,7,opt,name=privacy_password,json=privacyPassword,proto3" json:"privacy_password,omitempty"`                                                                        // Privacy password for v3
	TargetSpecific  map[string]*SNMPCredentials `protobuf:"bytes,8,rep,name=target_specific,json=targetSpecific,proto3" json:"target_specific,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Credentials for specific targets
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SNMPCredentials) Reset() {
	*x = SNMPCredentials{}
	mi := &file_discovery_discovery_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SNMPCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SNMPCredentials) ProtoMessage() {}

func (x *SNMPCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SNMPCredentials.ProtoReflect.Descriptor instead.
func (*SNMPCredentials) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{4}
}

func (x *SNMPCredentials) GetVersion() SNMPCredentials_SNMPVersion {
	if x != nil {
		return x.Version
	}
	return SNMPCredentials_V1
}

func (x *SNMPCredentials) GetCommunity() string {
	if x != nil {
		return x.Community
	}
	return ""
}

func (x *SNMPCredentials) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SNMPCredentials) GetAuthProtocol() string {
	if x != nil {
		return x.AuthProtocol
	}
	return ""
}

func (x *SNMPCredentials) GetAuthPassword() string {
	if x != nil {
		return x.AuthPassword
	}
	return ""
}

func (x *SNMPCredentials) GetPrivacyProtocol() string {
	if x != nil {
		return x.PrivacyProtocol
	}
	return ""
}

func (x *SNMPCredentials) GetPrivacyPassword() string {
	if x != nil {
		return x.PrivacyPassword
	}
	return ""
}

func (x *SNMPCredentials) GetTargetSpecific() map[string]*SNMPCredentials {
	if x != nil {
		return x.TargetSpecific
	}
	return nil
}

// DiscoveryResponse is returned when a discovery operation is initiated
type DiscoveryResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DiscoveryId       string                 `protobuf:"bytes,1,opt,name=discovery_id,json=discoveryId,proto3" json:"discovery_id,omitempty"`                    // Unique ID for this discovery job
	Success           bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                                              // Whether the discovery was successfully initiated
	Message           string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                                               // Status or error message
	EstimatedDuration int32                  `protobuf:"varint,4,opt,name=estimated_duration,json=estimatedDuration,proto3" json:"estimated_duration,omitempty"` // Estimated duration in seconds
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DiscoveryResponse) Reset() {
	*x = DiscoveryResponse{}
	mi := &file_discovery_discovery_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryResponse) ProtoMessage() {}

func (x *DiscoveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryResponse.ProtoReflect.Descriptor instead.
func (*DiscoveryResponse) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{5}
}

func (x *DiscoveryResponse) GetDiscoveryId() string {
	if x != nil {
		return x.DiscoveryId
	}
	return ""
}

func (x *DiscoveryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DiscoveryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DiscoveryResponse) GetEstimatedDuration() int32 {
	if x != nil {
		return x.EstimatedDuration
	}
	return 0
}

// ResultsRequest is used to retrieve results from a discovery operation
type ResultsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DiscoveryId    string                 `protobuf:"bytes,1,opt,name=discovery_id,json=discoveryId,proto3" json:"discovery_id,omitempty"`             // ID of the discovery job
	IncludeRawData bool                   `protobuf:"varint,2,opt,name=include_raw_data,json=includeRawData,proto3" json:"include_raw_data,omitempty"` // Whether to include raw SNMP data in the response
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResultsRequest) Reset() {
	*x = ResultsRequest{}
	mi := &file_discovery_discovery_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsRequest) ProtoMessage() {}

func (x *ResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsRequest.ProtoReflect.Descriptor instead.
func (*ResultsRequest) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{6}
}

func (x *ResultsRequest) GetDiscoveryId() string {
	if x != nil {
		return x.DiscoveryId
	}
	return ""
}

func (x *ResultsRequest) GetIncludeRawData() bool {
	if x != nil {
		return x.IncludeRawData
	}
	return false
}

// ResultsResponse contains the results of a discovery operation
type ResultsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DiscoveryId   string                 `protobuf:"bytes,1,opt,name=discovery_id,json=discoveryId,proto3" json:"discovery_id,omitempty"`    // ID of the discovery job
	Status        DiscoveryStatus        `protobuf:"varint,2,opt,name=status,proto3,enum=discovery.DiscoveryStatus" json:"status,omitempty"` // Status of the discovery job
	Devices       []*DiscoveredDevice    `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices,omitempty"`                               // List of discovered devices
	Interfaces    []*DiscoveredInterface `protobuf:"bytes,4,rep,name=interfaces,proto3" json:"interfaces,omitempty"`                         // List of discovered interfaces
	Topology      []*TopologyLink        `protobuf:"bytes,5,rep,name=topology,proto3" json:"topology,omitempty"`                             // List of topology links
	Error         string                 `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`                                   // Error message, if any
	Progress      float32                `protobuf:"fixed32,7,opt,name=progress,proto3" json:"progress,omitempty"`                           // Progress percentage (0-100)
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultsResponse) Reset() {
	*x = ResultsResponse{}
	mi := &file_discovery_discovery_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsResponse) ProtoMessage() {}

func (x *ResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsResponse.ProtoReflect.Descriptor instead.
func (*ResultsResponse) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{7}
}

func (x *ResultsResponse) GetDiscoveryId() string {
	if x != nil {
		return x.DiscoveryId
	}
	return ""
}

func (x *ResultsResponse) GetStatus() DiscoveryStatus {
	if x != nil {
		return x.Status
	}
	return DiscoveryStatus_UNKNOWN
}

func (x *ResultsResponse) GetDevices() []*DiscoveredDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *ResultsResponse) GetInterfaces() []*DiscoveredInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *ResultsResponse) GetTopology() []*TopologyLink {
	if x != nil {
		return x.Topology
	}
	return nil
}

func (x *ResultsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ResultsResponse) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ResultsResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// DiscoveredDevice represents a discovered network device
type DiscoveredDevice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`                                                                                       // IP address of the device
	Mac           string                 `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`                                                                                     // MAC address of the device (if available)
	Hostname      string                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`                                                                           // Hostname of the device
	SysDescr      string                 `protobuf:"bytes,4,opt,name=sys_descr,json=sysDescr,proto3" json:"sys_descr,omitempty"`                                                           // System description
	SysObjectId   string                 `protobuf:"bytes,5,opt,name=sys_object_id,json=sysObjectId,proto3" json:"sys_object_id,omitempty"`                                                // System object ID
	SysContact    string                 `protobuf:"bytes,6,opt,name=sys_contact,json=sysContact,proto3" json:"sys_contact,omitempty"`                                                     // System contact
	SysLocation   string                 `protobuf:"bytes,7,opt,name=sys_location,json=sysLocation,proto3" json:"sys_location,omitempty"`                                                  // System location
	Uptime        int64                  `protobuf:"varint,8,opt,name=uptime,proto3" json:"uptime,omitempty"`                                                                              // System uptime in seconds
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoveredDevice) Reset() {
	*x = DiscoveredDevice{}
	mi := &file_discovery_discovery_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveredDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredDevice) ProtoMessage() {}

func (x *DiscoveredDevice) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredDevice.ProtoReflect.Descriptor instead.
func (*DiscoveredDevice) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{8}
}

func (x *DiscoveredDevice) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *DiscoveredDevice) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *DiscoveredDevice) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *DiscoveredDevice) GetSysDescr() string {
	if x != nil {
		return x.SysDescr
	}
	return ""
}

func (x *DiscoveredDevice) GetSysObjectId() string {
	if x != nil {
		return x.SysObjectId
	}
	return ""
}

func (x *DiscoveredDevice) GetSysContact() string {
	if x != nil {
		return x.SysContact
	}
	return ""
}

func (x *DiscoveredDevice) GetSysLocation() string {
	if x != nil {
		return x.SysLocation
	}
	return ""
}

func (x *DiscoveredDevice) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *DiscoveredDevice) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// DiscoveredInterface represents a discovered network interface
type DiscoveredInterface struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	DeviceIp      string                  `protobuf:"bytes,1,opt,name=device_ip,json=deviceIp,proto3" json:"device_ip,omitempty"` // IP address of the parent device
	DeviceId      string                  `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	IfIndex       int32                   `protobuf:"varint,3,opt,name=if_index,json=ifIndex,proto3" json:"if_index,omitempty"`                                                              // Interface index
	IfName        string                  `protobuf:"bytes,4,opt,name=if_name,json=ifName,proto3" json:"if_name,omitempty"`                                                                  // Interface name
	IfDescr       string                  `protobuf:"bytes,5,opt,name=if_descr,json=ifDescr,proto3" json:"if_descr,omitempty"`                                                               // Interface description
	IfAlias       string                  `protobuf:"bytes,6,opt,name=if_alias,json=ifAlias,proto3" json:"if_alias,omitempty"`                                                               // Interface alias
	IfSpeed       *wrapperspb.UInt64Value `protobuf:"bytes,7,opt,name=if_speed,json=ifSpeed,proto3" json:"if_speed,omitempty"`                                                               // Interface speed in bits per second, optional
	IfPhysAddress string                  `protobuf:"bytes,8,opt,name=if_phys_address,json=ifPhysAddress,proto3" json:"if_phys_address,omitempty"`                                           // Interface physical (MAC) address
	IpAddresses   []string                `protobuf:"bytes,9,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`                                                   // IP addresses assigned to this interface
	IfAdminStatus int32                   `protobuf:"varint,10,opt,name=if_admin_status,json=ifAdminStatus,proto3" json:"if_admin_status,omitempty"`                                         // Administrative status (1=up, 2=down)
	IfOperStatus  int32                   `protobuf:"varint,11,opt,name=if_oper_status,json=ifOperStatus,proto3" json:"if_oper_status,omitempty"`                                            // Operational status (1=up, 2=down)
	IfType        int32                   `protobuf:"varint,12,opt,name=if_type,json=ifType,proto3" json:"if_type,omitempty"`                                                                // Interface type
	Metadata      map[string]string       `protobuf:"bytes,13,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoveredInterface) Reset() {
	*x = DiscoveredInterface{}
	mi := &file_discovery_discovery_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveredInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredInterface) ProtoMessage() {}

func (x *DiscoveredInterface) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredInterface.ProtoReflect.Descriptor instead.
func (*DiscoveredInterface) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{9}
}

func (x *DiscoveredInterface) GetDeviceIp() string {
	if x != nil {
		return x.DeviceIp
	}
	return ""
}

func (x *DiscoveredInterface) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DiscoveredInterface) GetIfIndex() int32 {
	if x != nil {
		return x.IfIndex
	}
	return 0
}

func (x *DiscoveredInterface) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *DiscoveredInterface) GetIfDescr() string {
	if x != nil {
		return x.IfDescr
	}
	return ""
}

func (x *DiscoveredInterface) GetIfAlias() string {
	if x != nil {
		return x.IfAlias
	}
	return ""
}

func (x *DiscoveredInterface) GetIfSpeed() *wrapperspb.UInt64Value {
	if x != nil {
		return x.IfSpeed
	}
	return nil
}

func (x *DiscoveredInterface) GetIfPhysAddress() string {
	if x != nil {
		return x.IfPhysAddress
	}
	return ""
}

func (x *DiscoveredInterface) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *DiscoveredInterface) GetIfAdminStatus() int32 {
	if x != nil {
		return x.IfAdminStatus
	}
	return 0
}

func (x *DiscoveredInterface) GetIfOperStatus() int32 {
	if x != nil {
		return x.IfOperStatus
	}
	return 0
}

func (x *DiscoveredInterface) GetIfType() int32 {
	if x != nil {
		return x.IfType
	}
	return 0
}

func (x *DiscoveredInterface) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// TopologyLink represents a discovered link between two devices
type TopologyLink struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Protocol           string                 `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`                                                                            // Protocol used to discover link (LLDP/CDP)
	LocalDeviceIp      string                 `protobuf:"bytes,2,opt,name=local_device_ip,json=localDeviceIp,proto3" json:"local_device_ip,omitempty"`                                           // IP of the local device
	LocalIfIndex       int32                  `protobuf:"varint,3,opt,name=local_if_index,json=localIfIndex,proto3" json:"local_if_index,omitempty"`                                             // Index of the local interface
	LocalIfName        string                 `protobuf:"bytes,4,opt,name=local_if_name,json=localIfName,proto3" json:"local_if_name,omitempty"`                                                 // Name of the local interface
	NeighborChassisId  string                 `protobuf:"bytes,5,opt,name=neighbor_chassis_id,json=neighborChassisId,proto3" json:"neighbor_chassis_id,omitempty"`                               // Chassis ID of the neighbor
	NeighborPortId     string                 `protobuf:"bytes,6,opt,name=neighbor_port_id,json=neighborPortId,proto3" json:"neighbor_port_id,omitempty"`                                        // Port ID of the neighbor
	NeighborPortDescr  string                 `protobuf:"bytes,7,opt,name=neighbor_port_descr,json=neighborPortDescr,proto3" json:"neighbor_port_descr,omitempty"`                               // Port description of the neighbor
	NeighborSystemName string                 `protobuf:"bytes,8,opt,name=neighbor_system_name,json=neighborSystemName,proto3" json:"neighbor_system_name,omitempty"`                            // System name of the neighbor
	NeighborMgmtAddr   string                 `protobuf:"bytes,9,opt,name=neighbor_mgmt_addr,json=neighborMgmtAddr,proto3" json:"neighbor_mgmt_addr,omitempty"`                                  // Management address of the neighbor
	Metadata           map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	LocalDeviceId      string                 `protobuf:"bytes,11,opt,name=local_device_id,json=localDeviceId,proto3" json:"local_device_id,omitempty"`                                          // ID of the local device
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TopologyLink) Reset() {
	*x = TopologyLink{}
	mi := &file_discovery_discovery_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyLink) ProtoMessage() {}

func (x *TopologyLink) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_discovery_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyLink.ProtoReflect.Descriptor instead.
func (*TopologyLink) Descriptor() ([]byte, []int) {
	return file_discovery_discovery_proto_rawDescGZIP(), []int{10}
}

func (x *TopologyLink) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *TopologyLink) GetLocalDeviceIp() string {
	if x != nil {
		return x.LocalDeviceIp
	}
	return ""
}

func (x *TopologyLink) GetLocalIfIndex() int32 {
	if x != nil {
		return x.LocalIfIndex
	}
	return 0
}

func (x *TopologyLink) GetLocalIfName() string {
	if x != nil {
		return x.LocalIfName
	}
	return ""
}

func (x *TopologyLink) GetNeighborChassisId() string {
	if x != nil {
		return x.NeighborChassisId
	}
	return ""
}

func (x *TopologyLink) GetNeighborPortId() string {
	if x != nil {
		return x.NeighborPortId
	}
	return ""
}

func (x *TopologyLink) GetNeighborPortDescr() string {
	if x != nil {
		return x.NeighborPortDescr
	}
	return ""
}

func (x *TopologyLink) GetNeighborSystemName() string {
	if x != nil {
		return x.NeighborSystemName
	}
	return ""
}

func (x *TopologyLink) GetNeighborMgmtAddr() string {
	if x != nil {
		return x.NeighborMgmtAddr
	}
	return ""
}

func (x *TopologyLink) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TopologyLink) GetLocalDeviceId() string {
	if x != nil {
		return x.LocalDeviceId
	}
	return ""
}

var File_discovery_discovery_proto protoreflect.FileDescriptor

const file_discovery_discovery_proto_rawDesc = "" +
	"\n" +
	"\x19discovery/discovery.proto\x12\tdiscovery\x1a\x1egoogle/protobuf/wrappers.proto\"\x81\x01\n" +
	"\x1dGetLatestCachedResultsRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1b\n" +
	"\tpoller_id\x18\x02 \x01(\tR\bpollerId\x12(\n" +
	"\x10include_raw_data\x18\x03 \x01(\bR\x0eincludeRawData\"j\n" +
	"\rStatusRequest\x12!\n" +
	"\fdiscovery_id\x18\x01 \x01(\tR\vdiscoveryId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12\x1b\n" +
	"\tpoller_id\x18\x03 \x01(\tR\bpollerId\"\xbf\x01\n" +
	"\x0eStatusResponse\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12-\n" +
	"\x12active_discoveries\x18\x03 \x03(\tR\x11activeDiscoveries\x12!\n" +
	"\fpending_jobs\x18\x04 \x01(\x05R\vpendingJobs\x12%\n" +
	"\x0ecompleted_jobs\x18\x05 \x01(\x05R\rcompletedJobs\"\x86\x04\n" +
	"\x10DiscoveryRequest\x12\x14\n" +
	"\x05seeds\x18\x01 \x03(\tR\x05seeds\x12=\n" +
	"\x04type\x18\x02 \x01(\x0e2).discovery.DiscoveryRequest.DiscoveryTypeR\x04type\x12<\n" +
	"\vcredentials\x18\x03 \x01(\v2\x1a.discovery.SNMPCredentialsR\vcredentials\x12B\n" +
	"\aoptions\x18\x04 \x03(\v2(.discovery.DiscoveryRequest.OptionsEntryR\aoptions\x12 \n" +
	"\vconcurrency\x18\x05 \x01(\x05R\vconcurrency\x12'\n" +
	"\x0ftimeout_seconds\x18\x06 \x01(\x05R\x0etimeoutSeconds\x12\x18\n" +
	"\aretries\x18\a \x01(\x05R\aretries\x12\x19\n" +
	"\bagent_id\x18\b \x01(\tR\aagentId\x12\x1b\n" +
	"\tpoller_id\x18\t \x01(\tR\bpollerId\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"B\n" +
	"\rDiscoveryType\x12\b\n" +
	"\x04FULL\x10\x00\x12\t\n" +
	"\x05BASIC\x10\x01\x12\x0e\n" +
	"\n" +
	"INTERFACES\x10\x02\x12\f\n" +
	"\bTOPOLOGY\x10\x03\"\x8d\x04\n" +
	"\x0fSNMPCredentials\x12@\n" +
	"\aversion\x18\x01 \x01(\x0e2&.discovery.SNMPCredentials.SNMPVersionR\aversion\x12\x1c\n" +
	"\tcommunity\x18\x02 \x01(\tR\tcommunity\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12#\n" +
	"\rauth_protocol\x18\x04 \x01(\tR\fauthProtocol\x12#\n" +
	"\rauth_password\x18\x05 \x01(\tR\fauthPassword\x12)\n" +
	"\x10privacy_protocol\x18\x06 \x01(\tR\x0fprivacyProtocol\x12)\n" +
	"\x10privacy_password\x18\a \x01(\tR\x0fprivacyPassword\x12W\n" +
	"\x0ftarget_specific\x18\b \x03(\v2..discovery.SNMPCredentials.TargetSpecificEntryR\x0etargetSpecific\x1a]\n" +
	"\x13TargetSpecificEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.discovery.SNMPCredentialsR\x05value:\x028\x01\"&\n" +
	"\vSNMPVersion\x12\x06\n" +
	"\x02V1\x10\x00\x12\a\n" +
	"\x03V2C\x10\x01\x12\x06\n" +
	"\x02V3\x10\x02\"\x99\x01\n" +
	"\x11DiscoveryResponse\x12!\n" +
	"\fdiscovery_id\x18\x01 \x01(\tR\vdiscoveryId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12-\n" +
	"\x12estimated_duration\x18\x04 \x01(\x05R\x11estimatedDuration\"]\n" +
	"\x0eResultsRequest\x12!\n" +
	"\fdiscovery_id\x18\x01 \x01(\tR\vdiscoveryId\x12(\n" +
	"\x10include_raw_data\x18\x02 \x01(\bR\x0eincludeRawData\"\xc9\x03\n" +
	"\x0fResultsResponse\x12!\n" +
	"\fdiscovery_id\x18\x01 \x01(\tR\vdiscoveryId\x122\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1a.discovery.DiscoveryStatusR\x06status\x125\n" +
	"\adevices\x18\x03 \x03(\v2\x1b.discovery.DiscoveredDeviceR\adevices\x12>\n" +
	"\n" +
	"interfaces\x18\x04 \x03(\v2\x1e.discovery.DiscoveredInterfaceR\n" +
	"interfaces\x123\n" +
	"\btopology\x18\x05 \x03(\v2\x17.discovery.TopologyLinkR\btopology\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error\x12\x1a\n" +
	"\bprogress\x18\a \x01(\x02R\bprogress\x12D\n" +
	"\bmetadata\x18\b \x03(\v2(.discovery.ResultsResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf1\x02\n" +
	"\x10DiscoveredDevice\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x10\n" +
	"\x03mac\x18\x02 \x01(\tR\x03mac\x12\x1a\n" +
	"\bhostname\x18\x03 \x01(\tR\bhostname\x12\x1b\n" +
	"\tsys_descr\x18\x04 \x01(\tR\bsysDescr\x12\"\n" +
	"\rsys_object_id\x18\x05 \x01(\tR\vsysObjectId\x12\x1f\n" +
	"\vsys_contact\x18\x06 \x01(\tR\n" +
	"sysContact\x12!\n" +
	"\fsys_location\x18\a \x01(\tR\vsysLocation\x12\x16\n" +
	"\x06uptime\x18\b \x01(\x03R\x06uptime\x12E\n" +
	"\bmetadata\x18\t \x03(\v2).discovery.DiscoveredDevice.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x04\n" +
	"\x13DiscoveredInterface\x12\x1b\n" +
	"\tdevice_ip\x18\x01 \x01(\tR\bdeviceIp\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12\x19\n" +
	"\bif_index\x18\x03 \x01(\x05R\aifIndex\x12\x17\n" +
	"\aif_name\x18\x04 \x01(\tR\x06ifName\x12\x19\n" +
	"\bif_descr\x18\x05 \x01(\tR\aifDescr\x12\x19\n" +
	"\bif_alias\x18\x06 \x01(\tR\aifAlias\x127\n" +
	"\bif_speed\x18\a \x01(\v2\x1c.google.protobuf.UInt64ValueR\aifSpeed\x12&\n" +
	"\x0fif_phys_address\x18\b \x01(\tR\rifPhysAddress\x12!\n" +
	"\fip_addresses\x18\t \x03(\tR\vipAddresses\x12&\n" +
	"\x0fif_admin_status\x18\n" +
	" \x01(\x05R\rifAdminStatus\x12$\n" +
	"\x0eif_oper_status\x18\v \x01(\x05R\fifOperStatus\x12\x17\n" +
	"\aif_type\x18\f \x01(\x05R\x06ifType\x12H\n" +
	"\bmetadata\x18\r \x03(\v2,.discovery.DiscoveredInterface.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xae\x04\n" +
	"\fTopologyLink\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12&\n" +
	"\x0flocal_device_ip\x18\x02 \x01(\tR\rlocalDeviceIp\x12$\n" +
	"\x0elocal_if_index\x18\x03 \x01(\x05R\flocalIfIndex\x12\"\n" +
	"\rlocal_if_name\x18\x04 \x01(\tR\vlocalIfName\x12.\n" +
	"\x13neighbor_chassis_id\x18\x05 \x01(\tR\x11neighborChassisId\x12(\n" +
	"\x10neighbor_port_id\x18\x06 \x01(\tR\x0eneighborPortId\x12.\n" +
	"\x13neighbor_port_descr\x18\a \x01(\tR\x11neighborPortDescr\x120\n" +
	"\x14neighbor_system_name\x18\b \x01(\tR\x12neighborSystemName\x12,\n" +
	"\x12neighbor_mgmt_addr\x18\t \x01(\tR\x10neighborMgmtAddr\x12A\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2%.discovery.TopologyLink.MetadataEntryR\bmetadata\x12&\n" +
	"\x0flocal_device_id\x18\v \x01(\tR\rlocalDeviceId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*a\n" +
	"\x0fDiscoveryStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\x12\r\n" +
	"\tCOMPLETED\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04\x12\f\n" +
	"\bCANCELED\x10\x052\xd7\x02\n" +
	"\x10DiscoveryService\x12B\n" +
	"\tGetStatus\x12\x18.discovery.StatusRequest\x1a\x19.discovery.StatusResponse\"\x00\x12M\n" +
	"\x0eStartDiscovery\x12\x1b.discovery.DiscoveryRequest\x1a\x1c.discovery.DiscoveryResponse\"\x00\x12N\n" +
	"\x13GetDiscoveryResults\x12\x19.discovery.ResultsRequest\x1a\x1a.discovery.ResultsResponse\"\x00\x12`\n" +
	"\x16GetLatestCachedResults\x12(.discovery.GetLatestCachedResultsRequest\x1a\x1a.discovery.ResultsResponse\"\x00B*Z(github.com/carverauto/serviceradar/protob\x06proto3"

var (
	file_discovery_discovery_proto_rawDescOnce sync.Once
	file_discovery_discovery_proto_rawDescData []byte
)

func file_discovery_discovery_proto_rawDescGZIP() []byte {
	file_discovery_discovery_proto_rawDescOnce.Do(func() {
		file_discovery_discovery_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_discovery_discovery_proto_rawDesc), len(file_discovery_discovery_proto_rawDesc)))
	})
	return file_discovery_discovery_proto_rawDescData
}

var file_discovery_discovery_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_discovery_discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_discovery_discovery_proto_goTypes = []any{
	(DiscoveryStatus)(0),                  // 0: discovery.DiscoveryStatus
	(DiscoveryRequest_DiscoveryType)(0),   // 1: discovery.DiscoveryRequest.DiscoveryType
	(SNMPCredentials_SNMPVersion)(0),      // 2: discovery.SNMPCredentials.SNMPVersion
	(*GetLatestCachedResultsRequest)(nil), // 3: discovery.GetLatestCachedResultsRequest
	(*StatusRequest)(nil),                 // 4: discovery.StatusRequest
	(*StatusResponse)(nil),                // 5: discovery.StatusResponse
	(*DiscoveryRequest)(nil),              // 6: discovery.DiscoveryRequest
	(*SNMPCredentials)(nil),               // 7: discovery.SNMPCredentials
	(*DiscoveryResponse)(nil),             // 8: discovery.DiscoveryResponse
	(*ResultsRequest)(nil),                // 9: discovery.ResultsRequest
	(*ResultsResponse)(nil),               // 10: discovery.ResultsResponse
	(*DiscoveredDevice)(nil),              // 11: discovery.DiscoveredDevice
	(*DiscoveredInterface)(nil),           // 12: discovery.DiscoveredInterface
	(*TopologyLink)(nil),                  // 13: discovery.TopologyLink
	nil,                                   // 14: discovery.DiscoveryRequest.OptionsEntry
	nil,                                   // 15: discovery.SNMPCredentials.TargetSpecificEntry
	nil,                                   // 16: discovery.ResultsResponse.MetadataEntry
	nil,                                   // 17: discovery.DiscoveredDevice.MetadataEntry
	nil,                                   // 18: discovery.DiscoveredInterface.MetadataEntry
	nil,                                   // 19: discovery.TopologyLink.MetadataEntry
	(*wrapperspb.UInt64Value)(nil),        // 20: google.protobuf.UInt64Value
}
var file_discovery_discovery_proto_depIdxs = []int32{
	1,  // 0: discovery.DiscoveryRequest.type:type_name -> discovery.DiscoveryRequest.DiscoveryType
	7,  // 1: discovery.DiscoveryRequest.credentials:type_name -> discovery.SNMPCredentials
	14, // 2: discovery.DiscoveryRequest.options:type_name -> discovery.DiscoveryRequest.OptionsEntry
	2,  // 3: discovery.SNMPCredentials.version:type_name -> discovery.SNMPCredentials.SNMPVersion
	15, // 4: discovery.SNMPCredentials.target_specific:type_name -> discovery.SNMPCredentials.TargetSpecificEntry
	0,  // 5: discovery.ResultsResponse.status:type_name -> discovery.DiscoveryStatus
	11, // 6: discovery.ResultsResponse.devices:type_name -> discovery.DiscoveredDevice
	12, // 7: discovery.ResultsResponse.interfaces:type_name -> discovery.DiscoveredInterface
	13, // 8: discovery.ResultsResponse.topology:type_name -> discovery.TopologyLink
	16, // 9: discovery.ResultsResponse.metadata:type_name -> discovery.ResultsResponse.MetadataEntry
	17, // 10: discovery.DiscoveredDevice.metadata:type_name -> discovery.DiscoveredDevice.MetadataEntry
	20, // 11: discovery.DiscoveredInterface.if_speed:type_name -> google.protobuf.UInt64Value
	18, // 12: discovery.DiscoveredInterface.metadata:type_name -> discovery.DiscoveredInterface.MetadataEntry
	19, // 13: discovery.TopologyLink.metadata:type_name -> discovery.TopologyLink.MetadataEntry
	7,  // 14: discovery.SNMPCredentials.TargetSpecificEntry.value:type_name -> discovery.SNMPCredentials
	4,  // 15: discovery.DiscoveryService.GetStatus:input_type -> discovery.StatusRequest
	6,  // 16: discovery.DiscoveryService.StartDiscovery:input_type -> discovery.DiscoveryRequest
	9,  // 17: discovery.DiscoveryService.GetDiscoveryResults:input_type -> discovery.ResultsRequest
	3,  // 18: discovery.DiscoveryService.GetLatestCachedResults:input_type -> discovery.GetLatestCachedResultsRequest
	5,  // 19: discovery.DiscoveryService.GetStatus:output_type -> discovery.StatusResponse
	8,  // 20: discovery.DiscoveryService.StartDiscovery:output_type -> discovery.DiscoveryResponse
	10, // 21: discovery.DiscoveryService.GetDiscoveryResults:output_type -> discovery.ResultsResponse
	10, // 22: discovery.DiscoveryService.GetLatestCachedResults:output_type -> discovery.ResultsResponse
	19, // [19:23] is the sub-list for method output_type
	15, // [15:19] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_discovery_discovery_proto_init() }
func file_discovery_discovery_proto_init() {
	if File_discovery_discovery_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_discovery_discovery_proto_rawDesc), len(file_discovery_discovery_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_discovery_discovery_proto_goTypes,
		DependencyIndexes: file_discovery_discovery_proto_depIdxs,
		EnumInfos:         file_discovery_discovery_proto_enumTypes,
		MessageInfos:      file_discovery_discovery_proto_msgTypes,
	}.Build()
	File_discovery_discovery_proto = out.File
	file_discovery_discovery_proto_goTypes = nil
	file_discovery_discovery_proto_depIdxs = nil
}
