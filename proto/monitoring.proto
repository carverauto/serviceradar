syntax = "proto3";

package monitoring;

option go_package = "github.com/mfreeman451/homemon/proto";

service AgentService {
  rpc GetStatus(StatusRequest) returns (StatusResponse) {}
}

service PollerService {
  rpc ReportStatus(PollerStatusRequest) returns (PollerStatusResponse) {}
}

message StatusRequest {
  string service_name = 1;  // Type of service to check (process, port, dusk)
  string service_type = 2;  // Type of service (process, port, grpc, etc)
  string details = 3;       // Additional details (e.g., process name)
  int32 port = 4;          // Port number for port checks
}

message StatusResponse {
  bool available = 1;
  string message = 2;
  string service_name = 3;
  string service_type = 4;
}

message PollerStatusRequest {
  repeated ServiceStatus services = 1;
  string poller_id = 2;
  int64 timestamp = 3;
}

message PollerStatusResponse {
  bool received = 1;
}

message ServiceStatus {
  string service_name = 1;
  bool available = 2;
  string message = 3;
  string service_type = 4;
}

message SweepServiceStatus {
  string network = 1;         // CIDR range being swept
  int32 total_hosts = 2;      // Total hosts in range
  int32 available_hosts = 3;  // Number of responding hosts
  repeated PortStatus ports = 4;
  int64 last_sweep = 5;       // Timestamp of last sweep
}

message PortStatus {
  int32 port = 1;
  int32 available = 2;        // Number of hosts with this port open
}