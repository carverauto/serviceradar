load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library")
load("@rust_crates_rperf_checker//:defs.bzl", "all_crate_deps", "crate_deps")

package(default_visibility = ["//visibility:public"])

genrule_proto_srcs = [
    "src/proto/monitoring.proto",
    "src/proto/rperf.proto",
]

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    crate_root = "build.rs",
    edition = "2021",
    deps = crate_deps([
        "tonic-build",
        "which",
    ]),
    data = ["@bazel_tools//tools/proto:protoc"] + genrule_proto_srcs,
    build_script_env = {
        "PROTOC": "$(execpath @bazel_tools//tools/proto:protoc)",
    },
)

rust_library(
    name = "rperf_checker_lib",
    srcs = glob(["src/**/*.rs"], exclude = ["src/main.rs"]),
    crate_root = "src/lib.rs",
    crate_name = "serviceradar_rperf_checker",
    edition = "2021",
    deps = all_crate_deps(normal = True) + [":build_script"],
    proc_macro_deps = all_crate_deps(proc_macro = True),
)

rust_binary(
    name = "rperf_checker",
    srcs = ["src/main.rs"],
    edition = "2021",
    deps = [":rperf_checker_lib"] + all_crate_deps(normal = True),
)
