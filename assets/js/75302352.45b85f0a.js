"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6958],{421:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rperf-monitoring","title":"Network Performance Monitoring with rperf","description":"ServiceRadar supports network performance monitoring through the rperf system, consisting of a server (serviceradar-rperf) and a client (serviceradar-rperf-checker).","source":"@site/docs/rperf-monitoring.md","sourceDirName":".","slug":"/rperf-monitoring","permalink":"/docs/rperf-monitoring","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7.5,"frontMatter":{"sidebar_position":7.5,"title":"Network Performance Monitoring with rperf"},"sidebar":"tutorialSidebar","previous":{"title":"Creating a Custom Checker Plugin","permalink":"/docs/custom-checkers"},"next":{"title":"KV Store Configuration","permalink":"/docs/kv-configuration"}}');var i=n(5105),l=n(3881);const t={sidebar_position:7.5,title:"Network Performance Monitoring with rperf"},c="Network Performance Monitoring with rperf",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Debian/Ubuntu Installation",id:"debianubuntu-installation",level:3},{value:"1. Install the rperf Server (serviceradar-rperf)",id:"1-install-the-rperf-server-serviceradar-rperf",level:4},{value:"2. Install the rperf Client (serviceradar-rperf-checker)",id:"2-install-the-rperf-client-serviceradar-rperf-checker",level:4},{value:"RHEL/Oracle Linux Installation",id:"rheloracle-linux-installation",level:3},{value:"1. Install the rperf Server (serviceradar-rperf)",id:"1-install-the-rperf-server-serviceradar-rperf-1",level:4},{value:"2. Install the ServiceRadar RPerf Client (serviceradar-rperf-checker)",id:"2-install-the-serviceradar-rperf-client-serviceradar-rperf-checker",level:4},{value:"Verify Installation",id:"verify-installation",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Server Configuration (serviceradar-rperf)",id:"server-configuration-serviceradar-rperf",level:3},{value:"Default Setup",id:"default-setup",level:4},{value:"Custom Port Pool (Recommended for Firewalls)",id:"custom-port-pool-recommended-for-firewalls",level:4},{value:"Client Configuration (serviceradar-rperf-checker)",id:"client-configuration-serviceradar-rperf-checker",level:3},{value:"Integrate with ServiceRadar Agent",id:"integrate-with-serviceradar-agent",level:3},{value:"Firewall Configuration",id:"firewall-configuration",level:2},{value:"On the Server Host",id:"on-the-server-host",level:3},{value:"UFW (Ubuntu/Debian)",id:"ufw-ubuntudebian",level:4},{value:"Firewalld (RHEL/Oracle Linux)",id:"firewalld-rheloracle-linux",level:4},{value:"Restrict by Source IP (Enhanced Security)",id:"restrict-by-source-ip-enhanced-security",level:4},{value:"On the Client Host",id:"on-the-client-host",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Enabling TLS (Optional)",id:"enabling-tls-optional",level:3},{value:"Verification",id:"verification",level:2},{value:"Check Server Logs:",id:"check-server-logs",level:3},{value:"Check Client Logs:",id:"check-client-logs",level:3},{value:"Test Connectivity:",id:"test-connectivity",level:3},{value:"Verify Agent Integration:",id:"verify-agent-integration",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Connection Timeouts:",id:"connection-timeouts",level:3},{value:"Service Won&#39;t Start:",id:"service-wont-start",level:3},{value:"No Results in Dashboard:",id:"no-results-in-dashboard",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"network-performance-monitoring-with-rperf",children:"Network Performance Monitoring with rperf"})}),"\n",(0,i.jsxs)(r.p,{children:["ServiceRadar supports network performance monitoring through the ",(0,i.jsx)(r.code,{children:"rperf"})," system, consisting of a server (",(0,i.jsx)(r.code,{children:"serviceradar-rperf"}),") and a client (",(0,i.jsx)(r.code,{children:"serviceradar-rperf-checker"}),").\nThis guide explains how to install, configure, and secure these components to monitor network throughput and reliability within your infrastructure."]}),"\n",(0,i.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"rperf"})," system provides:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsxs)(r.strong,{children:["Server (",(0,i.jsx)(r.code,{children:"serviceradar-rperf"}),")"]}),": A continuously running reflector that listens for client connections and facilitates network tests."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsxs)(r.strong,{children:["Client (",(0,i.jsx)(r.code,{children:"serviceradar-rperf-checker"}),")"]}),": A gRPC-based client that initiates tests against the server and reports results to ServiceRadar."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Features"}),": Measures TCP/UDP throughput, packet loss, jitter, and more, with support for parallel streams and configurable bandwidth targets."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"This system integrates with ServiceRadar's Agent and Poller for automated, scheduled monitoring and alerting."}),"\n",(0,i.jsx)(r.h3,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(r.mermaid,{value:'graph TD\n    subgraph "ServiceRadar Monitoring"\n        Poller[Poller<br/>:50053] --\x3e|gRPC| Agent[Agent<br/>:50051]\n        Agent --\x3e|gRPC| RperfClient[serviceradar-rperf-checker<br/>:50059]\n    end\n    subgraph "Network Testing"\n        RperfClient --\x3e|TCP/UDP| RperfServer[serviceradar-rperf<br/>:5199 + data ports]\n    end\n    RperfServer --\x3e|Results| RperfClient\n    RperfClient --\x3e|Status| Agent\n    Agent --\x3e|Report| Poller'}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"serviceradar-rperf-checker"}),": Runs as a checker plugin on the Agent host, initiates tests, and reports results."]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"serviceradar-rperf"}),": Runs on a separate host (or co-located), reflects test traffic back to the client."]}),"\n",(0,i.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Operating System"}),": Debian/Ubuntu or RHEL/Oracle Linux"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"ServiceRadar"}),": Agent and Poller installed (see ",(0,i.jsx)(r.a,{href:"/docs/installation",children:"Installation Guide"}),")"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Network Access"}),": Client must reach the server's control port (default: 5199) and data ports."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Root/Sudo Access"}),": Required for installation and firewall configuration."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(r.p,{children:"ServiceRadar provides Debian (.deb) and RPM (.rpm) packages for both components."}),"\n",(0,i.jsx)(r.h3,{id:"debianubuntu-installation",children:"Debian/Ubuntu Installation"}),"\n",(0,i.jsx)(r.h4,{id:"1-install-the-rperf-server-serviceradar-rperf",children:"1. Install the rperf Server (serviceradar-rperf)"}),"\n",(0,i.jsx)(r.p,{children:"On a dedicated host (or a host with minimal firewall restrictions):"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl -LO https://github.com/mfreeman451/rperf/releases/download/v0.1.17/serviceradar-rperf_0.1.17_amd64.deb\nsudo dpkg -i serviceradar-rperf_0.1.17_amd64.deb\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Installs to ",(0,i.jsx)(r.code,{children:"/usr/local/bin/serviceradar-rperf"})]}),"\n",(0,i.jsxs)(r.li,{children:["Configures a systemd service (",(0,i.jsx)(r.code,{children:"serviceradar-rperf.service"}),")"]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"2-install-the-rperf-client-serviceradar-rperf-checker",children:"2. Install the rperf Client (serviceradar-rperf-checker)"}),"\n",(0,i.jsx)(r.p,{children:"On the Agent host:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl -LO https://github.com/mfreeman451/rperf/releases/download/v1.0.28/serviceradar-rperf-checker-1.0.28.amd64.deb\nsudo dpkg -i serviceradar-rperf-checker-1.0.28.amd64.deb\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Installs to ",(0,i.jsx)(r.code,{children:"/usr/local/bin/serviceradar-rperf-checker"})]}),"\n",(0,i.jsxs)(r.li,{children:["Configures a systemd service (",(0,i.jsx)(r.code,{children:"serviceradar-rperf-checker.service"}),")"]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"rheloracle-linux-installation",children:"RHEL/Oracle Linux Installation"}),"\n",(0,i.jsx)(r.h4,{id:"1-install-the-rperf-server-serviceradar-rperf-1",children:"1. Install the rperf Server (serviceradar-rperf)"}),"\n",(0,i.jsx)(r.p,{children:"On a dedicated host:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl -LO https://github.com/mfreeman451/rperf/releases/download/v0.1.17/serviceradar-rperf-0.1.17-1.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-rperf-0.1.17-1.el9.x86_64.rpm\n"})}),"\n",(0,i.jsx)(r.h4,{id:"2-install-the-serviceradar-rperf-client-serviceradar-rperf-checker",children:"2. Install the ServiceRadar RPerf Client (serviceradar-rperf-checker)"}),"\n",(0,i.jsx)(r.p,{children:"On the Agent host:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"curl -LO https://github.com/mfreeman451/rperf/releases/download/v0.1.0/serviceradar-rperf-checker-1.0.28.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-rperf-checker-1.0.28.el9.x86_64.rpm\n"})}),"\n",(0,i.jsx)(r.h3,{id:"verify-installation",children:"Verify Installation"}),"\n",(0,i.jsx)(r.p,{children:"Check service status:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"# Server\nsudo systemctl status serviceradar-rperf\n\n# Client\nsudo systemctl status serviceradar-rperf-checker\n"})}),"\n",(0,i.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(r.h3,{id:"server-configuration-serviceradar-rperf",children:"Server Configuration (serviceradar-rperf)"}),"\n",(0,i.jsx)(r.p,{children:"The server listens on a control port (default: 5199) and dynamically assigns data ports unless specified. Configure via command-line flags or environment variables."}),"\n",(0,i.jsx)(r.h4,{id:"default-setup",children:"Default Setup"}),"\n",(0,i.jsx)(r.p,{children:"Start with the default configuration:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo systemctl start serviceradar-rperf\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Listens on ",(0,i.jsx)(r.code,{children:"0.0.0.0:5199"})]}),"\n",(0,i.jsx)(r.li,{children:"Uses OS-assigned data ports (e.g., 24243)"}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"custom-port-pool-recommended-for-firewalls",children:"Custom Port Pool (Recommended for Firewalls)"}),"\n",(0,i.jsxs)(r.p,{children:["Edit ",(0,i.jsx)(r.code,{children:"/lib/systemd/system/serviceradar-rperf.service"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ini",children:"[Service]\nExecStart=/usr/local/bin/serviceradar-rperf --server --port 5199 --tcp-port-pool 5200-5210\n"})}),"\n",(0,i.jsx)(r.p,{children:"Reload and restart:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo systemctl daemon-reload\nsudo systemctl restart serviceradar-rperf\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"--tcp-port-pool 5200-5210"}),": Limits data ports to a predictable range."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"client-configuration-serviceradar-rperf-checker",children:"Client Configuration (serviceradar-rperf-checker)"}),"\n",(0,i.jsxs)(r.p,{children:["Configure the client via ",(0,i.jsx)(r.code,{children:"/etc/serviceradar/checkers/rperf.json"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "listen_addr": "0.0.0.0:50059",\n  "security": {\n    "tls_enabled": false,\n    "cert_file": null,\n    "key_file": null\n  },\n  "default_poll_interval": 300,\n  "targets": [\n    {\n      "name": "Network Test",\n      "address": "<server-ip>",\n      "port": 5199,\n      "protocol": "tcp",\n      "reverse": false,\n      "bandwidth": 1000000,\n      "duration": 10.0,\n      "parallel": 1,\n      "length": 0,\n      "omit": 1,\n      "no_delay": true,\n      "send_buffer": 0,\n      "receive_buffer": 0,\n      "send_interval": 0.05,\n      "poll_interval": 300,\n      "tcp_port_pool": "5200-5210"\n    }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(r.p,{children:["Replace ",(0,i.jsx)(r.code,{children:"<server-ip>"})," with the server's IP (e.g., ",(0,i.jsx)(r.code,{children:"192.168.2.22"}),")."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"tcp_port_pool"}),": Matches the server's range if specified."]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Edit ",(0,i.jsx)(r.code,{children:"/lib/systemd/system/serviceradar-rperf-checker.service"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ini",children:"[Service]\nExecStart=/usr/local/bin/serviceradar-rperf-checker --config /etc/serviceradar/checkers/rperf.json\n"})}),"\n",(0,i.jsx)(r.p,{children:"Restart the service:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo systemctl daemon-reload\nsudo systemctl restart serviceradar-rperf-checker\n"})}),"\n",(0,i.jsx)(r.h3,{id:"integrate-with-serviceradar-agent",children:"Integrate with ServiceRadar Agent"}),"\n",(0,i.jsxs)(r.p,{children:["Update ",(0,i.jsx)(r.code,{children:"/etc/serviceradar/poller.json"})," to include the rperf checker:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "agents": {\n    "local-agent": {\n      "address": "localhost:50051",\n      "security": { "mode": "none" },\n      "checks": [\n        {\n          "service_type": "grpc",\n          "service_name": "rperf-network-test",\n          "details": "localhost:50059"\n        }\n      ]\n    }\n  },\n  "core_address": "localhost:50052",\n  "listen_addr": ":50053",\n  "poll_interval": "30s",\n  "poller_id": "my-poller",\n  "service_name": "PollerService",\n  "service_type": "grpc",\n  "security": { "mode": "none" }\n}\n'})}),"\n",(0,i.jsx)(r.p,{children:"Restart the Agent and Poller:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo systemctl restart serviceradar-agent\nsudo systemctl restart serviceradar-poller\n"})}),"\n",(0,i.jsx)(r.h2,{id:"firewall-configuration",children:"Firewall Configuration"}),"\n",(0,i.jsx)(r.p,{children:"The rperf server requires both the control port and data ports to be open. In firewalled environments, use a fixed port pool."}),"\n",(0,i.jsx)(r.h3,{id:"on-the-server-host",children:"On the Server Host"}),"\n",(0,i.jsx)(r.h4,{id:"ufw-ubuntudebian",children:"UFW (Ubuntu/Debian)"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo ufw allow 5199/tcp  # Control port\nsudo ufw allow 5200:5210/tcp  # Data port range\n"})}),"\n",(0,i.jsx)(r.h4,{id:"firewalld-rheloracle-linux",children:"Firewalld (RHEL/Oracle Linux)"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo firewall-cmd --permanent --add-port=5199/tcp\nsudo firewall-cmd --permanent --add-port=5200-5210/tcp\nsudo firewall-cmd --reload\n"})}),"\n",(0,i.jsx)(r.h4,{id:"restrict-by-source-ip-enhanced-security",children:"Restrict by Source IP (Enhanced Security)"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo ufw allow from <client-ip> to any port 5199 proto tcp\nsudo ufw allow from <client-ip> to any port 5200:5210 proto tcp\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Replace ",(0,i.jsx)(r.code,{children:"<client-ip>"})," with the client's IP (e.g., ",(0,i.jsx)(r.code,{children:"192.168.1.219"}),")."]}),"\n",(0,i.jsx)(r.h3,{id:"on-the-client-host",children:"On the Client Host"}),"\n",(0,i.jsx)(r.p,{children:"Ensure outbound connections to the server's ports are allowed (typically open by default)."}),"\n",(0,i.jsx)(r.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Firewall"}),": Always restrict access to trusted client IPs when possible."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"TLS"}),": Enable TLS in ",(0,i.jsx)(r.code,{children:"serviceradar-rperf-checker"})," for encrypted communication (see ",(0,i.jsx)(r.a,{href:"/docs/tls-security",children:"TLS Security"}),")."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Reverse Mode"}),": Use ",(0,i.jsx)(r.code,{children:"--reverse"})," if the server is heavily firewalled, shifting data port management to the client."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"enabling-tls-optional",children:"Enabling TLS (Optional)"}),"\n",(0,i.jsxs)(r.p,{children:["Update ",(0,i.jsx)(r.code,{children:"rperf.json"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "security": {\n    "tls_enabled": true,\n    "cert_file": "/etc/serviceradar/certs/rperf-checker.pem",\n    "key_file": "/etc/serviceradar/certs/rperf-checker-key.pem"\n  }\n}\n'})}),"\n",(0,i.jsxs)(r.p,{children:["Generate certificates as per ",(0,i.jsx)(r.a,{href:"/docs/tls-security",children:"TLS Security"})," and restart ",(0,i.jsx)(r.code,{children:"serviceradar-rperf-checker"}),"."]}),"\n",(0,i.jsx)(r.h2,{id:"verification",children:"Verification"}),"\n",(0,i.jsx)(r.h3,{id:"check-server-logs",children:"Check Server Logs:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo journalctl -u serviceradar-rperf\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Look for server listening on ",(0,i.jsx)(r.code,{children:"0.0.0.0:5199"}),"."]}),"\n",(0,i.jsx)(r.h3,{id:"check-client-logs",children:"Check Client Logs:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo journalctl -u serviceradar-rperf-checker\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Look for test results (e.g., ",(0,i.jsx)(r.code,{children:"Test for target 'Network Test' completed: 8.10 Mbps"}),")."]}),"\n",(0,i.jsx)(r.h3,{id:"test-connectivity",children:"Test Connectivity:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"telnet <server-ip> 5199  # Should connect\nnc -zv <server-ip> 5200  # Should succeed if port pool is open\n"})}),"\n",(0,i.jsx)(r.h3,{id:"verify-agent-integration",children:"Verify Agent Integration:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"grpcurl -plaintext localhost:50051 proto.AgentService/GetStatus\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Should include ",(0,i.jsx)(r.code,{children:"rperf-network-test"})," status."]}),"\n",(0,i.jsx)(r.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(r.h3,{id:"connection-timeouts",children:"Connection Timeouts:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Verify firewall rules allow both control and data ports."}),"\n",(0,i.jsx)(r.li,{children:"Ensure server IP and port match the client config."}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"service-wont-start",children:"Service Won't Start:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Check logs: ",(0,i.jsx)(r.code,{children:"journalctl -u serviceradar-rperf"})," or ",(0,i.jsx)(r.code,{children:"journalctl -u serviceradar-rperf-checker"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["Confirm config file permissions: ",(0,i.jsx)(r.code,{children:"chmod 644 /etc/serviceradar/checkers/rperf.json"}),"."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"no-results-in-dashboard",children:"No Results in Dashboard:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Verify Poller configuration includes the rperf check."}),"\n",(0,i.jsxs)(r.li,{children:["Check Agent logs: ",(0,i.jsx)(r.code,{children:"journalctl -u serviceradar-agent"}),"."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Dedicated Server"}),": Deploy serviceradar-rperf on a host with minimal firewall restrictions or in a DMZ."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Port Pool"}),": Use a fixed range (e.g., 5200-5210) for predictable firewall rules."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Monitoring"}),": Add ",(0,i.jsx)(r.code,{children:"serviceradar-rperf-checker"})," as a monitored service in ServiceRadar for self-health checks."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Documentation"}),": Share firewall rules and port requirements with your team."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Explore ",(0,i.jsx)(r.a,{href:"/docs/tls-security",children:"TLS Security"})," for securing ",(0,i.jsx)(r.code,{children:"serviceradar-rperf-checker"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["Integrate results into ",(0,i.jsx)(r.a,{href:"/docs/web-ui",children:"Web UI"})," dashboards."]}),"\n",(0,i.jsxs)(r.li,{children:["Consider ",(0,i.jsx)(r.a,{href:"/docs/sync",children:"Sync Service"})," for dynamic rperf target updates."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},3881:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>c});var s=n(8101);const i={},l=s.createContext(i);function t(e){const r=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(l.Provider,{value:r},e.children)}}}]);