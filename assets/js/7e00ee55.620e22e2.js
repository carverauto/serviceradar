"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2887],{609:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"tls-security","title":"TLS Security","description":"ServiceRadar supports mutual TLS (mTLS) authentication to secure communications between components.","source":"@site/docs/tls-security.md","sourceDirName":".","slug":"/tls-security","permalink":"/docs/tls-security","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"TLS Security"},"sidebar":"tutorialSidebar","previous":{"title":"Configuration Basics","permalink":"/docs/configuration"},"next":{"title":"Web UI Configuration","permalink":"/docs/web-ui"}}');var c=n(5105),i=n(3881);const a={sidebar_position:4,title:"TLS Security"},t="TLS Security",l={},o=[{value:"Security Architecture",id:"security-architecture",level:2},{value:"Certificate Overview",id:"certificate-overview",level:2},{value:"Certificate Generation",id:"certificate-generation",level:2},{value:"1. Install cfssl",id:"1-install-cfssl",level:3},{value:"2. Create Configuration Files",id:"2-create-configuration-files",level:3},{value:"Component-Specific CSRs",id:"component-specific-csrs",level:4},{value:"3. Generate Certificates",id:"3-generate-certificates",level:3},{value:"Certificate Deployment",id:"certificate-deployment",level:2},{value:"Role-Based Requirements",id:"role-based-requirements",level:3},{value:"Installation Steps",id:"installation-steps",level:3},{value:"Grant NATS Access (if co-located):",id:"grant-nats-access-if-co-located",level:4},{value:"Expected Directory Structure",id:"expected-directory-structure",level:3},{value:"Component Configuration",id:"component-configuration",level:2},{value:"Agent Configuration",id:"agent-configuration",level:3},{value:"Poller Configuration",id:"poller-configuration",level:3},{value:"Core Configuration",id:"core-configuration",level:3},{value:"NATS JetStream Configuration",id:"nats-jetstream-configuration",level:3},{value:"serviceradar-kv Configuration",id:"serviceradar-kv-configuration",level:3},{value:"Verification",id:"verification",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.header,{children:(0,c.jsx)(r.h1,{id:"tls-security",children:"TLS Security"})}),"\n",(0,c.jsx)(r.p,{children:"ServiceRadar supports mutual TLS (mTLS) authentication to secure communications between components.\nThis guide explains how to set up and configure mTLS for your ServiceRadar deployment, including the\nNATS JetStream server used for the KV store."}),"\n",(0,c.jsx)(r.h2,{id:"security-architecture",children:"Security Architecture"}),"\n",(0,c.jsx)(r.p,{children:"ServiceRadar components communicate securely using mTLS with the following roles:"}),"\n",(0,c.jsx)(r.mermaid,{value:'graph TB\nsubgraph "Agent Node"\n    AG[Agent<br/>Role: Client+Server<br/>:50051]\n    SNMPCheck[SNMP Checker<br/>:50054]\n    DuskCheck[Dusk Checker<br/>:50052]\n    SweepCheck[Network Sweep]\n    AG --\x3e SNMPCheck\n    AG --\x3e DuskCheck\n    AG --\x3e SweepCheck\nend\n    \nsubgraph "Poller Service"\n    PL[Poller<br/>Role: Client+Server<br/>:50053]\nend\n    \nsubgraph "Core Service"\n    CL[Core Service<br/>Role: Server<br/>:50052]\n    DB[(Database)]\n    API[HTTP API<br/>:8090]\n    CL --\x3e DB\n    CL --\x3e API\nend\n\nsubgraph "KV Store"\n    KV[serviceradar-kv<br/>Role: Client+Server<br/>:50054]\n    NATS[NATS JetStream<br/>Role: Server<br/>:4222]\n    KV --\x3e|mTLS Client| NATS\n    AG --\x3e|mTLS Client| KV\nend\n    \n%% Client connections from Poller\nPL --\x3e|mTLS Client| AG\nPL --\x3e|mTLS Client| CL\n    \n%% Server connections to Poller\nHC1[Health Checks] --\x3e|mTLS Client| PL\n    \nclassDef server fill:#e1f5fe,stroke:#01579b\nclassDef client fill:#f3e5f5,stroke:#4a148c\nclassDef dual fill:#fff3e0,stroke:#e65100\n    \nclass NATS,CL server\nclass AG,PL,KV dual\nclass SNMPCheck,DuskCheck,SweepCheck client'}),"\n",(0,c.jsx)(r.h2,{id:"certificate-overview",children:"Certificate Overview"}),"\n",(0,c.jsx)(r.p,{children:"ServiceRadar uses the following certificate files:"}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.code,{children:"root.pem"}),": Root CA certificate (shared across all components)."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.code,{children:"<component>.pem"}),": Component-specific certificate (e.g., ",(0,c.jsx)(r.code,{children:"agent.pem"}),", ",(0,c.jsx)(r.code,{children:"kv.pem"}),", ",(0,c.jsx)(r.code,{children:"nats-server.pem"}),")."]}),"\n",(0,c.jsxs)(r.li,{children:[(0,c.jsx)(r.code,{children:"<component>-key.pem"}),": Component-specific private key."]}),"\n"]}),"\n",(0,c.jsx)(r.h2,{id:"certificate-generation",children:"Certificate Generation"}),"\n",(0,c.jsx)(r.h3,{id:"1-install-cfssl",children:"1. Install cfssl"}),"\n",(0,c.jsx)(r.p,{children:"First, install the CloudFlare SSL toolkit (cfssl) which we'll use for generating certificates:"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"go install github.com/cloudflare/cfssl/cmd/...@latest\n"})}),"\n",(0,c.jsx)(r.h3,{id:"2-create-configuration-files",children:"2. Create Configuration Files"}),"\n",(0,c.jsxs)(r.p,{children:["Create ",(0,c.jsx)(r.code,{children:"cfssl.json"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n    "signing": {\n        "default": {\n            "expiry": "8760h"\n        },\n        "profiles": {\n            "rootca": {\n                "usages": ["signing", "key encipherment", "server auth", "client auth"],\n                "expiry": "8760h",\n                "ca_constraint": {\n                    "is_ca": true,\n                    "max_path_len": 0\n                }\n            },\n            "server": {\n                "usages": ["signing", "key encipherment", "server auth"],\n                "expiry": "8760h"\n            },\n            "client": {\n                "usages": ["signing", "key encipherment", "client auth"],\n                "expiry": "8760h"\n            }\n        }\n    }\n}\n'})}),"\n",(0,c.jsx)(r.h4,{id:"component-specific-csrs",children:"Component-Specific CSRs"}),"\n",(0,c.jsxs)(r.p,{children:["Each component needs a Certificate Signing Request (CSR) with a unique ",(0,c.jsx)(r.code,{children:"CN"})," and appropriate hosts.\nReplace ",(0,c.jsx)(r.code,{children:"<ip-or-hostname>"})," with the actual IP or hostname of the server hosting the component."]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsxs)(r.strong,{children:["NATS JetStream (",(0,c.jsx)(r.code,{children:"nats-csr.json"}),")"]}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "hosts": ["localhost", "127.0.0.1", "nats-serviceradar", "<nats-server-ip-or-hostname>"],\n  "key": {"algo": "ecdsa", "size": 256},\n  "names": [{"O": "ServiceRadar", "CN": "nats-serviceradar"}]\n}\n'})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsxs)(r.strong,{children:["serviceradar-kv (",(0,c.jsx)(r.code,{children:"kv-csr.json"}),")"]}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "hosts": ["localhost", "127.0.0.1", "kv.serviceradar", "<kv-server-ip-or-hostname>"],\n  "key": {"algo": "ecdsa", "size": 256},\n  "names": [{"O": "ServiceRadar", "CN": "kv.serviceradar"}]\n}\n'})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsxs)(r.strong,{children:["serviceradar-sync (",(0,c.jsx)(r.code,{children:"sync-csr.json"}),")"]}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "hosts": ["localhost", "127.0.0.1", "sync.serviceradar", "<sync-server-ip-or-hostname>"],\n  "key": {"algo": "ecdsa", "size": 256},\n  "names": [{"O": "ServiceRadar", "CN": "sync.serviceradar"}]\n}\n'})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsxs)(r.strong,{children:["Agent (",(0,c.jsx)(r.code,{children:"agent-csr.json"}),")"]}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "hosts": ["localhost", "127.0.0.1", "<agent-server-ip-or-hostname>"],\n  "key": {"algo": "ecdsa", "size": 256},\n  "names": [{"O": "ServiceRadar", "CN": "agent.serviceradar"}]\n}\n'})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsxs)(r.strong,{children:["Poller (",(0,c.jsx)(r.code,{children:"poller-csr.json"}),")"]}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "hosts": ["localhost", "127.0.0.1", "<poller-server-ip-or-hostname>"],\n  "key": {"algo": "ecdsa", "size": 256},\n  "names": [{"O": "ServiceRadar", "CN": "poller.serviceradar"}]\n}\n'})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsxs)(r.strong,{children:["Core (",(0,c.jsx)(r.code,{children:"core-csr.json"}),")"]}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "hosts": ["localhost", "127.0.0.1", "<core-server-ip-or-hostname>"],\n  "key": {"algo": "ecdsa", "size": 256},\n  "names": [{"O": "ServiceRadar", "CN": "core.serviceradar"}]\n}\n'})}),"\n",(0,c.jsxs)(r.admonition,{type:"note",children:[(0,c.jsxs)(r.p,{children:["Use ",(0,c.jsx)(r.code,{children:"localhost"})," and ",(0,c.jsx)(r.code,{children:"127.0.0.1"})," for co-located deployments; add specific IPs or hostnames (e.g., ",(0,c.jsx)(r.code,{children:"192.168.1.100"}),", ",(0,c.jsx)(r.code,{children:"agent.example.com"}),") for distributed setups."]}),(0,c.jsxs)(r.p,{children:["The ",(0,c.jsx)(r.code,{children:"CN"})," must be unique per component to enable RBAC in ",(0,c.jsx)(r.code,{children:"serviceradar-kv"}),"."]}),(0,c.jsx)(r.p,{children:'Modify the "hosts" array in csr.json and nats-csr.json to include the actual hostnames and IP addresses of your ServiceRadar components and NATS Server.'})]}),"\n",(0,c.jsx)(r.h3,{id:"3-generate-certificates",children:"3. Generate Certificates"}),"\n",(0,c.jsx)(r.p,{children:"Generate the root CA:"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:'cfssl selfsign -config cfssl.json --profile rootca "ServiceRadar CA" csr.json | cfssljson -bare root\n'})}),"\n",(0,c.jsx)(r.p,{children:"Generate and sign certificates for each component:"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"# NATS\ncfssl genkey nats-csr.json | cfssljson -bare nats-server\ncfssl sign -ca root.pem -ca-key root-key.pem -config cfssl.json -profile server nats-server.csr | cfssljson -bare nats-server\n\n# serviceradar-kv\ncfssl genkey kv-csr.json | cfssljson -bare kv\ncfssl sign -ca root.pem -ca-key root-key.pem -config cfssl.json -profile client kv.csr | cfssljson -bare kv\n\n# serviceradar-sync\ncfssl genkey sync-csr.json | cfssljson -bare sync\ncfssl sign -ca root.pem -ca-key root-key.pem -config cfssl.json -profile client sync.csr | cfssljson -bare sync\n\n# Agent\ncfssl genkey agent-csr.json | cfssljson -bare agent\ncfssl sign -ca root.pem -ca-key root-key.pem -config cfssl.json -profile client agent.csr | cfssljson -bare agent\n\n# Poller\ncfssl genkey poller-csr.json | cfssljson -bare poller\ncfssl sign -ca root.pem -ca-key root-key.pem -config cfssl.json -profile client poller.csr | cfssljson -bare poller\n\n# Core\ncfssl genkey core-csr.json | cfssljson -bare core\ncfssl sign -ca root.pem -ca-key root-key.pem -config cfssl.json -profile server core.csr | cfssljson -bare core\n"})}),"\n",(0,c.jsxs)(r.admonition,{type:"note",children:[(0,c.jsx)(r.p,{children:"Use the server profile for components that only act as servers (e.g., nats-server, core)."}),(0,c.jsx)(r.p,{children:"Use the client profile for components that act as clients (e.g., agent, poller, kv when connecting to NATS)."}),(0,c.jsx)(r.p,{children:"serviceradar-kv needs client auth for NATS mTLS and server auth for its gRPC service. For simplicity, we use the client profile here since NATS requires it, and the gRPC server accepts it in practice. For strict separation, generate separate client and server certs (e.g., kv-client.pem, kv-server.pem)."})]}),"\n",(0,c.jsx)(r.h2,{id:"certificate-deployment",children:"Certificate Deployment"}),"\n",(0,c.jsx)(r.h3,{id:"role-based-requirements",children:"Role-Based Requirements"}),"\n",(0,c.jsx)(r.p,{children:"Different ServiceRadar components need different certificates based on their role:"}),"\n",(0,c.jsxs)(r.table,{children:[(0,c.jsx)(r.thead,{children:(0,c.jsxs)(r.tr,{children:[(0,c.jsx)(r.th,{children:"Component"}),(0,c.jsx)(r.th,{children:"Role"}),(0,c.jsx)(r.th,{children:"Certificates Needed"})]})}),(0,c.jsxs)(r.tbody,{children:[(0,c.jsxs)(r.tr,{children:[(0,c.jsx)(r.td,{children:"Poller"}),(0,c.jsx)(r.td,{children:"Client+Server"}),(0,c.jsxs)(r.td,{children:[(0,c.jsx)(r.code,{children:"root.pem"}),", ",(0,c.jsx)(r.code,{children:"poller.pem"}),", ",(0,c.jsx)(r.code,{children:"poller-key.pem"})]})]}),(0,c.jsxs)(r.tr,{children:[(0,c.jsx)(r.td,{children:"Agent"}),(0,c.jsx)(r.td,{children:"Client+Server"}),(0,c.jsxs)(r.td,{children:[(0,c.jsx)(r.code,{children:"root.pem"}),", ",(0,c.jsx)(r.code,{children:"agent.pem"}),", ",(0,c.jsx)(r.code,{children:"agent-key.pem"})]})]}),(0,c.jsxs)(r.tr,{children:[(0,c.jsx)(r.td,{children:"Core"}),(0,c.jsx)(r.td,{children:"Server only"}),(0,c.jsxs)(r.td,{children:[(0,c.jsx)(r.code,{children:"root.pem"}),", ",(0,c.jsx)(r.code,{children:"core.pem"}),", ",(0,c.jsx)(r.code,{children:"core-key.pem"})]})]}),(0,c.jsxs)(r.tr,{children:[(0,c.jsx)(r.td,{children:"Checker"}),(0,c.jsx)(r.td,{children:"Server only"}),(0,c.jsxs)(r.td,{children:[(0,c.jsx)(r.code,{children:"root.pem"}),", ",(0,c.jsx)(r.code,{children:"<checker>.pem"}),", ",(0,c.jsx)(r.code,{children:"<checker>-key.pem"})]})]}),(0,c.jsxs)(r.tr,{children:[(0,c.jsx)(r.td,{children:"NATS JetStream"}),(0,c.jsx)(r.td,{children:"Server only"}),(0,c.jsxs)(r.td,{children:[(0,c.jsx)(r.code,{children:"root.pem"}),", ",(0,c.jsx)(r.code,{children:"nats-server.pem"}),", ",(0,c.jsx)(r.code,{children:"nats-server-key.pem"})]})]}),(0,c.jsxs)(r.tr,{children:[(0,c.jsx)(r.td,{children:"serviceradar-kv"}),(0,c.jsx)(r.td,{children:"Client+Server"}),(0,c.jsxs)(r.td,{children:[(0,c.jsx)(r.code,{children:"root.pem"}),", ",(0,c.jsx)(r.code,{children:"kv.pem"}),", ",(0,c.jsx)(r.code,{children:"kv-key.pem"})]})]})]})]}),"\n",(0,c.jsx)(r.h3,{id:"installation-steps",children:"Installation Steps"}),"\n",(0,c.jsxs)(r.ol,{children:["\n",(0,c.jsx)(r.li,{children:"Create the certificates directory:"}),"\n"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"sudo mkdir -p /etc/serviceradar/certs\nsudo chown serviceradar:serviceradar /etc/serviceradar/certs\nsudo chmod 700 /etc/serviceradar/certs\n"})}),"\n",(0,c.jsxs)(r.ol,{start:"2",children:["\n",(0,c.jsx)(r.li,{children:"Deploy certificates"}),"\n"]}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"serviceradar-nats"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"sudo cp root.pem nats-server.pem nats-server-key.pem /etc/serviceradar/certs/\nsudo chown nats:nats /etc/serviceradar/certs/nats-server.pem /etc/serviceradar/certs/nats-server-key.pem\nsudo chmod 644 /etc/serviceradar/certs/nats-server.pem\nsudo chmod 600 /etc/serviceradar/certs/nats-server-key.pem\n"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"serviceradar-kv"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"sudo cp root.pem kv.pem kv-key.pem /etc/serviceradar/certs/\nsudo chown serviceradar:serviceradar /etc/serviceradar/certs/*\nsudo chmod 644 /etc/serviceradar/certs/*.pem\nsudo chmod 600 /etc/serviceradar/certs/*-key.pem\n"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"serviceradar-sync"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"sudo cp root.pem sync.pem sync-key.pem /etc/serviceradar/certs/\nsudo chown serviceradar:serviceradar /etc/serviceradar/certs/*\nsudo chmod 644 /etc/serviceradar/certs/*.pem\nsudo chmod 600 /etc/serviceradar/certs/*-key.pem\n"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"serviceradar-agent"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"sudo cp root.pem agent.pem agent-key.pem /etc/serviceradar/certs/\nsudo chown serviceradar:serviceradar /etc/serviceradar/certs/*\nsudo chmod 644 /etc/serviceradar/certs/*.pem\nsudo chmod 600 /etc/serviceradar/certs/*-key.pem\n"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"serviceradar-poller"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"sudo cp root.pem poller.pem poller-key.pem /etc/serviceradar/certs/\nsudo chown serviceradar:serviceradar /etc/serviceradar/certs/*\nsudo chmod 644 /etc/serviceradar/certs/*.pem\nsudo chmod 600 /etc/serviceradar/certs/*-key.pem\n"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"serviceradar-core"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"sudo cp root.pem core.pem core-key.pem /etc/serviceradar/certs/\nsudo chown serviceradar:serviceradar /etc/serviceradar/certs/*\nsudo chmod 644 /etc/serviceradar/certs/*.pem\nsudo chmod 600 /etc/serviceradar/certs/*-key.pem\n"})}),"\n",(0,c.jsxs)(r.p,{children:[(0,c.jsx)(r.strong,{children:"serviceradar-<checker>"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"sudo cp root.pem <checker>.pem <checker>-key.pem /etc/serviceradar/certs/\nsudo chown serviceradar:serviceradar /etc/serviceradar/certs/*\nsudo chmod 644 /etc/serviceradar/certs/*.pem\nsudo chmod 600 /etc/serviceradar/certs/*-key.pem\n"})}),"\n",(0,c.jsxs)(r.ol,{start:"3",children:["\n",(0,c.jsx)(r.li,{children:"Set permissions:"}),"\n"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"sudo chown serviceradar:serviceradar /etc/serviceradar/certs/*\nsudo chmod 644 /etc/serviceradar/certs/*.pem\nsudo chmod 600 /etc/serviceradar/certs/*-key.pem\n"})}),"\n",(0,c.jsx)(r.h4,{id:"grant-nats-access-if-co-located",children:"Grant NATS Access (if co-located):"}),"\n",(0,c.jsx)(r.p,{children:"If NATS runs on the same server as other components, add the nats user to the serviceradar group:"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"# Add the nats user to the serviceradar group\nsudo usermod -aG serviceradar nats\n# Ensure the directory is group-readable:\nsudo chmod 750 /etc/serviceradar/certs\n"})}),"\n",(0,c.jsx)(r.h3,{id:"expected-directory-structure",children:"Expected Directory Structure"}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"NATS Server (standalone):"}),"\n"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{children:"/etc/serviceradar/certs/\n\u251c\u2500\u2500 root.pem           (644, serviceradar:serviceradar)\n\u251c\u2500\u2500 nats-server.pem    (644, nats:nats)\n\u2514\u2500\u2500 nats-server-key.pem (600, nats:nats)\n"})}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"Full Deployment (e.g., Agent + KV + Sync + NATS co-located)"}),"\n"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"/etc/serviceradar/certs/\n\u251c\u2500\u2500 root.pem           (644, serviceradar:serviceradar)\n\u251c\u2500\u2500 agent.pem          (644, serviceradar:serviceradar)\n\u251c\u2500\u2500 agent-key.pem      (600, serviceradar:serviceradar)\n\u251c\u2500\u2500 kv.pem             (644, serviceradar:serviceradar)\n\u251c\u2500\u2500 kv-key.pem         (600, serviceradar:serviceradar)\n\u251c\u2500\u2500 sync.pem           (644, serviceradar:serviceradar)\n\u251c\u2500\u2500 sync-key.pem       (600, serviceradar:serviceradar)\n\u251c\u2500\u2500 nats-server.pem    (644, nats:nats)\n\u2514\u2500\u2500 nats-server-key.pem (600, nats:nats)\n"})}),"\n",(0,c.jsx)(r.p,{children:"Full deployment (Poller/Agent/serviceradar-kv):"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"/etc/serviceradar/certs/\n\u251c\u2500\u2500 root.pem           (644)\n\u251c\u2500\u2500 server.pem         (644)\n\u251c\u2500\u2500 server-key.pem     (600)\n\u251c\u2500\u2500 client.pem         (644)\n\u2514\u2500\u2500 client-key.pem     (600)\n"})}),"\n",(0,c.jsx)(r.h2,{id:"component-configuration",children:"Component Configuration"}),"\n",(0,c.jsx)(r.h3,{id:"agent-configuration",children:"Agent Configuration"}),"\n",(0,c.jsxs)(r.p,{children:["Update ",(0,c.jsx)(r.code,{children:"/etc/serviceradar/agent.json"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "checkers_dir": "/etc/serviceradar/checkers",\n  "listen_addr": "<agent-ip>:50051",\n  "service_type": "grpc",\n  "service_name": "AgentService",\n  "security": {\n    "mode": "mtls",\n    "cert_dir": "/etc/serviceradar/certs",\n    "server_name": "kv.serviceradar",\n    "role": "agent",\n    "tls": {\n      "cert_file": "agent.pem",\n      "key_file": "agent-key.pem",\n      "ca_file": "root.pem"\n    }\n  }\n}\n'})}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:["Set ",(0,c.jsx)(r.code,{children:"mode"})," to ",(0,c.jsx)(r.code,{children:"mtls"})]}),"\n",(0,c.jsxs)(r.li,{children:["Set ",(0,c.jsx)(r.code,{children:"server_name"})," to the hostname/IP address of the poller"]}),"\n",(0,c.jsxs)(r.li,{children:["Set ",(0,c.jsx)(r.code,{children:"role"})," to ",(0,c.jsx)(r.code,{children:"agent"})]}),"\n"]}),"\n",(0,c.jsx)(r.h3,{id:"poller-configuration",children:"Poller Configuration"}),"\n",(0,c.jsxs)(r.p,{children:["Update ",(0,c.jsx)(r.code,{children:"/etc/serviceradar/poller.json"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "agents": {\n    "local-agent": {\n      "address": "<agent-ip>:50051",\n      "security": {\n        "server_name": "agent.serviceradar",\n        "mode": "mtls",\n        "tls": {\n          "cert_file": "poller.pem",\n          "key_file": "poller-key.pem",\n          "ca_file": "root.pem"\n        }\n      },\n      "checks": []\n    }\n  },\n  "core_address": "<core-ip>:50052",\n  "listen_addr": "<poller-ip>:50053",\n  "poll_interval": "30s",\n  "poller_id": "my-poller",\n  "service_name": "PollerService",\n  "service_type": "grpc",\n  "security": {\n    "mode": "mtls",\n    "cert_dir": "/etc/serviceradar/certs",\n    "server_name": "core.serviceradar",\n    "role": "poller",\n    "tls": {\n      "cert_file": "poller.pem",\n      "key_file": "poller-key.pem",\n      "ca_file": "root.pem"\n    }\n  }\n}\n'})}),"\n",(0,c.jsx)(r.h3,{id:"core-configuration",children:"Core Configuration"}),"\n",(0,c.jsxs)(r.p,{children:["Update ",(0,c.jsx)(r.code,{children:"/etc/serviceradar/core.json"}),":"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "listen_addr": ":8090",\n  "grpc_addr": "<core-ip>:50052",\n  "alert_threshold": "5m",\n  "known_pollers": ["default-poller"],\n  "metrics": {\n    "enabled": true,\n    "retention": 100,\n    "max_nodes": 10000\n  },\n  "security": {\n    "mode": "mtls",\n    "cert_dir": "/etc/serviceradar/certs",\n    "server_name": "core.serviceradar",\n    "role": "core",\n    "tls": {\n      "cert_file": "core.pem",\n      "key_file": "core-key.pem",\n      "ca_file": "root.pem"\n    }\n  }\n}\n'})}),"\n",(0,c.jsx)(r.h3,{id:"nats-jetstream-configuration",children:"NATS JetStream Configuration"}),"\n",(0,c.jsxs)(r.p,{children:["The NATS Server configuration is already set up with mTLS in ",(0,c.jsx)(r.code,{children:"/etc/nats/nats-server.conf"}),"\n(see the Installation Guide (./installation.md)). Ensure the certificates are correctly placed in\n",(0,c.jsx)(r.code,{children:"/etc/serviceradar/certs/"})," as described above."]}),"\n",(0,c.jsx)(r.h3,{id:"serviceradar-kv-configuration",children:"serviceradar-kv Configuration"}),"\n",(0,c.jsxs)(r.p,{children:["Update ",(0,c.jsx)(r.code,{children:"/etc/serviceradar/kv.json"})," to enable mTLS for both the gRPC service and the connection to NATS:"]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "listen_addr": ":50054",\n  "nats_url": "nats://nats-serviceradar:4222",\n  "security": {\n    "mode": "mtls",\n    "cert_dir": "/etc/serviceradar/certs",\n    "server_name": "kv.serviceradar",\n    "role": "server"\n  },\n  "rbac": {\n    "roles": [\n      {\n        "identity": "CN=sync.serviceradar,O=Carver Automation",\n        "role": "writer"\n      },\n      {\n        "identity": "CN=agent.serviceradar,O=Carver Automation",\n        "role": "reader"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:["Set ",(0,c.jsx)(r.code,{children:"nats_url"})," to the NATS Server address, ensuring the hostname matches the ",(0,c.jsx)(r.code,{children:"CN"})," in ",(0,c.jsx)(r.code,{children:"nats-server.pem"}),"."]}),"\n",(0,c.jsxs)(r.li,{children:["Ensure mode is set to ",(0,c.jsx)(r.code,{children:"mtls"})," to enable mTLS for the gRPC service."]}),"\n",(0,c.jsxs)(r.li,{children:["The ",(0,c.jsx)(r.code,{children:"serviceradar-kv"})," service will automatically use the client certificates (",(0,c.jsx)(r.code,{children:"client.pem"})," and ",(0,c.jsx)(r.code,{children:"client-key.pem"}),") to connect to NATS with mTLS."]}),"\n"]}),"\n",(0,c.jsx)(r.h2,{id:"verification",children:"Verification"}),"\n",(0,c.jsx)(r.p,{children:"Verify your installation with:"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"ls -la /etc/serviceradar/certs/\n"})}),"\n",(0,c.jsx)(r.p,{children:"Example output (Core instance with NATS):"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{children:"total 20\ndrwx------ 2 serviceradar serviceradar 4096 Feb 21 20:46 .\ndrwxr-xr-x 3 serviceradar serviceradar 4096 Feb 21 22:35 ..\n-rw-r--r-- 1 serviceradar serviceradar  920 Feb 21 04:47 root.pem\n-rw------- 1 serviceradar serviceradar  227 Feb 21 20:44 server-key.pem\n-rw-r--r-- 1 serviceradar serviceradar  928 Feb 21 20:45 server.pem\n-rw------- 1 serviceradar serviceradar  227 Feb 21 20:44 nats-server-key.pem\n-rw-r--r-- 1 serviceradar serviceradar  928 Feb 21 20:45 nats-server.pem\n"})}),"\n",(0,c.jsx)(r.p,{children:"Verify the NATS Server connection:"}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"# Install the NATS CLI if not already installed\ngo install github.com/nats-io/natscli/nats@latest\n\n# Test the connection to NATS with mTLS\nnats server check --server nats://nats-serviceradar:4222 \\\n  --tls-cert /etc/serviceradar/certs/client.pem \\\n  --tls-key /etc/serviceradar/certs/client-key.pem \\\n  --tls-ca /etc/serviceradar/certs/root.pem\n"})}),"\n",(0,c.jsx)(r.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,c.jsx)(r.p,{children:"Common issues and solutions:"}),"\n",(0,c.jsxs)(r.ol,{children:["\n",(0,c.jsxs)(r.li,{children:["\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Permission denied"})}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:["Verify directory permissions: ",(0,c.jsx)(r.code,{children:"700"})]}),"\n",(0,c.jsxs)(r.li,{children:["Verify file permissions: ",(0,c.jsx)(r.code,{children:"644"})," for certificates, ",(0,c.jsx)(r.code,{children:"600"})," for keys"]}),"\n",(0,c.jsxs)(r.li,{children:["Check ownership: ",(0,c.jsx)(r.code,{children:"serviceradar:serviceradar"})]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(r.li,{children:["\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Certificate not found"})}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"Confirm all required certificates for the role are present"}),"\n",(0,c.jsx)(r.li,{children:"Double-check file paths in configuration"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(r.li,{children:["\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Invalid certificate"})}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"Ensure certificates are properly formatted PEM files"}),"\n",(0,c.jsx)(r.li,{children:"Verify certificates were generated with correct profiles"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(r.li,{children:["\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Connection refused"})}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"Verify server name in config matches certificate CN"}),"\n",(0,c.jsx)(r.li,{children:"Check that all required certificates are present for the role"}),"\n",(0,c.jsx)(r.li,{children:"Confirm service has proper read permissions"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(r.li,{children:["\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"Testing with grpcurl"})}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:["Install grpcurl: ",(0,c.jsx)(r.code,{children:"go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest"})]}),"\n",(0,c.jsxs)(r.li,{children:["Test health check endpoint with mTLS:","\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-bash",children:"grpcurl -cacert root.pem \\\n        -cert client.pem \\\n        -key client-key.pem \\\n        -servername <SERVER_IP> \\\n        <SERVER_IP>:50052 \\\n        grpc.health.v1.Health/Check\n"})}),"\n"]}),"\n",(0,c.jsxs)(r.li,{children:["Successful response should show:","\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-json",children:'{\n  "status": "SERVING"\n}\n'})}),"\n"]}),"\n",(0,c.jsxs)(r.li,{children:["If this fails but certificates are correct, verify:","\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsx)(r.li,{children:"Server is running and listening on specified port"}),"\n",(0,c.jsx)(r.li,{children:"Firewall rules allow the connection"}),"\n",(0,c.jsx)(r.li,{children:"The servername matches the certificate's Common Name (CN)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(r.li,{children:["\n",(0,c.jsx)(r.p,{children:(0,c.jsx)(r.strong,{children:"NATS Connection Issues"})}),"\n",(0,c.jsxs)(r.ul,{children:["\n",(0,c.jsxs)(r.li,{children:["Check NATS Server logs: ",(0,c.jsx)(r.code,{children:"sudo cat /var/log/nats/nats.log"})]}),"\n",(0,c.jsxs)(r.li,{children:["Verify the NATS URL in ",(0,c.jsx)(r.code,{children:"/etc/serviceradar/kv.json"})," matches the hostname in ",(0,c.jsx)(r.code,{children:"nats-server.pem"}),"."]}),"\n",(0,c.jsx)(r.li,{children:"Ensure the client certificates are valid and trusted by the NATS Server."}),"\n",(0,c.jsx)(r.li,{children:"Test the connection using the NATS CLI as shown in the Verification section."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},3881:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>t});var s=n(8101);const c={},i=s.createContext(c);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);