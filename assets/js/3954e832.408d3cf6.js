"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5112],{3881:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var i=n(8101);const s={},t=i.createContext(s);function o(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:r},e.children)}},9385:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"self-signed","title":"SSL Configuration for Nginx","description":"ServiceRadar supports secure HTTPS connections through Nginx with SSL certificates. This guide explains how to configure Nginx to use SSL certificates for securing your ServiceRadar web interface.","source":"@site/docs/self-signed.md","sourceDirName":".","slug":"/self-signed","permalink":"/docs/self-signed","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"sidebar_position":12,"title":"SSL Configuration for Nginx"},"sidebar":"tutorialSidebar","previous":{"title":"Service Port Map","permalink":"/docs/service-port-map"}}');var s=n(5105),t=n(3881);const o={sidebar_position:12,title:"SSL Configuration for Nginx"},a="SSL Configuration for Nginx",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Certificate Generation",id:"certificate-generation",level:2},{value:"Installing Certificates",id:"installing-certificates",level:2},{value:"Configuring Nginx for SSL",id:"configuring-nginx-for-ssl",level:2},{value:"Firewall Configuration",id:"firewall-configuration",level:2},{value:"Browser Security Warnings",id:"browser-security-warnings",level:2},{value:"Using Let&#39;s Encrypt (For Production)",id:"using-lets-encrypt-for-production",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Certificate Problems",id:"certificate-problems",level:3},{value:"Nginx Configuration Issues",id:"nginx-configuration-issues",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"ssl-configuration-for-nginx",children:"SSL Configuration for Nginx"})}),"\n",(0,s.jsx)(r.p,{children:"ServiceRadar supports secure HTTPS connections through Nginx with SSL certificates. This guide explains how to configure Nginx to use SSL certificates for securing your ServiceRadar web interface."}),"\n",(0,s.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(r.p,{children:"Securing your ServiceRadar web interface with HTTPS provides:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Encrypted communication between browsers and your ServiceRadar instance"}),"\n",(0,s.jsx)(r.li,{children:"Protection of sensitive monitoring data and authentication credentials"}),"\n",(0,s.jsx)(r.li,{children:"Prevention of man-in-the-middle attacks"}),"\n",(0,s.jsx)(r.li,{children:"Browser security indicators showing the connection is secure"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"While production environments should ideally use certificates from trusted certificate authorities, self-signed certificates are suitable for internal deployments, testing environments, or scenarios where trusted certificates aren't practical."}),"\n",(0,s.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"ServiceRadar with Web UI and Nginx installed"}),"\n",(0,s.jsx)(r.li,{children:"Root or sudo access to the server"}),"\n",(0,s.jsx)(r.li,{children:"SSL certificates (self-signed or from a certificate authority)"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"certificate-generation",children:"Certificate Generation"}),"\n",(0,s.jsxs)(r.p,{children:["ServiceRadar already provides comprehensive instructions for generating certificates in the ",(0,s.jsx)(r.a,{href:"/docs/tls-security",children:"TLS Security"})," documentation. You can use those same certificates for securing your Nginx configuration."]}),"\n",(0,s.jsx)(r.p,{children:"If you've already generated certificates for other ServiceRadar components using the instructions in the TLS Security section, you can reuse them for Nginx. Otherwise, follow those instructions to generate your certificates first, then return to this guide to configure Nginx."}),"\n",(0,s.jsx)(r.p,{children:"Alternatively, you can generate a simple self-signed certificate using OpenSSL:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# Create directory for certificates if not exists\nsudo mkdir -p /etc/ssl/certs /etc/ssl/private\n\n# Generate private key\nsudo openssl genrsa -out /etc/ssl/private/serviceradar.key 2048\n\n# Generate certificate signing request (CSR)\nsudo openssl req -new -key /etc/ssl/private/serviceradar.key -out /etc/ssl/certs/serviceradar.csr\n\n# Generate self-signed certificate valid for 365 days\nsudo openssl x509 -req -days 365 -in /etc/ssl/certs/serviceradar.csr \\\n    -signkey /etc/ssl/private/serviceradar.key \\\n    -out /etc/ssl/certs/serviceradar.crt\n\n# Set proper permissions\nsudo chmod 600 /etc/ssl/private/serviceradar.key\nsudo chmod 644 /etc/ssl/certs/serviceradar.crt\n"})}),"\n",(0,s.jsxs)(r.p,{children:["When generating the CSR, you'll be prompted for information like country, state, organization, and common name. For the Common Name (CN), enter your server's domain name (e.g., ",(0,s.jsx)(r.code,{children:"serviceradar.example.com"}),")."]}),"\n",(0,s.jsx)(r.h2,{id:"installing-certificates",children:"Installing Certificates"}),"\n",(0,s.jsx)(r.p,{children:"Once you have your certificates, install them in the appropriate location:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"sudo mkdir -p /etc/ssl/certs /etc/ssl/private\nsudo mv web.pem /etc/ssl/certs/\nsudo mv web-key.pem /etc/ssl/private/\nsudo chmod 644 /etc/ssl/certs/web.pem\nsudo chmod 600 /etc/ssl/private/web-key.pem\n"})}),"\n",(0,s.jsx)(r.h2,{id:"configuring-nginx-for-ssl",children:"Configuring Nginx for SSL"}),"\n",(0,s.jsx)(r.p,{children:"Update your Nginx configuration to use SSL:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Edit or create the ServiceRadar Nginx configuration file:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"sudo nano /etc/nginx/conf.d/serviceradar-web.conf\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsx)(r.li,{children:"Replace the content with the following configuration:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-nginx",children:'# ServiceRadar Web Interface - Nginx Configuration\n# HTTPS Server Block\nserver {\n    listen 443 ssl;\n    server_name serviceradar.example.com serviceradar;\n    \n    # Paths to your self-signed certificate and key\n    ssl_certificate /etc/ssl/certs/web.pem;\n    ssl_certificate_key /etc/ssl/private/web-key.pem;\n    \n    # SSL security settings\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers on;\n    \n    # Static assets\n    location /_next/ {\n        proxy_pass http://127.0.0.1:3000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n    \n    # API routes handled by Next.js\n    location ~ ^/api/(auth|pollers|status) {\n        proxy_pass http://127.0.0.1:3000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n    \n    # Backend API routes\n    location /api/ {\n        proxy_pass http://localhost:8090;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n    \n    # Auth API routes\n    location /auth/ {\n        proxy_pass http://localhost:8090;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;\n        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-API-Key" always;\n    }\n    \n    # Main app\n    location / {\n        proxy_pass http://127.0.0.1:3000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n\n# HTTP Server Block (Redirect to HTTPS)\nserver {\n    listen 80;\n    server_name serviceradar.example.com serviceradar;\n    return 301 https://$host$request_uri;\n}\n'})}),"\n",(0,s.jsxs)(r.p,{children:["Replace ",(0,s.jsx)(r.code,{children:"serviceradar.example.com"})," with your actual domain name and remove or replace ",(0,s.jsx)(r.code,{children:"serviceradar"})," with your actual hostname if different."]}),"\n",(0,s.jsxs)(r.ol,{start:"3",children:["\n",(0,s.jsx)(r.li,{children:"Test the Nginx configuration:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"sudo nginx -t\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"4",children:["\n",(0,s.jsx)(r.li,{children:"If the test is successful, restart Nginx:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"sudo systemctl restart nginx\n"})}),"\n",(0,s.jsx)(r.h2,{id:"firewall-configuration",children:"Firewall Configuration"}),"\n",(0,s.jsx)(r.p,{children:"If you're using a firewall, ensure that port 443 (HTTPS) is open:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# For UFW (Ubuntu)\nsudo ufw allow 443/tcp\n\n# For firewalld (RHEL/Oracle Linux)\nsudo firewall-cmd --permanent --add-port=443/tcp\nsudo firewall-cmd --reload\n"})}),"\n",(0,s.jsx)(r.h2,{id:"browser-security-warnings",children:"Browser Security Warnings"}),"\n",(0,s.jsx)(r.p,{children:"When using self-signed certificates, browsers will display security warnings because the certificate isn't issued by a trusted certificate authority. This is normal and expected."}),"\n",(0,s.jsx)(r.p,{children:"To proceed to your ServiceRadar instance:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:'In Chrome: Click "Advanced" and then "Proceed to [site] (unsafe)"'}),"\n",(0,s.jsx)(r.li,{children:'In Firefox: Click "Advanced" > "Accept the Risk and Continue"'}),"\n",(0,s.jsx)(r.li,{children:'In Edge: Click "Details" > "Go on to the webpage (not recommended)"'}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"For production environments, consider obtaining a certificate from a trusted certificate authority like Let's Encrypt."}),"\n",(0,s.jsx)(r.h2,{id:"using-lets-encrypt-for-production",children:"Using Let's Encrypt (For Production)"}),"\n",(0,s.jsx)(r.p,{children:"For public-facing ServiceRadar instances, Let's Encrypt provides free, trusted certificates:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# Install certbot\nsudo apt install certbot python3-certbot-nginx\n\n# Obtain and install certificate\nsudo certbot --nginx -d serviceradar.example.com\n\n# Certificate renewal will be handled automatically by a systemd timer\n"})}),"\n",(0,s.jsx)(r.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(r.h3,{id:"certificate-problems",children:"Certificate Problems"}),"\n",(0,s.jsx)(r.p,{children:"If you encounter certificate-related issues:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Verify certificate permissions:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"ls -la /etc/ssl/certs/web.pem\nls -la /etc/ssl/private/web-key.pem\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsx)(r.li,{children:"Check certificate details:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"openssl x509 -in /etc/ssl/certs/web.pem -text -noout\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"3",children:["\n",(0,s.jsx)(r.li,{children:"Verify that the hostname in the certificate matches your server's hostname."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"nginx-configuration-issues",children:"Nginx Configuration Issues"}),"\n",(0,s.jsx)(r.p,{children:"If Nginx fails to start:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Check the Nginx error log:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"sudo tail -f /var/log/nginx/error.log\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsx)(r.li,{children:"Verify the Nginx configuration:"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"sudo nginx -t\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"3",children:["\n",(0,s.jsx)(r.li,{children:"Ensure the certificate paths in the Nginx configuration match the actual paths."}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Configure ",(0,s.jsx)(r.a,{href:"/docs/auth-configuration",children:"Authentication"})," for your secure ServiceRadar instance"]}),"\n",(0,s.jsxs)(r.li,{children:["Set up ",(0,s.jsx)(r.a,{href:"/docs/auth-configuration#cors-configuration",children:"CORS Configuration"})," to control API access"]}),"\n",(0,s.jsxs)(r.li,{children:["Learn about ",(0,s.jsx)(r.a,{href:"/docs/architecture",children:"ServiceRadar Architecture"})]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);