"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6803],{687:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"installation","title":"Installation Guide","description":"ServiceRadar components are distributed as Debian packages for Ubuntu/Debian systems and RPM packages for RHEL/Oracle Linux systems. Below are the recommended installation steps for different deployment scenarios.","source":"@site/docs/installation.md","sourceDirName":".","slug":"/installation","permalink":"/docs/installation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Installation Guide"},"sidebar":"tutorialSidebar","previous":{"title":"ServiceRadar Introduction","permalink":"/docs/intro"},"next":{"title":"Configuration Basics","permalink":"/docs/configuration"}}');var a=r(5105),t=r(3881);const i={sidebar_position:2,title:"Installation Guide"},l="Installation Guide",o={},c=[{value:"Debian/Ubuntu Installation",id:"debianubuntu-installation",level:2},{value:"Standard Setup (Recommended)",id:"standard-setup-recommended",level:3},{value:"Optional Components",id:"optional-components",level:3},{value:"NATS JetStream for KV Store (Optional)",id:"nats-jetstream-for-kv-store-optional",level:4},{value:"Step 1: Install the NATS Server",id:"step-1-install-the-nats-server",level:5},{value:"Step 2: Set Up NATS Server with <code>serviceradar-nats</code>",id:"step-2-set-up-nats-server-with-serviceradar-nats",level:5},{value:"Alternative: Manual NATS Server Configuration",id:"alternative-manual-nats-server-configuration",level:5},{value:"Install ServiceRadar KV Service",id:"install-serviceradar-kv-service",level:5},{value:"SNMP Monitoring",id:"snmp-monitoring",level:4},{value:"Dusk Node Monitoring",id:"dusk-node-monitoring",level:4},{value:"Distributed Setup",id:"distributed-setup",level:3},{value:"Verification",id:"verification",level:3},{value:"Firewall Configuration",id:"firewall-configuration",level:3},{value:"SELinux Configuration (if enabled)",id:"selinux-configuration-if-enabled",level:3},{value:"RHEL/Oracle Linux Installation",id:"rheloracle-linux-installation",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"System Requirements",id:"system-requirements",level:4},{value:"Required Packages",id:"required-packages",level:4},{value:"Standard Setup (Recommended)",id:"standard-setup-recommended-1",level:3},{value:"1. Download the RPM packages",id:"1-download-the-rpm-packages",level:4},{value:"2. Install Core Service",id:"2-install-core-service",level:4},{value:"3. Install Web UI",id:"3-install-web-ui",level:4},{value:"4. Install Agent and Poller",id:"4-install-agent-and-poller",level:4},{value:"Distributed Setup",id:"distributed-setup-1",level:3},{value:"Optional Components",id:"optional-components-1",level:3},{value:"Install NATS Server for KV Store (Optional)",id:"install-nats-server-for-kv-store-optional",level:4},{value:"Step 1: Install the NATS Server with <code>serviceradar-nats</code>",id:"step-1-install-the-nats-server-with-serviceradar-nats",level:5},{value:"Install ServiceRadar KV Service",id:"install-serviceradar-kv-service-1",level:5},{value:"SNMP Monitoring and Dusk Node Monitoring",id:"snmp-monitoring-and-dusk-node-monitoring",level:4},{value:"Post-Installation Configuration",id:"post-installation-configuration",level:3},{value:"Firewall Configuration",id:"firewall-configuration-1",level:4},{value:"SELinux Configuration",id:"selinux-configuration",level:4},{value:"Verify Services",id:"verify-services",level:3},{value:"Accessing the Dashboard",id:"accessing-the-dashboard",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Service Won&#39;t Start",id:"service-wont-start",level:3},{value:"Node.js Issues (Web UI)",id:"nodejs-issues-web-ui",level:3},{value:"SELinux Issues (RHEL/Oracle Linux)",id:"selinux-issues-rheloracle-linux",level:3},{value:"Nginx Connection Issues",id:"nginx-connection-issues",level:3},{value:"NATS Connection Issues",id:"nats-connection-issues",level:3},{value:"Uninstallation",id:"uninstallation",level:3},{value:"Debian/Ubuntu:",id:"debianubuntu",level:4},{value:"RHEL/Oracle Linux:",id:"rheloracle-linux",level:4},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"installation-guide",children:"Installation Guide"})}),"\n",(0,a.jsx)(n.p,{children:"ServiceRadar components are distributed as Debian packages for Ubuntu/Debian systems and RPM packages for RHEL/Oracle Linux systems. Below are the recommended installation steps for different deployment scenarios."}),"\n",(0,a.jsx)(n.h2,{id:"debianubuntu-installation",children:"Debian/Ubuntu Installation"}),"\n",(0,a.jsx)(n.h3,{id:"standard-setup-recommended",children:"Standard Setup (Recommended)"}),"\n",(0,a.jsx)(n.p,{children:"Install these components on your monitored host:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Download and install agent and poller components\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-agent_1.0.27.deb \\\n     -O https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-poller_1.0.27.deb\n\nsudo dpkg -i serviceradar-agent_1.0.27.deb serviceradar-poller_1.0.27.deb\n"})}),"\n",(0,a.jsx)(n.p,{children:"On a separate machine (recommended) or the same host for the core service:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Download and install core service\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-core_1.0.27.deb\nsudo dpkg -i serviceradar-core_1.0.27.deb\n"})}),"\n",(0,a.jsx)(n.p,{children:"To install the web UI (dashboard):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Download and install web UI\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-web_1.0.27.deb\nsudo dpkg -i serviceradar-web_1.0.27.deb\n"})}),"\n",(0,a.jsx)(n.h3,{id:"optional-components",children:"Optional Components"}),"\n",(0,a.jsx)(n.h4,{id:"nats-jetstream-for-kv-store-optional",children:"NATS JetStream for KV Store (Optional)"}),"\n",(0,a.jsx)(n.p,{children:"ServiceRadar can use NATS JetStream as a key-value (KV) store for dynamic configuration management,\nenabling real-time updates without service restarts. This requires two components:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"The NATS Server binary"}),"\n",(0,a.jsx)(n.li,{children:"ServiceRadar's NATS configuration package"}),"\n"]}),"\n",(0,a.jsx)(n.h5,{id:"step-1-install-the-nats-server",children:"Step 1: Install the NATS Server"}),"\n",(0,a.jsx)(n.p,{children:"First, download and install the official NATS Server package:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Download the NATS Server Debian package\ncurl -LO https://github.com/nats-io/nats-server/releases/download/v2.11.0/nats-server-v2.11.0-amd64.deb\n\n# Install the package\nsudo dpkg -i nats-server-v2.11.0-amd64.deb\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This installs the NATS Server binary to ",(0,a.jsx)(n.code,{children:"/usr/bin/nats-server"})," but does not start the service automatically."]}),"\n",(0,a.jsxs)(n.h5,{id:"step-2-set-up-nats-server-with-serviceradar-nats",children:["Step 2: Set Up NATS Server with ",(0,a.jsx)(n.code,{children:"serviceradar-nats"})]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"serviceradar-nats"})," package provides the necessary configuration files, systemd service, and directory setup to enable\nNATS Server to start automatically with mTLS enabled."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Download and install the serviceradar-nats package\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-nats_1.0.27.deb\nsudo dpkg -i serviceradar-nats_1.0.27.deb\n"})}),"\n",(0,a.jsx)(n.p,{children:"The serviceradar-nats package automatically:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Creates a configuration file at /etc/nats/nats-server.conf with mTLS enabled"}),"\n",(0,a.jsx)(n.li,{children:"Sets up a hardened systemd service (nats.service) to manage the NATS Server"}),"\n",(0,a.jsx)(n.li,{children:"Creates necessary directories (/var/lib/nats/jetstream for JetStream data, /var/log/nats for logs)"}),"\n",(0,a.jsx)(n.li,{children:"Configures permissions for the nats user"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Verify the NATS Server is running:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status nats\n"})}),"\n",(0,a.jsx)(n.h5,{id:"alternative-manual-nats-server-configuration",children:"Alternative: Manual NATS Server Configuration"}),"\n",(0,a.jsx)(n.p,{children:"If you prefer to configure NATS Server manually, you can create the configuration file and set up the service yourself:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Create the configuration file:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo mkdir -p /etc/nats\nsudo touch /etc/nats/nats-server.conf\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Add the following configuration:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'# NATS Server Configuration for ServiceRadar\njetstream {\n    store_dir: "/var/lib/nats/jetstream"\n}\n\nserver_name: nats-serviceradar\nlisten: 127.0.0.1:4222  # Default to localhost only for security\n\n# TLS Configuration\ntls {\n    cert_file: "/etc/serviceradar/certs/nats-server.pem"\n    key_file: "/etc/serviceradar/certs/nats-server-key.pem"\n    ca_file: "/etc/serviceradar/certs/root.pem"\n    verify: true\n}\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"Create a hardened systemd service file:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo touch /etc/systemd/system/nats.service\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsx)(n.li,{children:"Add the following service definition with proper security hardening:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"[Unit]\nDescription=NATS Server for ServiceRadar\nAfter=network-online.target ntp.service\n\n[Service]\nType=simple\nExecStart=/usr/bin/nats-server -c /etc/nats/nats-server.conf\nExecReload=/bin/kill -s HUP $MAINPID\nExecStop=/bin/kill -s SIGINT $MAINPID\n\nUser=nats\nGroup=nats\n\nRestart=always\nRestartSec=5\nKillSignal=SIGUSR2\nLimitNOFILE=800000\n\n# Security hardening\nCapabilityBoundingSet=\nLockPersonality=true\nMemoryDenyWriteExecute=true\nNoNewPrivileges=true\nPrivateDevices=true\nPrivateTmp=true\nPrivateUsers=true\nProcSubset=pid\nProtectClock=true\nProtectControlGroups=true\nProtectHome=true\nProtectHostname=true\nProtectKernelLogs=true\nProtectKernelModules=true\nProtectKernelTunables=true\nProtectSystem=strict\nReadOnlyPaths=\nRestrictAddressFamilies=AF_INET AF_INET6\nRestrictNamespaces=true\nRestrictRealtime=true\nRestrictSUIDSGID=true\nSystemCallFilter=@system-service ~@privileged ~@resources\nUMask=0077\n\n# Specific writable paths\nReadWritePaths=/var/lib/nats\n\n[Install]\nWantedBy=multi-user.target\nAlias=nats.service\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"5",children:["\n",(0,a.jsx)(n.li,{children:"Create the nats user and necessary directories:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo useradd -r -s /bin/false nats\nsudo mkdir -p /var/lib/nats/jetstream /var/log/nats\nsudo chown -R nats:nats /var/lib/nats /var/log/nats\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"6",children:["\n",(0,a.jsx)(n.li,{children:"Start and enable the service:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable nats\nsudo systemctl start nats\n"})}),"\n",(0,a.jsx)(n.h5,{id:"install-serviceradar-kv-service",children:"Install ServiceRadar KV Service"}),"\n",(0,a.jsxs)(n.p,{children:["To enable the KV store functionality in ServiceRadar, install the ",(0,a.jsx)(n.code,{children:"serviceradar-kv"})," package:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-kv_1.0.27.deb\nsudo dpkg -i serviceradar-kv_1.0.27.deb\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Security Note:"})," By default, the NATS Server is configured to listen only on the loopback interface (127.0.0.1) for security, preventing external network access. ServiceRadar's KV service communicates with NATS Server locally, so you don't need to open port 4222 in your firewall unless NATS Server needs to be accessed from other hosts. This configuration significantly enhances the security of your deployment."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"snmp-monitoring",children:"SNMP Monitoring"}),"\n",(0,a.jsx)(n.p,{children:"For collecting and visualizing metrics from network devices:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-snmp-checker_1.0.27.deb\nsudo dpkg -i serviceradar-snmp-checker_1.0.27.deb\n"})}),"\n",(0,a.jsx)(n.h4,{id:"dusk-node-monitoring",children:"Dusk Node Monitoring"}),"\n",(0,a.jsxs)(n.p,{children:["For specialized monitoring of ",(0,a.jsx)(n.a,{href:"https://dusk.network/",children:"Dusk Network"})," nodes:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-dusk-checker_1.0.27.deb\nsudo dpkg -i serviceradar-dusk-checker_1.0.27.deb\n"})}),"\n",(0,a.jsx)(n.h3,{id:"distributed-setup",children:"Distributed Setup"}),"\n",(0,a.jsx)(n.p,{children:"For larger deployments, install components on separate hosts:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"On monitored hosts"})," (install only the agent):"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-agent_1.0.27.deb\nsudo dpkg -i serviceradar-agent_1.0.27.deb\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"On monitoring host"})," (install the poller):"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-poller_1.0.27.deb\nsudo dpkg -i serviceradar-poller_1.0.27.deb\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"On core host"})," (install the core service):"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-core_1.0.27.deb\nsudo dpkg -i serviceradar-core_1.0.27.deb\n"})}),"\n",(0,a.jsx)(n.h3,{id:"verification",children:"Verification"}),"\n",(0,a.jsx)(n.p,{children:"After installation, verify the services are running:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check agent status\nsystemctl status serviceradar-agent\n\n# Check poller status\nsystemctl status serviceradar-poller\n\n# Check core status\nsystemctl status serviceradar-core\n\n# Check NATS Server status (if installed)\nsystemctl status nats\n\n# Check KV service status (if installed)\nsystemctl status serviceradar-kv\n"})}),"\n",(0,a.jsx)(n.h3,{id:"firewall-configuration",children:"Firewall Configuration"}),"\n",(0,a.jsx)(n.p,{children:"If you're using UFW (Ubuntu's Uncomplicated Firewall), add these rules:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# On agent hosts\nsudo ufw allow 50051/tcp  # For agent gRPC server\nsudo ufw allow 50052/tcp  # For Dusk checker (if applicable)\n\n# On core host\nsudo ufw allow 50052/tcp  # For poller connections\nsudo ufw allow 8090/tcp   # For API (internal use)\n\n# If running web UI\nsudo ufw allow 80/tcp     # For web interface\n\n# If using NATS JetStream for KV store\nsudo ufw allow 50054/tcp  # For serviceradar-kv gRPC service\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Security Note:"})," By default, NATS Server is configured to listen only on 127.0.0.1 (localhost), so port 4222 does not need to be opened in the firewall. The Next.js service (port 3000) is also not exposed externally as Nginx (port 80) proxies requests to it."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"selinux-configuration-if-enabled",children:"SELinux Configuration (if enabled)"}),"\n",(0,a.jsx)(n.p,{children:"If you have SELinux enabled on your Debian/Ubuntu system:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Allow HTTP connections (for Nginx)\nsudo setsebool -P httpd_can_network_connect 1\n\n# Configure port types\nsudo semanage port -a -t http_port_t -p tcp 8090 || sudo semanage port -m -t http_port_t -p tcp 8090\nsudo semanage port -a -t unreserved_port_t -p tcp 50054 || sudo semanage port -m -t unreserved_port_t -p tcp 50054\n"})}),"\n",(0,a.jsx)(n.h2,{id:"rheloracle-linux-installation",children:"RHEL/Oracle Linux Installation"}),"\n",(0,a.jsx)(n.p,{children:"This guide covers the installation and configuration of ServiceRadar components on Oracle Linux and RHEL-based systems."}),"\n",(0,a.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.p,{children:"Before installing ServiceRadar, ensure your system meets the following requirements:"}),"\n",(0,a.jsx)(n.h4,{id:"system-requirements",children:"System Requirements"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Oracle Linux 9 / RHEL 9 or compatible distribution"}),"\n",(0,a.jsx)(n.li,{children:"System user with sudo or root access"}),"\n",(0,a.jsx)(n.li,{children:"Minimum 2GB RAM"}),"\n",(0,a.jsx)(n.li,{children:"Minimum 10GB disk space"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"required-packages",children:"Required Packages"}),"\n",(0,a.jsx)(n.p,{children:"The following packages will be automatically installed as dependencies, but you can install them manually if needed:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Install EPEL repository\nsudo dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm\n\n# Enable CodeReady Builder repository (Oracle Linux only)\nsudo dnf config-manager --set-enabled ol9_codeready_builder\n\n# Install Node.js 20\nsudo dnf module enable -y nodejs:20\nsudo dnf install -y nodejs\n\n# Install Nginx\nsudo dnf install -y nginx\n"})}),"\n",(0,a.jsx)(n.h3,{id:"standard-setup-recommended-1",children:"Standard Setup (Recommended)"}),"\n",(0,a.jsx)(n.h4,{id:"1-download-the-rpm-packages",children:"1. Download the RPM packages"}),"\n",(0,a.jsx)(n.p,{children:"Download the latest ServiceRadar RPM packages from the releases page:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-core-1.0.27-1.el9.x86_64.rpm\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-web-1.0.27-1.el9.x86_64.rpm\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-agent-1.0.27-1.el9.x86_64.rpm\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-poller-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsx)(n.h4,{id:"2-install-core-service",children:"2. Install Core Service"}),"\n",(0,a.jsx)(n.p,{children:"The core service provides the central API and database for ServiceRadar:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo dnf install -y ./serviceradar-core-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsx)(n.h4,{id:"3-install-web-ui",children:"3. Install Web UI"}),"\n",(0,a.jsx)(n.p,{children:"The web UI provides a dashboard interface:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo dnf install -y ./serviceradar-web-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsx)(n.h4,{id:"4-install-agent-and-poller",children:"4. Install Agent and Poller"}),"\n",(0,a.jsx)(n.p,{children:"On each monitored host:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo dnf install -y ./serviceradar-agent-1.0.27-1.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-poller-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsx)(n.h3,{id:"distributed-setup-1",children:"Distributed Setup"}),"\n",(0,a.jsx)(n.p,{children:"For larger deployments, install components on separate hosts:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"On monitored hosts"})," (install only the agent):"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-agent-1.0.27-1.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-agent-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"On monitoring host"})," (install the poller):"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-poller-1.0.27-1.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-poller-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"On core host"})," (install the core service):"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-core-1.0.27-1.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-core-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsx)(n.h3,{id:"optional-components-1",children:"Optional Components"}),"\n",(0,a.jsx)(n.h4,{id:"install-nats-server-for-kv-store-optional",children:"Install NATS Server for KV Store (Optional)"}),"\n",(0,a.jsx)(n.p,{children:"If you plan to use NATS JetStream as a KV store for dynamic configuration:"}),"\n",(0,a.jsxs)(n.h5,{id:"step-1-install-the-nats-server-with-serviceradar-nats",children:["Step 1: Install the NATS Server with ",(0,a.jsx)(n.code,{children:"serviceradar-nats"})]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"serviceradar-nats"})," package provides the necessary configuration files, systemd service, and directory setup to enable\nNATS Server to start automatically with mTLS enabled."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Download and install the serviceradar-nats package\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-nats-1.0.27-1.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-nats-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsx)(n.p,{children:"The serviceradar-nats package automatically:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Installs the NATS Server binary in ",(0,a.jsx)(n.code,{children:"/usr/bin/nats-server"})]}),"\n",(0,a.jsxs)(n.li,{children:["Creates a configuration file at ",(0,a.jsx)(n.code,{children:"/etc/nats/nats-server.conf"})," with mTLS enabled"]}),"\n",(0,a.jsx)(n.li,{children:"Sets up a hardened systemd service (nats.service) to manage the NATS Server"}),"\n",(0,a.jsxs)(n.li,{children:["Creates necessary directories (",(0,a.jsx)(n.code,{children:"/var/lib/nats/jetstream"})," for JetStream data, ",(0,a.jsx)(n.code,{children:"/var/log/nats"})," for logs)"]}),"\n",(0,a.jsx)(n.li,{children:"Configures permissions for the nats user"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Verify the NATS Server is running:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status nats\n"})}),"\n",(0,a.jsx)(n.h5,{id:"install-serviceradar-kv-service-1",children:"Install ServiceRadar KV Service"}),"\n",(0,a.jsx)(n.p,{children:"To enable the KV store functionality:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-kv-1.0.27-1.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-kv-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Security Note:"})," By default, the NATS Server is configured to listen only on the loopback interface (127.0.0.1) for security, preventing external network access. ServiceRadar's KV service communicates with NATS Server locally, so you don't need to open port 4222 in your firewall unless NATS Server needs to be accessed from other hosts. This configuration significantly enhances the security of your deployment."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"snmp-monitoring-and-dusk-node-monitoring",children:"SNMP Monitoring and Dusk Node Monitoring"}),"\n",(0,a.jsx)(n.p,{children:"For specialized monitoring capabilities:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# SNMP Checker for network device monitoring\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-snmp-checker-1.0.27-1.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-snmp-checker-1.0.27-1.el9.x86_64.rpm\n\n# Dusk Node Checker for Dusk Network monitoring\ncurl -LO https://github.com/carverauto/serviceradar/releases/download/1.0.27/serviceradar-dusk-checker-1.0.27-1.el9.x86_64.rpm\nsudo dnf install -y ./serviceradar-dusk-checker-1.0.27-1.el9.x86_64.rpm\n"})}),"\n",(0,a.jsx)(n.h3,{id:"post-installation-configuration",children:"Post-Installation Configuration"}),"\n",(0,a.jsx)(n.h4,{id:"firewall-configuration-1",children:"Firewall Configuration"}),"\n",(0,a.jsx)(n.p,{children:"The installation process should automatically configure the firewall, but you can verify or manually configure it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check firewall status\nsudo firewall-cmd --list-all\n\n# If needed, manually open required ports\nsudo firewall-cmd --permanent --add-port=80/tcp      # Web UI\nsudo firewall-cmd --permanent --add-port=8090/tcp    # Core API\nsudo firewall-cmd --permanent --add-port=50051/tcp   # Agent\nsudo firewall-cmd --permanent --add-port=50052/tcp   # Core gRPC / Dusk Checker\nsudo firewall-cmd --permanent --add-port=50053/tcp   # Poller\nsudo firewall-cmd --permanent --add-port=50054/tcp   # serviceradar-kv\nsudo firewall-cmd --reload\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Security Note:"})," Port 4222 (NATS) is not included in the firewall rules as the NATS Server is configured to listen only on 127.0.0.1 (localhost) by default. Port 3000 (Next.js) is also not exposed externally as Nginx (port 80) proxies requests to it."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"selinux-configuration",children:"SELinux Configuration"}),"\n",(0,a.jsx)(n.p,{children:"The installation should configure SELinux automatically. If you encounter issues, you can verify or manually configure it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check SELinux status\ngetenforce\n\n# Allow HTTP connections (for Nginx)\nsudo setsebool -P httpd_can_network_connect 1\n\n# Configure port types\nsudo semanage port -a -t http_port_t -p tcp 8090 || sudo semanage port -m -t http_port_t -p tcp 8090\nsudo semanage port -a -t unreserved_port_t -p tcp 50054 || sudo semanage port -m -t unreserved_port_t -p tcp 50054\nsudo semanage port -a -t unreserved_port_t -p tcp 4222 || sudo semanage port -m -t unreserved_port_t -p tcp 4222\n"})}),"\n",(0,a.jsx)(n.h3,{id:"verify-services",children:"Verify Services"}),"\n",(0,a.jsx)(n.p,{children:"Check that all services are running correctly:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check core service\nsudo systemctl status serviceradar-core\n\n# Check web UI service\nsudo systemctl status serviceradar-web\n\n# Check Nginx\nsudo systemctl status nginx\n\n# Check agent (on monitored host)\nsudo systemctl status serviceradar-agent\n\n# Check poller (on monitored host)\nsudo systemctl status serviceradar-poller\n\n# Check NATS Server (if installed)\nsudo systemctl status nats\n\n# Check KV service (if installed)\nsudo systemctl status serviceradar-kv\n"})}),"\n",(0,a.jsx)(n.h3,{id:"accessing-the-dashboard",children:"Accessing the Dashboard"}),"\n",(0,a.jsx)(n.p,{children:"After installation, you can access the ServiceRadar dashboard at:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"http://your-server-ip/\n"})}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,a.jsx)(n.h3,{id:"service-wont-start",children:"Service Won't Start"}),"\n",(0,a.jsx)(n.p,{children:"If a service fails to start, check the logs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check core service logs\nsudo journalctl -xeu serviceradar-core\n\n# Check web UI logs\nsudo journalctl -xeu serviceradar-web\n\n# Check Nginx logs\nsudo cat /var/log/nginx/error.log\nsudo cat /var/log/nginx/serviceradar-web.error.log\n\n# Check NATS Server logs (if installed)\nsudo cat /var/log/nats/nats.log\n"})}),"\n",(0,a.jsx)(n.h3,{id:"nodejs-issues-web-ui",children:"Node.js Issues (Web UI)"}),"\n",(0,a.jsx)(n.p,{children:"If the web UI service fails with Node.js errors:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check Node.js version\nnode --version\n\n# For Debian/Ubuntu\nsudo apt install -y nodejs npm\n\n# For RHEL/Oracle Linux\nsudo dnf module enable -y nodejs:20\nsudo dnf install -y nodejs\n"})}),"\n",(0,a.jsx)(n.h3,{id:"selinux-issues-rheloracle-linux",children:"SELinux Issues (RHEL/Oracle Linux)"}),"\n",(0,a.jsx)(n.p,{children:"If you encounter SELinux-related issues:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# View SELinux denials\nsudo ausearch -m avc --start recent\n\n# Temporarily set SELinux to permissive mode for testing\nsudo setenforce 0\n\n# Create a custom policy module\nsudo ausearch -m avc -c nginx 2>&1 | audit2allow -M serviceradar-nginx\nsudo semodule -i serviceradar-nginx.pp\n"})}),"\n",(0,a.jsx)(n.h3,{id:"nginx-connection-issues",children:"Nginx Connection Issues"}),"\n",(0,a.jsx)(n.p,{children:"If Nginx can't connect to the backend services:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Test direct connection to API\ncurl http://localhost:8090/api/status\n\n# Test direct connection to Next.js\ncurl http://localhost:3000\n\n# Check API key\nsudo cat /etc/serviceradar/api.env\n\n# Ensure proper permissions on API key file\nsudo chmod 644 /etc/serviceradar/api.env\nsudo chown serviceradar:serviceradar /etc/serviceradar/api.env\n"})}),"\n",(0,a.jsx)(n.h3,{id:"nats-connection-issues",children:"NATS Connection Issues"}),"\n",(0,a.jsxs)(n.p,{children:["If the ",(0,a.jsx)(n.code,{children:"serviceradar-kv"})," service cannot connect to NATS:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check NATS Server logs\nsudo cat /var/log/nats/nats.log\n\n# Test NATS connection\nnats server check --server nats://localhost:4222\n\n# Verify certificates are in place\nls -la /etc/serviceradar/certs/\n"})}),"\n",(0,a.jsx)(n.h3,{id:"uninstallation",children:"Uninstallation"}),"\n",(0,a.jsx)(n.p,{children:"If needed, you can uninstall ServiceRadar components:"}),"\n",(0,a.jsx)(n.h4,{id:"debianubuntu",children:"Debian/Ubuntu:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo apt remove -y serviceradar-core serviceradar-web serviceradar-agent serviceradar-poller\nsudo apt remove -y serviceradar-nats serviceradar-kv\nsudo apt remove -y nats-server\n"})}),"\n",(0,a.jsx)(n.h4,{id:"rheloracle-linux",children:"RHEL/Oracle Linux:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo dnf remove -y serviceradar-core serviceradar-web serviceradar-agent serviceradar-poller\nsudo dnf remove -y serviceradar-nats serviceradar-kv\nsudo dnf remove -y nats-server\n"})}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(n.p,{children:"After installation, proceed to:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/configuration",children:"Configuration Basics"})," to configure your components"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/tls-security",children:"TLS Security"})," to secure communications between components"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},3881:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(8101);const a={},t=s.createContext(a);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);