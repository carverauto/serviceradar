// Code generated from ServiceRadarQueryLanguage.g4 by ANTLR 4.13.2. DO NOT EDIT.

package gen

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ServiceRadarQueryLanguageLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ServiceRadarQueryLanguageLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func serviceradarquerylanguagelexerLexerInit() {
	staticData := &ServiceRadarQueryLanguageLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "'>'", "'>='", "'<'", "'<='", "", "",
		"'.'", "','", "'('", "')'", "'''", "'\"'",
	}
	staticData.SymbolicNames = []string{
		"", "SHOW", "FIND", "COUNT", "WHERE", "ORDER", "BY", "LIMIT", "ASC",
		"DESC", "AND", "OR", "IN", "BETWEEN", "CONTAINS", "IS", "NOT", "NULL",
		"DEVICES", "FLOWS", "TRAPS", "CONNECTIONS", "LOGS", "EQ", "NEQ", "GT",
		"GTE", "LT", "LTE", "LIKE", "BOOLEAN", "DOT", "COMMA", "LPAREN", "RPAREN",
		"APOSTROPHE", "QUOTE", "ID", "INTEGER", "FLOAT", "STRING", "TIMESTAMP",
		"IPADDRESS", "MACADDRESS", "WS",
	}
	staticData.RuleNames = []string{
		"SHOW", "FIND", "COUNT", "WHERE", "ORDER", "BY", "LIMIT", "ASC", "DESC",
		"AND", "OR", "IN", "BETWEEN", "CONTAINS", "IS", "NOT", "NULL", "DEVICES",
		"FLOWS", "TRAPS", "CONNECTIONS", "LOGS", "EQ", "NEQ", "GT", "GTE", "LT",
		"LTE", "LIKE", "BOOLEAN", "DOT", "COMMA", "LPAREN", "RPAREN", "APOSTROPHE",
		"QUOTE", "ID", "INTEGER", "FLOAT", "STRING", "TIMESTAMP", "IPADDRESS",
		"MACADDRESS", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K",
		"L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y",
		"Z", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 44, 480, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1,
		6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1,
		8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11,
		1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 3, 22, 267, 8, 22, 1,
		23, 1, 23, 1, 23, 1, 23, 3, 23, 273, 8, 23, 1, 24, 1, 24, 1, 25, 1, 25,
		1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1,
		28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29,
		1, 29, 3, 29, 301, 8, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1,
		33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 5, 36, 317, 8, 36,
		10, 36, 12, 36, 320, 9, 36, 1, 37, 4, 37, 323, 8, 37, 11, 37, 12, 37, 324,
		1, 38, 4, 38, 328, 8, 38, 11, 38, 12, 38, 329, 1, 38, 1, 38, 5, 38, 334,
		8, 38, 10, 38, 12, 38, 337, 9, 38, 1, 39, 1, 39, 5, 39, 341, 8, 39, 10,
		39, 12, 39, 344, 9, 39, 1, 39, 1, 39, 1, 39, 1, 39, 5, 39, 350, 8, 39,
		10, 39, 12, 39, 353, 9, 39, 1, 39, 1, 39, 3, 39, 357, 8, 39, 1, 40, 1,
		40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40,
		1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1,
		41, 4, 41, 382, 8, 41, 11, 41, 12, 41, 383, 1, 41, 1, 41, 4, 41, 388, 8,
		41, 11, 41, 12, 41, 389, 1, 41, 1, 41, 4, 41, 394, 8, 41, 11, 41, 12, 41,
		395, 1, 41, 1, 41, 4, 41, 400, 8, 41, 11, 41, 12, 41, 401, 1, 42, 1, 42,
		1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1,
		42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45,
		1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1,
		50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55,
		1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1,
		61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 66,
		1, 66, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69, 4, 69, 475, 8, 69, 11, 69, 12,
		69, 476, 1, 69, 1, 69, 2, 342, 351, 0, 70, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5,
		11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29,
		15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47,
		24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65,
		33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83,
		42, 85, 43, 87, 0, 89, 0, 91, 0, 93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103,
		0, 105, 0, 107, 0, 109, 0, 111, 0, 113, 0, 115, 0, 117, 0, 119, 0, 121,
		0, 123, 0, 125, 0, 127, 0, 129, 0, 131, 0, 133, 0, 135, 0, 137, 0, 139,
		44, 1, 0, 31, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95,
		95, 97, 122, 1, 0, 48, 57, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 65, 65,
		97, 97, 2, 0, 66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100,
		100, 2, 0, 69, 69, 101, 101, 2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103,
		103, 2, 0, 72, 72, 104, 104, 2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106,
		106, 2, 0, 75, 75, 107, 107, 2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109,
		109, 2, 0, 78, 78, 110, 110, 2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112,
		112, 2, 0, 81, 81, 113, 113, 2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115,
		115, 2, 0, 84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118,
		118, 2, 0, 87, 87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121,
		121, 2, 0, 90, 90, 122, 122, 3, 0, 9, 10, 13, 13, 32, 32, 468, 0, 1, 1,
		0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1,
		0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17,
		1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0,
		25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0,
		0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0,
		0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0,
		0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1,
		0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63,
		1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0,
		71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0,
		0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0,
		0, 0, 139, 1, 0, 0, 0, 1, 141, 1, 0, 0, 0, 3, 146, 1, 0, 0, 0, 5, 151,
		1, 0, 0, 0, 7, 157, 1, 0, 0, 0, 9, 163, 1, 0, 0, 0, 11, 169, 1, 0, 0, 0,
		13, 172, 1, 0, 0, 0, 15, 178, 1, 0, 0, 0, 17, 182, 1, 0, 0, 0, 19, 187,
		1, 0, 0, 0, 21, 191, 1, 0, 0, 0, 23, 194, 1, 0, 0, 0, 25, 197, 1, 0, 0,
		0, 27, 205, 1, 0, 0, 0, 29, 214, 1, 0, 0, 0, 31, 217, 1, 0, 0, 0, 33, 221,
		1, 0, 0, 0, 35, 226, 1, 0, 0, 0, 37, 234, 1, 0, 0, 0, 39, 240, 1, 0, 0,
		0, 41, 246, 1, 0, 0, 0, 43, 258, 1, 0, 0, 0, 45, 266, 1, 0, 0, 0, 47, 272,
		1, 0, 0, 0, 49, 274, 1, 0, 0, 0, 51, 276, 1, 0, 0, 0, 53, 279, 1, 0, 0,
		0, 55, 281, 1, 0, 0, 0, 57, 284, 1, 0, 0, 0, 59, 300, 1, 0, 0, 0, 61, 302,
		1, 0, 0, 0, 63, 304, 1, 0, 0, 0, 65, 306, 1, 0, 0, 0, 67, 308, 1, 0, 0,
		0, 69, 310, 1, 0, 0, 0, 71, 312, 1, 0, 0, 0, 73, 314, 1, 0, 0, 0, 75, 322,
		1, 0, 0, 0, 77, 327, 1, 0, 0, 0, 79, 356, 1, 0, 0, 0, 81, 358, 1, 0, 0,
		0, 83, 381, 1, 0, 0, 0, 85, 403, 1, 0, 0, 0, 87, 421, 1, 0, 0, 0, 89, 423,
		1, 0, 0, 0, 91, 425, 1, 0, 0, 0, 93, 427, 1, 0, 0, 0, 95, 429, 1, 0, 0,
		0, 97, 431, 1, 0, 0, 0, 99, 433, 1, 0, 0, 0, 101, 435, 1, 0, 0, 0, 103,
		437, 1, 0, 0, 0, 105, 439, 1, 0, 0, 0, 107, 441, 1, 0, 0, 0, 109, 443,
		1, 0, 0, 0, 111, 445, 1, 0, 0, 0, 113, 447, 1, 0, 0, 0, 115, 449, 1, 0,
		0, 0, 117, 451, 1, 0, 0, 0, 119, 453, 1, 0, 0, 0, 121, 455, 1, 0, 0, 0,
		123, 457, 1, 0, 0, 0, 125, 459, 1, 0, 0, 0, 127, 461, 1, 0, 0, 0, 129,
		463, 1, 0, 0, 0, 131, 465, 1, 0, 0, 0, 133, 467, 1, 0, 0, 0, 135, 469,
		1, 0, 0, 0, 137, 471, 1, 0, 0, 0, 139, 474, 1, 0, 0, 0, 141, 142, 3, 123,
		61, 0, 142, 143, 3, 101, 50, 0, 143, 144, 3, 115, 57, 0, 144, 145, 3, 131,
		65, 0, 145, 2, 1, 0, 0, 0, 146, 147, 3, 97, 48, 0, 147, 148, 3, 103, 51,
		0, 148, 149, 3, 113, 56, 0, 149, 150, 3, 93, 46, 0, 150, 4, 1, 0, 0, 0,
		151, 152, 3, 91, 45, 0, 152, 153, 3, 115, 57, 0, 153, 154, 3, 127, 63,
		0, 154, 155, 3, 113, 56, 0, 155, 156, 3, 125, 62, 0, 156, 6, 1, 0, 0, 0,
		157, 158, 3, 131, 65, 0, 158, 159, 3, 101, 50, 0, 159, 160, 3, 95, 47,
		0, 160, 161, 3, 121, 60, 0, 161, 162, 3, 95, 47, 0, 162, 8, 1, 0, 0, 0,
		163, 164, 3, 115, 57, 0, 164, 165, 3, 121, 60, 0, 165, 166, 3, 93, 46,
		0, 166, 167, 3, 95, 47, 0, 167, 168, 3, 121, 60, 0, 168, 10, 1, 0, 0, 0,
		169, 170, 3, 89, 44, 0, 170, 171, 3, 135, 67, 0, 171, 12, 1, 0, 0, 0, 172,
		173, 3, 109, 54, 0, 173, 174, 3, 103, 51, 0, 174, 175, 3, 111, 55, 0, 175,
		176, 3, 103, 51, 0, 176, 177, 3, 125, 62, 0, 177, 14, 1, 0, 0, 0, 178,
		179, 3, 87, 43, 0, 179, 180, 3, 123, 61, 0, 180, 181, 3, 91, 45, 0, 181,
		16, 1, 0, 0, 0, 182, 183, 3, 93, 46, 0, 183, 184, 3, 95, 47, 0, 184, 185,
		3, 123, 61, 0, 185, 186, 3, 91, 45, 0, 186, 18, 1, 0, 0, 0, 187, 188, 3,
		87, 43, 0, 188, 189, 3, 113, 56, 0, 189, 190, 3, 93, 46, 0, 190, 20, 1,
		0, 0, 0, 191, 192, 3, 115, 57, 0, 192, 193, 3, 121, 60, 0, 193, 22, 1,
		0, 0, 0, 194, 195, 3, 103, 51, 0, 195, 196, 3, 113, 56, 0, 196, 24, 1,
		0, 0, 0, 197, 198, 3, 89, 44, 0, 198, 199, 3, 95, 47, 0, 199, 200, 3, 125,
		62, 0, 200, 201, 3, 131, 65, 0, 201, 202, 3, 95, 47, 0, 202, 203, 3, 95,
		47, 0, 203, 204, 3, 113, 56, 0, 204, 26, 1, 0, 0, 0, 205, 206, 3, 91, 45,
		0, 206, 207, 3, 115, 57, 0, 207, 208, 3, 113, 56, 0, 208, 209, 3, 125,
		62, 0, 209, 210, 3, 87, 43, 0, 210, 211, 3, 103, 51, 0, 211, 212, 3, 113,
		56, 0, 212, 213, 3, 123, 61, 0, 213, 28, 1, 0, 0, 0, 214, 215, 3, 103,
		51, 0, 215, 216, 3, 123, 61, 0, 216, 30, 1, 0, 0, 0, 217, 218, 3, 113,
		56, 0, 218, 219, 3, 115, 57, 0, 219, 220, 3, 125, 62, 0, 220, 32, 1, 0,
		0, 0, 221, 222, 3, 113, 56, 0, 222, 223, 3, 127, 63, 0, 223, 224, 3, 109,
		54, 0, 224, 225, 3, 109, 54, 0, 225, 34, 1, 0, 0, 0, 226, 227, 3, 93, 46,
		0, 227, 228, 3, 95, 47, 0, 228, 229, 3, 129, 64, 0, 229, 230, 3, 103, 51,
		0, 230, 231, 3, 91, 45, 0, 231, 232, 3, 95, 47, 0, 232, 233, 3, 123, 61,
		0, 233, 36, 1, 0, 0, 0, 234, 235, 3, 97, 48, 0, 235, 236, 3, 109, 54, 0,
		236, 237, 3, 115, 57, 0, 237, 238, 3, 131, 65, 0, 238, 239, 3, 123, 61,
		0, 239, 38, 1, 0, 0, 0, 240, 241, 3, 125, 62, 0, 241, 242, 3, 121, 60,
		0, 242, 243, 3, 87, 43, 0, 243, 244, 3, 117, 58, 0, 244, 245, 3, 123, 61,
		0, 245, 40, 1, 0, 0, 0, 246, 247, 3, 91, 45, 0, 247, 248, 3, 115, 57, 0,
		248, 249, 3, 113, 56, 0, 249, 250, 3, 113, 56, 0, 250, 251, 3, 95, 47,
		0, 251, 252, 3, 91, 45, 0, 252, 253, 3, 125, 62, 0, 253, 254, 3, 103, 51,
		0, 254, 255, 3, 115, 57, 0, 255, 256, 3, 113, 56, 0, 256, 257, 3, 123,
		61, 0, 257, 42, 1, 0, 0, 0, 258, 259, 3, 109, 54, 0, 259, 260, 3, 115,
		57, 0, 260, 261, 3, 99, 49, 0, 261, 262, 3, 123, 61, 0, 262, 44, 1, 0,
		0, 0, 263, 267, 5, 61, 0, 0, 264, 265, 5, 61, 0, 0, 265, 267, 5, 61, 0,
		0, 266, 263, 1, 0, 0, 0, 266, 264, 1, 0, 0, 0, 267, 46, 1, 0, 0, 0, 268,
		269, 5, 33, 0, 0, 269, 273, 5, 61, 0, 0, 270, 271, 5, 60, 0, 0, 271, 273,
		5, 62, 0, 0, 272, 268, 1, 0, 0, 0, 272, 270, 1, 0, 0, 0, 273, 48, 1, 0,
		0, 0, 274, 275, 5, 62, 0, 0, 275, 50, 1, 0, 0, 0, 276, 277, 5, 62, 0, 0,
		277, 278, 5, 61, 0, 0, 278, 52, 1, 0, 0, 0, 279, 280, 5, 60, 0, 0, 280,
		54, 1, 0, 0, 0, 281, 282, 5, 60, 0, 0, 282, 283, 5, 61, 0, 0, 283, 56,
		1, 0, 0, 0, 284, 285, 3, 109, 54, 0, 285, 286, 3, 103, 51, 0, 286, 287,
		3, 107, 53, 0, 287, 288, 3, 95, 47, 0, 288, 58, 1, 0, 0, 0, 289, 290, 3,
		125, 62, 0, 290, 291, 3, 121, 60, 0, 291, 292, 3, 127, 63, 0, 292, 293,
		3, 95, 47, 0, 293, 301, 1, 0, 0, 0, 294, 295, 3, 97, 48, 0, 295, 296, 3,
		87, 43, 0, 296, 297, 3, 109, 54, 0, 297, 298, 3, 123, 61, 0, 298, 299,
		3, 95, 47, 0, 299, 301, 1, 0, 0, 0, 300, 289, 1, 0, 0, 0, 300, 294, 1,
		0, 0, 0, 301, 60, 1, 0, 0, 0, 302, 303, 5, 46, 0, 0, 303, 62, 1, 0, 0,
		0, 304, 305, 5, 44, 0, 0, 305, 64, 1, 0, 0, 0, 306, 307, 5, 40, 0, 0, 307,
		66, 1, 0, 0, 0, 308, 309, 5, 41, 0, 0, 309, 68, 1, 0, 0, 0, 310, 311, 5,
		39, 0, 0, 311, 70, 1, 0, 0, 0, 312, 313, 5, 34, 0, 0, 313, 72, 1, 0, 0,
		0, 314, 318, 7, 0, 0, 0, 315, 317, 7, 1, 0, 0, 316, 315, 1, 0, 0, 0, 317,
		320, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0, 318, 319, 1, 0, 0, 0, 319, 74, 1,
		0, 0, 0, 320, 318, 1, 0, 0, 0, 321, 323, 7, 2, 0, 0, 322, 321, 1, 0, 0,
		0, 323, 324, 1, 0, 0, 0, 324, 322, 1, 0, 0, 0, 324, 325, 1, 0, 0, 0, 325,
		76, 1, 0, 0, 0, 326, 328, 7, 2, 0, 0, 327, 326, 1, 0, 0, 0, 328, 329, 1,
		0, 0, 0, 329, 327, 1, 0, 0, 0, 329, 330, 1, 0, 0, 0, 330, 331, 1, 0, 0,
		0, 331, 335, 5, 46, 0, 0, 332, 334, 7, 2, 0, 0, 333, 332, 1, 0, 0, 0, 334,
		337, 1, 0, 0, 0, 335, 333, 1, 0, 0, 0, 335, 336, 1, 0, 0, 0, 336, 78, 1,
		0, 0, 0, 337, 335, 1, 0, 0, 0, 338, 342, 3, 71, 35, 0, 339, 341, 9, 0,
		0, 0, 340, 339, 1, 0, 0, 0, 341, 344, 1, 0, 0, 0, 342, 343, 1, 0, 0, 0,
		342, 340, 1, 0, 0, 0, 343, 345, 1, 0, 0, 0, 344, 342, 1, 0, 0, 0, 345,
		346, 3, 71, 35, 0, 346, 357, 1, 0, 0, 0, 347, 351, 3, 69, 34, 0, 348, 350,
		9, 0, 0, 0, 349, 348, 1, 0, 0, 0, 350, 353, 1, 0, 0, 0, 351, 352, 1, 0,
		0, 0, 351, 349, 1, 0, 0, 0, 352, 354, 1, 0, 0, 0, 353, 351, 1, 0, 0, 0,
		354, 355, 3, 69, 34, 0, 355, 357, 1, 0, 0, 0, 356, 338, 1, 0, 0, 0, 356,
		347, 1, 0, 0, 0, 357, 80, 1, 0, 0, 0, 358, 359, 3, 69, 34, 0, 359, 360,
		7, 2, 0, 0, 360, 361, 7, 2, 0, 0, 361, 362, 7, 2, 0, 0, 362, 363, 7, 2,
		0, 0, 363, 364, 5, 45, 0, 0, 364, 365, 7, 2, 0, 0, 365, 366, 7, 2, 0, 0,
		366, 367, 5, 45, 0, 0, 367, 368, 7, 2, 0, 0, 368, 369, 7, 2, 0, 0, 369,
		370, 5, 32, 0, 0, 370, 371, 7, 2, 0, 0, 371, 372, 7, 2, 0, 0, 372, 373,
		5, 58, 0, 0, 373, 374, 7, 2, 0, 0, 374, 375, 7, 2, 0, 0, 375, 376, 5, 58,
		0, 0, 376, 377, 7, 2, 0, 0, 377, 378, 7, 2, 0, 0, 378, 379, 3, 69, 34,
		0, 379, 82, 1, 0, 0, 0, 380, 382, 7, 2, 0, 0, 381, 380, 1, 0, 0, 0, 382,
		383, 1, 0, 0, 0, 383, 381, 1, 0, 0, 0, 383, 384, 1, 0, 0, 0, 384, 385,
		1, 0, 0, 0, 385, 387, 5, 46, 0, 0, 386, 388, 7, 2, 0, 0, 387, 386, 1, 0,
		0, 0, 388, 389, 1, 0, 0, 0, 389, 387, 1, 0, 0, 0, 389, 390, 1, 0, 0, 0,
		390, 391, 1, 0, 0, 0, 391, 393, 5, 46, 0, 0, 392, 394, 7, 2, 0, 0, 393,
		392, 1, 0, 0, 0, 394, 395, 1, 0, 0, 0, 395, 393, 1, 0, 0, 0, 395, 396,
		1, 0, 0, 0, 396, 397, 1, 0, 0, 0, 397, 399, 5, 46, 0, 0, 398, 400, 7, 2,
		0, 0, 399, 398, 1, 0, 0, 0, 400, 401, 1, 0, 0, 0, 401, 399, 1, 0, 0, 0,
		401, 402, 1, 0, 0, 0, 402, 84, 1, 0, 0, 0, 403, 404, 7, 3, 0, 0, 404, 405,
		7, 3, 0, 0, 405, 406, 5, 58, 0, 0, 406, 407, 7, 3, 0, 0, 407, 408, 7, 3,
		0, 0, 408, 409, 5, 58, 0, 0, 409, 410, 7, 3, 0, 0, 410, 411, 7, 3, 0, 0,
		411, 412, 5, 58, 0, 0, 412, 413, 7, 3, 0, 0, 413, 414, 7, 3, 0, 0, 414,
		415, 5, 58, 0, 0, 415, 416, 7, 3, 0, 0, 416, 417, 7, 3, 0, 0, 417, 418,
		5, 58, 0, 0, 418, 419, 7, 3, 0, 0, 419, 420, 7, 3, 0, 0, 420, 86, 1, 0,
		0, 0, 421, 422, 7, 4, 0, 0, 422, 88, 1, 0, 0, 0, 423, 424, 7, 5, 0, 0,
		424, 90, 1, 0, 0, 0, 425, 426, 7, 6, 0, 0, 426, 92, 1, 0, 0, 0, 427, 428,
		7, 7, 0, 0, 428, 94, 1, 0, 0, 0, 429, 430, 7, 8, 0, 0, 430, 96, 1, 0, 0,
		0, 431, 432, 7, 9, 0, 0, 432, 98, 1, 0, 0, 0, 433, 434, 7, 10, 0, 0, 434,
		100, 1, 0, 0, 0, 435, 436, 7, 11, 0, 0, 436, 102, 1, 0, 0, 0, 437, 438,
		7, 12, 0, 0, 438, 104, 1, 0, 0, 0, 439, 440, 7, 13, 0, 0, 440, 106, 1,
		0, 0, 0, 441, 442, 7, 14, 0, 0, 442, 108, 1, 0, 0, 0, 443, 444, 7, 15,
		0, 0, 444, 110, 1, 0, 0, 0, 445, 446, 7, 16, 0, 0, 446, 112, 1, 0, 0, 0,
		447, 448, 7, 17, 0, 0, 448, 114, 1, 0, 0, 0, 449, 450, 7, 18, 0, 0, 450,
		116, 1, 0, 0, 0, 451, 452, 7, 19, 0, 0, 452, 118, 1, 0, 0, 0, 453, 454,
		7, 20, 0, 0, 454, 120, 1, 0, 0, 0, 455, 456, 7, 21, 0, 0, 456, 122, 1,
		0, 0, 0, 457, 458, 7, 22, 0, 0, 458, 124, 1, 0, 0, 0, 459, 460, 7, 23,
		0, 0, 460, 126, 1, 0, 0, 0, 461, 462, 7, 24, 0, 0, 462, 128, 1, 0, 0, 0,
		463, 464, 7, 25, 0, 0, 464, 130, 1, 0, 0, 0, 465, 466, 7, 26, 0, 0, 466,
		132, 1, 0, 0, 0, 467, 468, 7, 27, 0, 0, 468, 134, 1, 0, 0, 0, 469, 470,
		7, 28, 0, 0, 470, 136, 1, 0, 0, 0, 471, 472, 7, 29, 0, 0, 472, 138, 1,
		0, 0, 0, 473, 475, 7, 30, 0, 0, 474, 473, 1, 0, 0, 0, 475, 476, 1, 0, 0,
		0, 476, 474, 1, 0, 0, 0, 476, 477, 1, 0, 0, 0, 477, 478, 1, 0, 0, 0, 478,
		479, 6, 69, 0, 0, 479, 140, 1, 0, 0, 0, 16, 0, 266, 272, 300, 318, 324,
		329, 335, 342, 351, 356, 383, 389, 395, 401, 476, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ServiceRadarQueryLanguageLexerInit initializes any static state used to implement ServiceRadarQueryLanguageLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewServiceRadarQueryLanguageLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ServiceRadarQueryLanguageLexerInit() {
	staticData := &ServiceRadarQueryLanguageLexerLexerStaticData
	staticData.once.Do(serviceradarquerylanguagelexerLexerInit)
}

// NewServiceRadarQueryLanguageLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewServiceRadarQueryLanguageLexer(input antlr.CharStream) *ServiceRadarQueryLanguageLexer {
	ServiceRadarQueryLanguageLexerInit()
	l := new(ServiceRadarQueryLanguageLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ServiceRadarQueryLanguageLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ServiceRadarQueryLanguage.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ServiceRadarQueryLanguageLexer tokens.
const (
	ServiceRadarQueryLanguageLexerSHOW        = 1
	ServiceRadarQueryLanguageLexerFIND        = 2
	ServiceRadarQueryLanguageLexerCOUNT       = 3
	ServiceRadarQueryLanguageLexerWHERE       = 4
	ServiceRadarQueryLanguageLexerORDER       = 5
	ServiceRadarQueryLanguageLexerBY          = 6
	ServiceRadarQueryLanguageLexerLIMIT       = 7
	ServiceRadarQueryLanguageLexerASC         = 8
	ServiceRadarQueryLanguageLexerDESC        = 9
	ServiceRadarQueryLanguageLexerAND         = 10
	ServiceRadarQueryLanguageLexerOR          = 11
	ServiceRadarQueryLanguageLexerIN          = 12
	ServiceRadarQueryLanguageLexerBETWEEN     = 13
	ServiceRadarQueryLanguageLexerCONTAINS    = 14
	ServiceRadarQueryLanguageLexerIS          = 15
	ServiceRadarQueryLanguageLexerNOT         = 16
	ServiceRadarQueryLanguageLexerNULL        = 17
	ServiceRadarQueryLanguageLexerDEVICES     = 18
	ServiceRadarQueryLanguageLexerFLOWS       = 19
	ServiceRadarQueryLanguageLexerTRAPS       = 20
	ServiceRadarQueryLanguageLexerCONNECTIONS = 21
	ServiceRadarQueryLanguageLexerLOGS        = 22
	ServiceRadarQueryLanguageLexerEQ          = 23
	ServiceRadarQueryLanguageLexerNEQ         = 24
	ServiceRadarQueryLanguageLexerGT          = 25
	ServiceRadarQueryLanguageLexerGTE         = 26
	ServiceRadarQueryLanguageLexerLT          = 27
	ServiceRadarQueryLanguageLexerLTE         = 28
	ServiceRadarQueryLanguageLexerLIKE        = 29
	ServiceRadarQueryLanguageLexerBOOLEAN     = 30
	ServiceRadarQueryLanguageLexerDOT         = 31
	ServiceRadarQueryLanguageLexerCOMMA       = 32
	ServiceRadarQueryLanguageLexerLPAREN      = 33
	ServiceRadarQueryLanguageLexerRPAREN      = 34
	ServiceRadarQueryLanguageLexerAPOSTROPHE  = 35
	ServiceRadarQueryLanguageLexerQUOTE       = 36
	ServiceRadarQueryLanguageLexerID          = 37
	ServiceRadarQueryLanguageLexerINTEGER     = 38
	ServiceRadarQueryLanguageLexerFLOAT       = 39
	ServiceRadarQueryLanguageLexerSTRING      = 40
	ServiceRadarQueryLanguageLexerTIMESTAMP   = 41
	ServiceRadarQueryLanguageLexerIPADDRESS   = 42
	ServiceRadarQueryLanguageLexerMACADDRESS  = 43
	ServiceRadarQueryLanguageLexerWS          = 44
)
