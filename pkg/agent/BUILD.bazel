load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "agent",
    srcs = [
        "checker.go",
        "errors.go",
        "external_checker.go",
        "icmp_checker.go",
        "interfaces.go",
        "ipv4_sorter.go",
        "kv.go",
        "mapper_checker.go",
        "mock_agent.go",
        "registry.go",
        "server.go",
        "snmp_checker.go",
        "sweep_service.go",
        "test_helpers.go",
        "types.go",
    ],
    importpath = "github.com/carverauto/serviceradar/pkg/agent",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/checker",
        "//pkg/checker/snmp",
        "//pkg/config",
        "//pkg/grpc",
        "//pkg/logger",
        "//pkg/models",
        "//pkg/scan",
        "//pkg/sweeper",
        "//proto",
        "//proto/discovery",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_uber_go_mock//gomock",
    ],
)

go_test(
    name = "agent_test",
    srcs = [
        "checker_test.go",
        "server_test.go",
        "sweep_integration_test.go",
        "sweep_performance_test.go",
        "sweep_service_sequencing_test.go",
    ],
    embed = [":agent"],
    deps = [
        "//pkg/checker",
        "//pkg/config",
        "//pkg/grpc",
        "//pkg/logger",
        "//pkg/models",
        "//proto",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_uber_go_mock//gomock",
    ],
)
