load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

package(default_visibility = ["//visibility:public"])

go_library(
    name = "cpufreq",
    srcs = [
        "collector.go",
        "hostfreq_darwin.go",
        "hostfreq_other.go",
        "perf_linux.go",
        "perf_other.go",
    ],
    cgo = True,
    importpath = "github.com/carverauto/serviceradar/pkg/cpufreq",
    deps = [
        "@com_github_shirou_gopsutil_v3//cpu:go_default_library",
        "@org_golang_x_sys//unix:go_default_library",
    ],
    cdeps = select({
        "@platforms//os:macos": [":hostfreq_darwin_cc"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "hostfreq_darwin_cc",
    srcs = ["hostfreq_darwin.cc"],
    hdrs = [
        "hostfreq_bridge.h",
        "hostfreq_darwin.mm",
    ],
    copts = [
        "-std=c++20",
        "-fobjc-arc",
        "-xobjective-c++",
    ],
    linkopts = [
        "-framework", "Foundation",
        "-framework", "IOKit",
        "-framework", "CoreFoundation",
        "-lIOReport",
    ],
    target_compatible_with = ["@platforms//os:macos"],
    visibility = ["//visibility:private"],
)

go_test(
    name = "cpufreq_test",
    srcs = ["collector_test.go"],
    embed = [":cpufreq"],
    deps = [
        "@com_github_shirou_gopsutil_v3//cpu:go_default_library",
    ],
)
