load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@rules_cc//cc:defs.bzl", "objc_library")

package(default_visibility = ["//visibility:public"])

go_library(
    name = "cpufreq",
    srcs = [
        "collector.go",
        "hostfreq_darwin.go",
        "hostfreq_other.go",
        "hostfreq_bridge.h",
        "perf_linux.go",
        "perf_other.go",
    ],
    cgo = True,
    importpath = "github.com/carverauto/serviceradar/pkg/cpufreq",
    deps = [
        "@com_github_shirou_gopsutil_v3//cpu:go_default_library",
        "@org_golang_x_sys//unix:go_default_library",
    ],
    cdeps = select({
        "@platforms//os:macos": [":hostfreq_darwin_objc"],
        "//conditions:default": [],
    }),
)

objc_library(
    name = "hostfreq_darwin_objc",
    srcs = ["hostfreq_darwin.mm"],
    hdrs = ["hostfreq_bridge.h"],
    sdk_frameworks = [
        "CoreFoundation",
        "Foundation",
        "IOKit",
    ],
    deps = [],
    target_compatible_with = ["@platforms//os:macos"],
    visibility = ["//visibility:private"],
)

go_test(
    name = "cpufreq_test",
    srcs = ["collector_test.go"],
    embed = [":cpufreq"],
    deps = [
        "@com_github_shirou_gopsutil_v3//cpu:go_default_library",
    ],
)
