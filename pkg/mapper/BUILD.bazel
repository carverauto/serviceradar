load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "mapper",
    srcs = [
        "discovery.go",
        "errors.go",
        "grpc.go",
        "interfaces.go",
        "mapper_agent_service.go",
        "mock_mapper.go",
        "publisher.go",
        "snmp_polling.go",
        "types.go",
        "ubnt_poller.go",
        "utils.go",
    ],
    importpath = "github.com/carverauto/serviceradar/pkg/mapper",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/db",
        "//pkg/logger",
        "//pkg/models",
        "//pkg/registry",
        "//pkg/scan",
        "//proto",
        "//proto/discovery",
        "@com_github_google_uuid//:uuid",
        "@com_github_gosnmp_gosnmp//:gosnmp",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/wrapperspb",
        "@org_uber_go_mock//gomock",
    ],
)

go_test(
    name = "mapper_test",
    srcs = [
        "discovery_test.go",
        "grpc_test.go",
        "mapper_agent_service_test.go",
        "publisher_test.go",
        "snmp_polling_test.go",
        "ubnt_poller_test.go",
    ],
    embed = [":mapper"],
    deps = [
        "//pkg/db",
        "//pkg/logger",
        "//pkg/models",
        "//pkg/registry",
        "//proto",
        "//proto/discovery",
        "@com_github_gosnmp_gosnmp//:gosnmp",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_uber_go_mock//gomock",
    ],
)
