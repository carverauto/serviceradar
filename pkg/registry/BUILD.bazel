load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "registry",
    srcs = [
        "identity_publisher.go",
        "identity_resolver.go",
        "interfaces.go",
        "mock_registry.go",
        "registry.go",
    ],
    importpath = "github.com/carverauto/serviceradar/pkg/registry",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/db",
        "//pkg/deviceupdate",
        "//pkg/identitymap:identitymap",
        "//pkg/logger",
        "//pkg/models",
        "//proto",
        "@org_golang_x_sync//errgroup",
        "@com_github_cenkalti_backoff_v5//:backoff",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//status:go_default_library",
        "@org_uber_go_mock//gomock",
    ],
)

go_test(
    name = "registry_test",
    srcs = [
        "batch_optimization_test.go",
        "identity_publisher_test.go",
        "identity_resolver_test.go",
        "registry_test.go",
        "retraction_processing_test.go",
    ],
    embed = [":registry"],
    deps = [
        "//pkg/db",
        "//pkg/identitymap:identitymap",
        "//pkg/logger",
        "//pkg/models",
        "//proto",
        "@org_golang_x_sync//errgroup",
        "@org_golang_google_grpc//:grpc",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_mock//gomock",
    ],
)
