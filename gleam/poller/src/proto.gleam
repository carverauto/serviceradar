//// Generated by Protozoa from /Users/mfreeman/src/serviceradar/proto/monitoring.proto
//// 
//// This file is auto-generated and can be safely deleted and regenerated.
//// To regenerate all proto files, run: gleam run -m protozoa
//// 
//// DO NOT EDIT THIS FILE MANUALLY - all changes will be lost on regeneration.

import protozoa/decode
import protozoa/encode

// Service: AgentService

/// Client interface for AgentService service
/// This trait defines the client-side methods for calling the service
pub type AgentServiceClient {
  AgentServiceClient(
    // TODO: Add client implementation fields (e.g., HTTP client, endpoint URL)
    endpoint: String,
  )
}

// Method signatures for client:
// GetStatus(StatusRequest) -> StatusResponse // Unary call
// GetResults(ResultsRequest) -> ResultsResponse // Unary call
// StreamResults(ResultsRequest) -> ResultsChunk // Server streaming
// ReportStatus(PollerStatusRequest) -> PollerStatusResponse // Unary call
// StreamStatus(PollerStatusChunk) -> PollerStatusResponse // Client streaming
// TODO: Implement actual client method calls

/// Server interface for AgentService service
/// Implement this trait to handle incoming service requests
pub type AgentServiceServer {
  AgentServiceServer(
    // TODO: Add server implementation fields
  )
}
// Method signatures for server:
// GetStatus(StatusRequest) -> StatusResponse // Unary handler
// GetResults(ResultsRequest) -> ResultsResponse // Unary handler
// StreamResults(ResultsRequest) -> ResultsChunk // Server streaming handler
// ReportStatus(PollerStatusRequest) -> PollerStatusResponse // Unary handler
// StreamStatus(PollerStatusChunk) -> PollerStatusResponse // Client streaming handler
// TODO: Implement server method handlers and request routing
