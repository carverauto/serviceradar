{{- $trustDomain := .Values.spire.trustDomain | default "carverauto.dev" -}}
{{- $spireNamespace := default .Release.Namespace .Values.spire.namespace -}}
{{- $datasvcSA := .Values.spire.datasvcServiceAccount | default "serviceradar-datasvc" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: serviceradar-core
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: serviceradar-core
  template:
    metadata:
      labels:
        app: serviceradar-core
    spec:
      {{- include "serviceradar.imagePullSecrets" . | nindent 6 }}
      initContainers:
      - name: init-core-jwks
        image: ghcr.io/carverauto/serviceradar-kong-config:latest
        imagePullPolicy: Always
        command:
        - /bin/sh
        - -c
        - |
          set -e
          TEMPLATE=/etc/serviceradar/core.json
          TARGET=/var/lib/serviceradar/core.json
          mkdir -p /var/lib/serviceradar

          PRESERVE_PRIV=""
          PRESERVE_KID=""
          if [ -f "$TARGET" ]; then
            PRESERVE_PRIV=$(jq -r '.auth.jwt_private_key_pem // empty' "$TARGET")
            PRESERVE_KID=$(jq -r '.auth.jwt_key_id // empty' "$TARGET")
          fi

          cp "$TEMPLATE" "${TARGET}.tmp"

          if [ -n "$PRESERVE_PRIV" ]; then
            jq --arg priv "$PRESERVE_PRIV" --arg kid "$PRESERVE_KID" '
              .auth = (.auth // {}) |
              .auth.jwt_algorithm = "RS256" |
              .auth.jwt_private_key_pem = $priv |
              (if $kid != "" then .auth.jwt_key_id = $kid else . end)
            ' "${TARGET}.tmp" > "$TARGET"
            rm -f "${TARGET}.tmp"
          else
            mv "${TARGET}.tmp" "$TARGET"
          fi

          serviceradar-cli generate-jwt-keys --file "$TARGET" --bits 2048
        volumeMounts:
        - name: serviceradar-config
          mountPath: /etc/serviceradar
          readOnly: true
        - name: core-data
          mountPath: /var/lib/serviceradar
      containers:
      - name: core
        image: ghcr.io/carverauto/serviceradar-core:{{ .Values.image.tags.core }}
        command: ["/bin/bash"]
        args:
        - -c
        - |
          cp /etc/serviceradar/core-k8s-init.sh /tmp/core-k8s-init.sh
          chmod +x /tmp/core-k8s-init.sh
          exec /tmp/core-k8s-init.sh
        ports:
        - containerPort: 8090
          name: http
        - containerPort: 50052
          name: grpc
        - containerPort: 9090
          name: metrics
        volumeMounts:
        - name: serviceradar-config
          mountPath: /etc/serviceradar
        - name: core-data
          mountPath: /var/lib/serviceradar
        - name: cert-data
          mountPath: /etc/serviceradar/certs
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        env:
        - name: WAIT_FOR_PROTON
          value: "true"
        - name: INIT_DB
          value: "true"
        - name: CONFIG_SOURCE
          value: "file"
        - name: CONFIG_PATH
          value: "/var/lib/serviceradar/core.json"
        - name: PROTON_HOST
          value: "serviceradar-proton"
        - name: PROTON_USER
          value: "default"
        - name: PROTON_DATABASE
          value: "default"
        - name: PROTON_PASSWORD
          valueFrom:
            secretKeyRef:
              name: serviceradar-secrets
              key: proton-password
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: serviceradar-secrets
              key: api-key
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: serviceradar-secrets
              key: jwt-secret
        - name: AUTH_PROVIDER
          value: "local"
        - name: OAUTH_ENABLED
          value: "false"
        - name: ADMIN_BCRYPT_HASH
          valueFrom:
            secretKeyRef:
              name: serviceradar-secrets
              key: admin-bcrypt-hash
        - name: KV_ADDRESS
          value: "serviceradar-datasvc:50057"
        - name: KV_SEC_MODE
          value: "spiffe"
        - name: KV_TRUST_DOMAIN
          value: {{ $trustDomain | quote }}
        - name: KV_SERVER_SPIFFE_ID
          value: "spiffe://{{ $trustDomain }}/ns/{{ $spireNamespace }}/sa/{{ $datasvcSA }}"
        - name: KV_WORKLOAD_SOCKET
          value: "unix:/run/spire/sockets/agent.sock"
        - name: KV_CERT_DIR
          value: "/etc/serviceradar/certs"
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          exec:
            command:
            - grpcurl
            - -cacert
            - /etc/serviceradar/certs/root.pem
            - -cert
            - /etc/serviceradar/certs/core.pem
            - -key
            - /etc/serviceradar/certs/core-key.pem
            - -servername
            - core.serviceradar
            - localhost:50052
            - grpc.health.v1.Health/Check
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - grpcurl
            - -cacert
            - /etc/serviceradar/certs/root.pem
            - -cert
            - /etc/serviceradar/certs/core.pem
            - -key
            - /etc/serviceradar/certs/core-key.pem
            - -servername
            - core.serviceradar
            - localhost:50052
            - grpc.health.v1.Health/Check
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: serviceradar-config
        configMap:
          name: serviceradar-config
      - name: core-data
        persistentVolumeClaim:
          claimName: serviceradar-core-data
      - name: cert-data
        persistentVolumeClaim:
          claimName: serviceradar-cert-data
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: serviceradar-core
spec:
  selector:
    app: serviceradar-core
  ports:
  - name: http
    port: 8090
    targetPort: http
  - name: grpc
    port: 50052
    targetPort: grpc
  - name: metrics
    port: 9090
    targetPort: metrics
