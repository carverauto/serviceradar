# base/serviceradar-agent.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: serviceradar-agent
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: serviceradar-agent
      app.kubernetes.io/part-of: serviceradar
  template:
    metadata:
      labels:
        app: serviceradar-agent
        app.kubernetes.io/part-of: serviceradar
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: serviceradar-agent
      imagePullSecrets:
        - name: ghcr-io-cred
      initContainers:
        - name: init-checkers
          image: busybox:1.36
          imagePullPolicy: Always
          command: ['sh', '-c', '
          mkdir -p /etc/serviceradar/checkers/sweep &&
          cp /config/snmp.json /etc/serviceradar/checkers/snmp.json &&
          cp /config/external.json /etc/serviceradar/checkers/external.json &&
          cp /config/sweep.json /etc/serviceradar/checkers/sweep/sweep.json
        ']
          volumeMounts:
            - name: serviceradar-config
              mountPath: /config
            - name: checkers-dir
              mountPath: /etc/serviceradar/checkers
      containers:
        - name: agent
          image: ghcr.io/carverauto/serviceradar-agent:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: serviceradar-config
              mountPath: /etc/serviceradar
            - name: checkers-dir
              mountPath: /etc/serviceradar/checkers
            - name: cert-data
              mountPath: /etc/serviceradar/certs
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
          env:
            - name: CONFIG_PATH
              value: "/etc/serviceradar/agent.json"
            - name: LOG_LEVEL
              value: "info"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: "500m"
              memory: "2Gi"
            requests:
              cpu: "250m"
              memory: "1Gi"
      volumes:
        - name: serviceradar-config
          configMap:
            name: serviceradar-config
        - name: checkers-dir
          emptyDir: {}
        - name: cert-data
          persistentVolumeClaim:
            claimName: serviceradar-cert-data
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: serviceradar-agent
spec:
  selector:
    app: serviceradar-agent
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: serviceradar-agent
  labels:
    app.kubernetes.io/part-of: serviceradar
