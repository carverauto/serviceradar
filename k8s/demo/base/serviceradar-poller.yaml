# base/serviceradar-poller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: serviceradar-poller
  labels:
    app.kubernetes.io/part-of: serviceradar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serviceradar-poller
      app.kubernetes.io/part-of: serviceradar
  template:
    metadata:
      labels:
        app: serviceradar-poller
        app.kubernetes.io/part-of: serviceradar
    spec:
      serviceAccountName: serviceradar-poller
      imagePullSecrets:
        - name: ghcr-io-cred
      initContainers:
      - name: poller-join-token
        image: ghcr.io/carverauto/serviceradar-tools:latest
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - |
          set -euo pipefail
          TOKEN_DIR="/var/run/spire/join-token"
          TOKEN_FILE="${TOKEN_DIR}/token"
          mkdir -p "${TOKEN_DIR}"
          REQUEST_FILE="$(mktemp)"
          cat <<EOF > "${REQUEST_FILE}"
          {
            "ttl_seconds": ${JOIN_TOKEN_TTL},
            "register_downstream": true,
            "downstream": {
              "spiffe_id": "${DOWNSTREAM_SPIFFE_ID}",
              "selectors": [
                "k8s:ns:${POD_NAMESPACE}",
                "k8s:sa:serviceradar-poller",
                "k8s:pod-label:app:serviceradar-poller",
                "k8s:container-name:poller-nested-spire"
              ],
              "x509_svid_ttl_seconds": ${DOWNSTREAM_X509_TTL},
              "jwt_svid_ttl_seconds": ${DOWNSTREAM_JWT_TTL},
              "admin": true,
              "store_svid": true
            }
          }
          EOF
          RESPONSE_FILE="$(mktemp)"
          HTTP_CODE="$(curl -sS -o "${RESPONSE_FILE}" -w '%{http_code}' \
            -X POST "${CORE_API_URL}/api/admin/spire/join-tokens" \
            -H 'Content-Type: application/json' \
            -H "X-API-Key: ${CORE_API_KEY}" \
            --data @"${REQUEST_FILE}")"
          rm -f "${REQUEST_FILE}"
          if [ "${HTTP_CODE}" != "201" ]; then
            echo "Join token request failed with status ${HTTP_CODE}" >&2
            cat "${RESPONSE_FILE}" >&2
            rm -f "${RESPONSE_FILE}"
            exit 1
          fi
          TOKEN="$(jq -r '.token // empty' "${RESPONSE_FILE}")"
          rm -f "${RESPONSE_FILE}"
          if [ -z "${TOKEN}" ]; then
            echo "Join token response missing token" >&2
            exit 1
          fi
          printf '%s' "${TOKEN}" > "${TOKEN_FILE}"
          chmod 0600 "${TOKEN_FILE}"
          echo "Generated join token for downstream ${DOWNSTREAM_SPIFFE_ID}"
        env:
        - name: CORE_API_URL
          value: "http://serviceradar-core:8090"
        - name: CORE_API_KEY
          valueFrom:
            secretKeyRef:
              name: serviceradar-secrets
              key: api-key
        - name: DOWNSTREAM_SPIFFE_ID
          value: "spiffe://carverauto.dev/ns/demo/poller-nested-spire"
        - name: JOIN_TOKEN_TTL
          value: "900"
        - name: DOWNSTREAM_X509_TTL
          value: "14400"
        - name: DOWNSTREAM_JWT_TTL
          value: "1800"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: poller-join-token
          mountPath: /var/run/spire/join-token
      - name: prepare-poller-spire-run
        image: busybox:1.36
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          set -eu
          mkdir -p /run/spire/nested/upstream /run/spire/nested/upstream-agent /run/spire/nested/server /run/spire/nested/server/data /run/spire/nested/workload /run/spire/nested/downstream-agent
          chmod -R 0777 /run/spire/nested
        volumeMounts:
        - name: poller-spire-run
          mountPath: /run/spire/nested
        - name: poller-spire-token
          mountPath: /var/run/spire/nested-token
          readOnly: true
      containers:
      - name: poller
        image: ghcr.io/carverauto/serviceradar-poller:latest
        imagePullPolicy: Always
        volumeMounts:
        - name: serviceradar-config
          mountPath: /etc/serviceradar
        - name: cert-data
          mountPath: /etc/serviceradar/certs
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        - name: poller-spire-run
          mountPath: /run/spire/nested
        env:
        - name: CONFIG_PATH
          value: "/etc/serviceradar/poller.json"
        - name: LOG_LEVEL
          value: "info"
        - name: MANAGE_NESTED_SPIRE
          value: "disabled"
        - name: NESTED_SPIRE_SOCKET
          value: "/run/spire/nested/workload/agent.sock"
        resources:
          limits:
            cpu: "2"
            memory: "6Gi"
          requests:
            cpu: "500m"
            memory: "2Gi"
        livenessProbe:
          tcpSocket:
            port: 50053
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 50053
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      - name: poller-nested-upstream-agent
        image: ghcr.io/spiffe/spire-agent:1.11.2
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - |
          set -euo pipefail
          TOKEN_FILE="/var/run/spire/join-token/token"
          for _ in $(seq 1 30); do
            if [ -s "${TOKEN_FILE}" ]; then
              break
            fi
            echo "Waiting for join token to be written..." >&2
            sleep 2
          done
          if [ ! -s "${TOKEN_FILE}" ]; then
            echo "Join token was not generated" >&2
            exit 1
          fi
          TOKEN="$(cat "${TOKEN_FILE}")"
          exec /opt/spire/bin/spire-agent run -config /etc/poller-spire/upstream-agent.conf -joinToken "${TOKEN}"
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: poller-spire-config
          mountPath: /etc/poller-spire
          readOnly: true
        - name: poller-spire-run
          mountPath: /run/spire/nested
        - name: poller-spire-token
          mountPath: /var/run/secrets/tokens
          readOnly: true
        - name: poller-join-token
          mountPath: /var/run/spire/join-token
          readOnly: true
      - name: poller-nested-spire
        image: ghcr.io/spiffe/spire-server:1.11.2
        imagePullPolicy: IfNotPresent
        command: ["/opt/spire/bin/spire-server"]
        args: ["run", "-config", "/etc/poller-spire/server.conf"]
        ports:
        - containerPort: 8083
          name: nested-spire
        volumeMounts:
        - name: poller-spire-config
          mountPath: /etc/poller-spire
          readOnly: true
        - name: poller-spire-run
          mountPath: /run/spire/nested
      - name: poller-nested-agent
        image: ghcr.io/spiffe/spire-agent:1.11.2
        imagePullPolicy: IfNotPresent
        command: ["/opt/spire/bin/spire-agent"]
        args: ["run", "-config", "/etc/poller-spire/downstream-agent.conf"]
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: poller-spire-config
          mountPath: /etc/poller-spire
          readOnly: true
        - name: poller-spire-run
          mountPath: /run/spire/nested
        - name: poller-spire-token
          mountPath: /var/run/secrets/tokens
          readOnly: true
      volumes:
      - name: serviceradar-config
        configMap:
          name: serviceradar-config
      - name: cert-data
        persistentVolumeClaim:
          claimName: serviceradar-cert-data
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: DirectoryOrCreate
      - name: poller-spire-config
        configMap:
          name: poller-nested-spire-config
      - name: poller-spire-run
        emptyDir: {}
      - name: poller-spire-token
        projected:
          sources:
            - serviceAccountToken:
                path: spire-agent
                audience: spire-server
                expirationSeconds: 7200
      - name: poller-join-token
        emptyDir: {}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: serviceradar-poller
  labels:
    app.kubernetes.io/part-of: serviceradar
