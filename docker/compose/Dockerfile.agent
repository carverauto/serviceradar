# Copyright 2025 Carver Automation Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Multi-stage build for ServiceRadar Agent
FROM golang:1.24-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Copy go module files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the agent binary
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags "-w -s" -o bin/serviceradar-agent cmd/agent/main.go

# Runtime stage
FROM alpine:latest

# Install runtime dependencies (needed for network operations and service checks)
RUN apk add --no-cache ca-certificates curl iputils nmap netcat-openbsd

# Create serviceradar user
RUN addgroup -g 1001 -S serviceradar && \
    adduser -S serviceradar -u 1001 -G serviceradar

# Create directories
RUN mkdir -p /etc/serviceradar /etc/serviceradar/checkers /etc/serviceradar/checkers/sweep /var/lib/serviceradar /var/log/serviceradar

# Copy binary from builder
COPY --from=builder /app/bin/serviceradar-agent /usr/local/bin/serviceradar-agent

# Copy Docker-specific agent configuration
COPY docker/compose/agent.docker.json /etc/serviceradar/agent.json

# Copy sweep configuration for Docker environment
COPY docker/compose/sweep.docker.json /etc/serviceradar/checkers/sweep/sweep.json

# Set ownership (but keep root ownership for network operations)
RUN chown -R serviceradar:serviceradar /etc/serviceradar /var/lib/serviceradar /var/log/serviceradar

# Keep as root user for raw socket access (ICMP requires root privileges)
# USER serviceradar

# Expose agent port
EXPOSE 50051

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD grpcurl -plaintext -max-time 5 localhost:50051 grpc.health.v1.Health/Check || exit 1

# Set working directory
WORKDIR /var/lib/serviceradar

# Start the agent
CMD ["/usr/local/bin/serviceradar-agent", "-config", "/etc/serviceradar/agent.json"]