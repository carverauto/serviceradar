# Copyright 2025 Carver Automation Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Multi-stage build for ServiceRadar KV service
FROM golang:latest AS builder

WORKDIR /src

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libc6-dev

# Copy go mod files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the source
COPY . .

# Build arguments for version info
ARG VERSION=dev
ARG BUILD_ID=docker

# Build the kv service (detect architecture automatically)
RUN CGO_ENABLED=0 GOOS=linux \
    go build \
    -ldflags "-X github.com/carverauto/serviceradar/pkg/version.version=${VERSION} \
              -X github.com/carverauto/serviceradar/pkg/version.buildID=${BUILD_ID}" \
    -o serviceradar-kv ./cmd/kv

# Runtime stage - using Ubuntu for better compatibility
FROM ubuntu:22.04

# Install runtime dependencies including grpcurl for health checks
RUN apt-get update && \
    apt-get install -y \
        ca-certificates \
        curl \
        jq \
        netcat-openbsd \
        wget \
    && rm -rf /var/lib/apt/lists/* \
    && wget -qO- https://github.com/fullstorydev/grpcurl/releases/download/v1.8.9/grpcurl_1.8.9_linux_x86_64.tar.gz \
        | tar -xz -C /usr/local/bin grpcurl \
    && chmod +x /usr/local/bin/grpcurl

# Create non-root user
RUN useradd -m -u 1000 serviceradar

# Create necessary directories with proper permissions
RUN mkdir -p /etc/serviceradar /var/log/serviceradar /var/lib/serviceradar && \
    chown -R serviceradar:serviceradar /etc/serviceradar /var/log/serviceradar /var/lib/serviceradar

# Copy binary from builder
COPY --from=builder /src/serviceradar-kv /usr/local/bin/serviceradar-kv
RUN chmod +x /usr/local/bin/serviceradar-kv

# Copy entrypoint script
COPY docker/compose/entrypoint-kv.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Switch to non-root user
USER serviceradar

# Set working directory
WORKDIR /var/lib/serviceradar

# Expose gRPC port
EXPOSE 50057

# Health check using grpcurl
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD grpcurl -plaintext localhost:50057 grpc.health.v1.Health/Check || exit 1

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["serviceradar-kv"]