# Copyright 2025 Carver Automation Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM golang:1.24-bullseye

WORKDIR /src

# Install build and packaging dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libc6-dev \
    libsqlite3-dev \
    dpkg-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy go mod files first for better caching
COPY go.mod go.sum ./
RUN test -f go.mod || { echo "Error: go.mod not found in build context"; exit 1; } && \
    test -f go.sum || { echo "Error: go.sum not found in build context"; exit 1; } && \
    go mod download || { echo "Error: Failed to download Go modules"; exit 1; }

# Copy the source code
COPY cmd/core/ ./cmd/core/
COPY pkg/ ./pkg/
COPY proto/ ./proto/
RUN test -f cmd/core/main.go || { echo "Error: cmd/core/main.go not found"; exit 1; } && \
    find cmd/core/ -type f && \
    echo "Source files copied successfully"

# Build the core service with verbose output and verify
ARG VERSION
ARG BUILD_TAGS
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 \
    go build -v -tags "${BUILD_TAGS}" -ldflags "-X main.version=${VERSION}" -o /src/serviceradar-core ./cmd/core || { echo "Error: Go build failed"; exit 1; } && \
    ls -l /src/serviceradar-core && \
    test -s /src/serviceradar-core || { echo "Error: Binary is empty"; exit 1; }

# Default command (optional, overridden by docker run)
CMD ["bash"]