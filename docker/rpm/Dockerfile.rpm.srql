# syntax=docker/dockerfile:1

FROM rockylinux:9 AS builder
SHELL ["/bin/bash", "-lc"]

ARG VERSION=0.0.0
ARG RELEASE=1
ARG COMPONENT=srql
ARG PROTON_REPO="git+https://github.com/mfreeman451/proton-ocaml-driver.git"
ARG PROTON_REF="1.0.16"
ARG DREAM_REF="master"

ENV OPAMYES=1 \
    OPAMCONFIRMLEVEL=unsafe-yes \
    OPAM_SWITCH_NAME=ocaml-srql

RUN dnf install -y epel-release \
    && dnf install -y \
        ca-certificates \
        gcc \
        gcc-c++ \
        git \
        gmp-devel \
        lz4-devel \
        make \
        m4 \
        opam \
        openssl-devel \
        patch \
        pkgconfig \
        rsync \
        tar \
        unzip \
        which \
        zlib-devel \
        zstd-devel \
    && dnf clean all

RUN opam init --disable-sandboxing --yes
RUN opam update
RUN opam switch create "${OPAM_SWITCH_NAME}" 5.1.1 --yes

RUN eval $(opam env --switch="${OPAM_SWITCH_NAME}") \
    && opam pin add proton "${PROTON_REPO}#${PROTON_REF}" -y \
    && git clone --depth 1 --branch "${DREAM_REF}" https://github.com/aantron/dream.git /tmp/dream \
    && sed -i 's/"h2" {< "0.13.0"}/"h2" {>= "0.13.0" & < "0.14.0"}/' /tmp/dream/dream-httpaf.opam \
    && sed -i 's/"h2-lwt-unix"/"h2-lwt-unix" {>= "0.13.0"}/' /tmp/dream/dream-httpaf.opam \
    && sed -i 's/"h2-lwt"/"h2-lwt" {>= "0.13.0"}/' /tmp/dream/dream-httpaf.opam \
    && opam pin add dream /tmp/dream -y \
    && opam pin add dream-httpaf /tmp/dream -y \
    && opam pin add dream-pure /tmp/dream -y \
    && opam install -y \
        dune \
        menhir \
        yojson \
        ppx_deriving \
        lwt \
        lwt_ppx \
        tls \
        tls-lwt \
        mirage-crypto \
        mirage-crypto-rng \
        mirage-crypto-rng-lwt \
        x509 \
        h2 \
        h2-lwt \
        h2-lwt-unix \
        proton \
    && opam clean -a -c

WORKDIR /src
COPY ocaml/ ./ocaml

RUN eval $(opam env --switch="${OPAM_SWITCH_NAME}") \
    && cd ocaml \
    && opam install . --deps-only -y \
    && dune build --profile=release srql/bin/main.exe \
    && install -Dm755 _build/default/srql/bin/main.exe /tmp/serviceradar-srql

WORKDIR /root/rpmbuild
RUN mkdir -p BUILD BUILDROOT RPMS SOURCES/${COMPONENT}/config SOURCES/${COMPONENT}/systemd SPECS SRPMS
COPY packaging/specs/serviceradar-${COMPONENT}.spec SPECS/
COPY packaging/${COMPONENT}/config/srql.env SOURCES/${COMPONENT}/config/
COPY packaging/${COMPONENT}/systemd/serviceradar-${COMPONENT}.service SOURCES/${COMPONENT}/systemd/
RUN install -Dm755 /tmp/serviceradar-srql BUILD/serviceradar-${COMPONENT}

RUN RPM_VERSION=$(echo ${VERSION} | sed 's/-.*//') \
    && rpmbuild -bb SPECS/serviceradar-${COMPONENT}.spec \
        --define "version ${RPM_VERSION}" \
        --define "release ${RELEASE}" \
    && mkdir -p /output \
    && find RPMS -type f -name "*.rpm" -exec cp {} /output/ \;

FROM rockylinux:9
WORKDIR /rpms
COPY --from=builder /output/ ./

CMD ["ls", "-la", "/rpms"]
