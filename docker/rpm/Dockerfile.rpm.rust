# Use pre-built base image
FROM ghcr.io/carverauto/rockylinux9-rust-rpm-base:latest AS builder

ARG VERSION=1.0.33
ARG RELEASE=1
ARG COMPONENT=rperf-checker
ARG BINARY_PATH=cmd/checkers/rperf-client

# Set working directory
WORKDIR /src/${BINARY_PATH}

# Copy source files
COPY ${BINARY_PATH}/Cargo.toml .
COPY ${BINARY_PATH}/Cargo.lock* .
COPY ${BINARY_PATH}/src ./src/
COPY ${BINARY_PATH}/build.rs .
COPY proto ../proto/

# Run protoc to generate necessary files
RUN protoc -I=../proto --go_out=../proto --go_opt=paths=source_relative \
    --go-grpc_out=../proto --go-grpc_opt=paths=source_relative \
    ../proto/rperf/rperf.proto

# Build the Rust binary with explicit output name
RUN cargo build --release --target x86_64-unknown-linux-gnu --verbose && \
    ls -la target/x86_64-unknown-linux-gnu/release/

# Set up RPM build environment
WORKDIR /root/rpmbuild
COPY packaging/specs/serviceradar-${COMPONENT}.spec SPECS/
COPY packaging/rperf-checker/systemd/serviceradar-rperf-checker.service SOURCES/rperf-checker/systemd/
COPY packaging/rperf-checker/config/checkers/rperf.json SOURCES/rperf-checker/config/checkers/

# Build the RPM - with explicit debugging
RUN sed -i "s/%{version}/${VERSION}/g" SPECS/serviceradar-${COMPONENT}.spec && \
    sed -i "s/%{release}/${RELEASE}/g" SPECS/serviceradar-${COMPONENT}.spec && \
    mkdir -p BUILD && \
    echo "Listing binary directory contents:" && \
    ls -la /src/${BINARY_PATH}/target/x86_64-unknown-linux-gnu/release/ && \
    cp /src/${BINARY_PATH}/target/x86_64-unknown-linux-gnu/release/serviceradar-${COMPONENT} BUILD/serviceradar-${COMPONENT} && \
    rpmbuild -bb SPECS/serviceradar-${COMPONENT}.spec && \
    echo "Checking RPM build output:" && \
    find RPMS -type f -name "*.rpm" && \
    mkdir -p /output && \
    find RPMS -type f -name "*.rpm" -exec cp {} /output/ \; && \
    ls -la /output/

# Final stage using RockyLinux
FROM rockylinux:9

WORKDIR /rpms
# Copy ALL RPM files from the builder's output directory
COPY --from=builder /output/*.rpm ./
# Add validation step
RUN ls -la /rpms/

CMD ["ls", "-la", "/rpms/"]