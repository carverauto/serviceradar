"""Bazel-native OCI images."""

load("@rules_pkg//pkg:pkg.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")

package(default_visibility = ["//visibility:public"])

pkg_tar(
    name = "common_tools_amd64",
    files = {
        "@jq_linux_amd64//file": "usr/local/bin/jq",
        "@curl_linux_amd64//file": "usr/local/bin/curl",
        "@grpcurl_linux_amd64//:grpcurl": "usr/local/bin/grpcurl",
        "//cmd/tools/waitforport:wait-for-port": "usr/local/bin/wait-for-port",
    },
    modes = {
        "usr/local/bin/jq": "0755",
        "usr/local/bin/curl": "0755",
        "usr/local/bin/grpcurl": "0755",
        "usr/local/bin/wait-for-port": "0755",
    },
    package_dir = "/",
)

pkg_tar(
    name = "core_layer_amd64",
    files = {
        "//cmd/core:core": "usr/local/bin/serviceradar-core",
        "//docker/compose:entrypoint-core.sh": "usr/local/bin/entrypoint.sh",
        "@jq_linux_amd64//file": "usr/local/bin/jq",
        "@curl_linux_amd64//file": "usr/local/bin/curl",
    },
    modes = {
        "usr/local/bin/serviceradar-core": "0755",
        "usr/local/bin/entrypoint.sh": "0755",
        "usr/local/bin/jq": "0755",
        "usr/local/bin/curl": "0755",
    },
    empty_dirs = [
        "etc/serviceradar",
        "var/log/serviceradar",
        "var/lib/serviceradar",
        "data",
    ],
    package_dir = "/",
)

oci_image(
    name = "core_image_amd64",
    base = "@ubuntu_jammy_linux_amd64//:ubuntu_jammy_linux_amd64",
    tars = [":core_layer_amd64"],
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    cmd = ["serviceradar-core"],
    workdir = "/data",
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    exposed_ports = ["8090/tcp", "50051/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-core",
    },
)

oci_load(
    name = "core_image_amd64_tar",
    image = ":core_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-core:local"],
)

pkg_tar(
    name = "agent_layer_amd64",
    files = {
        "//cmd/agent:agent": "usr/local/bin/serviceradar-agent",
        "//docker/compose:agent.docker.json": "etc/serviceradar/agent.json",
        "//docker/compose:sweep.docker.json": "etc/serviceradar/checkers/sweep/sweep.json",
    },
    modes = {
        "usr/local/bin/serviceradar-agent": "0755",
        "etc/serviceradar/agent.json": "0644",
        "etc/serviceradar/checkers/sweep/sweep.json": "0644",
    },
    empty_dirs = [
        "var/lib/serviceradar",
        "var/log/serviceradar",
    ],
    package_dir = "/",
)

oci_image(
    name = "agent_image_amd64",
    base = "@alpine_3_20_linux_amd64//:alpine_3_20_linux_amd64",
    tars = [":common_tools_amd64", ":agent_layer_amd64"],
    cmd = ["/usr/local/bin/serviceradar-agent", "-config", "/etc/serviceradar/agent.json"],
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    workdir = "/var/lib/serviceradar",
    exposed_ports = ["50051/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-agent",
    },
)

oci_load(
    name = "agent_image_amd64_tar",
    image = ":agent_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-agent:local"],
)

pkg_tar(
    name = "db_event_writer_layer_amd64",
    files = {
        "//cmd/consumers/db-event-writer:db-event-writer": "usr/local/bin/serviceradar-db-event-writer",
        "//docker/compose:entrypoint-db-event-writer.sh": "usr/local/bin/entrypoint.sh",
    },
    modes = {
        "usr/local/bin/serviceradar-db-event-writer": "0755",
        "usr/local/bin/entrypoint.sh": "0755",
    },
    empty_dirs = [
        "etc/serviceradar/consumers",
        "etc/serviceradar/templates",
        "var/lib/serviceradar",
        "var/log/serviceradar",
    ],
    package_dir = "/",
)

oci_image(
    name = "db_event_writer_image_amd64",
    base = "@alpine_3_20_linux_amd64//:alpine_3_20_linux_amd64",
    tars = [":common_tools_amd64", ":db_event_writer_layer_amd64"],
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    cmd = ["serviceradar-db-event-writer"],
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    workdir = "/var/lib/serviceradar",
    exposed_ports = ["50041/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-db-event-writer",
    },
)

oci_load(
    name = "db_event_writer_image_amd64_tar",
    image = ":db_event_writer_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-db-event-writer:local"],
)

pkg_tar(
    name = "mapper_layer_amd64",
    files = {
        "//cmd/mapper:mapper": "usr/local/bin/serviceradar-mapper",
        "//docker/compose:entrypoint-mapper.sh": "usr/local/bin/entrypoint.sh",
    },
    modes = {
        "usr/local/bin/serviceradar-mapper": "0755",
        "usr/local/bin/entrypoint.sh": "0755",
    },
    empty_dirs = [
        "etc/serviceradar",
        "var/lib/serviceradar",
        "var/log/serviceradar",
    ],
    package_dir = "/",
)

oci_image(
    name = "mapper_image_amd64",
    base = "@alpine_3_20_linux_amd64//:alpine_3_20_linux_amd64",
    tars = [":common_tools_amd64", ":mapper_layer_amd64"],
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    cmd = ["serviceradar-mapper"],
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    workdir = "/var/lib/serviceradar",
    exposed_ports = ["50056/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-mapper",
    },
)

oci_load(
    name = "mapper_image_amd64_tar",
    image = ":mapper_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-mapper:local"],
)

pkg_tar(
    name = "kv_layer_amd64",
    files = {
        "//cmd/kv:kv": "usr/local/bin/serviceradar-kv",
        "//docker/compose:entrypoint-kv.sh": "usr/local/bin/entrypoint.sh",
        "//docker/compose:kv.docker.json": "etc/serviceradar/kv.json",
    },
    modes = {
        "usr/local/bin/serviceradar-kv": "0755",
        "usr/local/bin/entrypoint.sh": "0755",
        "etc/serviceradar/kv.json": "0644",
    },
    empty_dirs = [
        "var/lib/serviceradar",
        "var/log/serviceradar",
    ],
    package_dir = "/",
)

oci_image(
    name = "kv_image_amd64",
    base = "@alpine_3_20_linux_amd64//:alpine_3_20_linux_amd64",
    tars = [":common_tools_amd64", ":kv_layer_amd64"],
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    cmd = ["/usr/local/bin/serviceradar-kv"],
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    workdir = "/var/lib/serviceradar",
    exposed_ports = ["50057/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-kv",
    },
)

oci_load(
    name = "kv_image_amd64_tar",
    image = ":kv_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-kv:local"],
)

pkg_tar(
    name = "flowgger_layer_amd64",
    files = {
        "//cmd/flowgger:flowgger": "usr/local/bin/serviceradar-flowgger",
        "//docker/compose:entrypoint-flowgger.sh": "usr/local/bin/entrypoint.sh",
        "//docker/compose:flowgger.docker.toml": "etc/serviceradar/flowgger.toml",
    },
    modes = {
        "usr/local/bin/serviceradar-flowgger": "0755",
        "usr/local/bin/entrypoint.sh": "0755",
        "etc/serviceradar/flowgger.toml": "0644",
    },
    empty_dirs = [
        "etc/serviceradar/checkers",
        "etc/serviceradar/certs",
        "var/log/serviceradar",
        "var/lib/serviceradar",
    ],
    package_dir = "/",
)

oci_image(
    name = "flowgger_image_amd64",
    base = "@ubuntu_noble_linux_amd64//:ubuntu_noble_linux_amd64",
    tars = [":common_tools_amd64", ":flowgger_layer_amd64"],
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    cmd = ["serviceradar-flowgger"],
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    workdir = "/var/lib/serviceradar",
    exposed_ports = ["514/udp", "50044/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-flowgger",
    },
)

oci_load(
    name = "flowgger_image_amd64_tar",
    image = ":flowgger_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-flowgger:local"],
)

pkg_tar(
    name = "trapd_layer_amd64",
    files = {
        "//cmd/trapd:trapd": "usr/local/bin/serviceradar-trapd",
        "//docker/compose:entrypoint-trapd.sh": "usr/local/bin/entrypoint.sh",
        "//docker/compose:trapd.docker.json": "etc/serviceradar/trapd.json",
    },
    modes = {
        "usr/local/bin/serviceradar-trapd": "0755",
        "usr/local/bin/entrypoint.sh": "0755",
        "etc/serviceradar/trapd.json": "0644",
    },
    empty_dirs = [
        "etc/serviceradar/certs",
        "var/log/serviceradar",
        "var/lib/serviceradar",
    ],
    package_dir = "/",
)

oci_image(
    name = "trapd_image_amd64",
    base = "@ubuntu_jammy_linux_amd64//:ubuntu_jammy_linux_amd64",
    tars = [":common_tools_amd64", ":trapd_layer_amd64"],
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    cmd = ["serviceradar-trapd"],
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    workdir = "/var/lib/serviceradar",
    exposed_ports = ["162/udp", "50043/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-trapd",
    },
)

oci_load(
    name = "trapd_image_amd64_tar",
    image = ":trapd_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-trapd:local"],
)

pkg_tar(
    name = "otel_layer_amd64",
    files = {
        "//cmd/otel:otel": "usr/local/bin/serviceradar-otel",
        "//docker/compose:entrypoint-otel.sh": "usr/local/bin/entrypoint.sh",
        "//docker/compose:otel.docker.toml": "etc/serviceradar/otel.toml",
    },
    modes = {
        "usr/local/bin/serviceradar-otel": "0755",
        "usr/local/bin/entrypoint.sh": "0755",
        "etc/serviceradar/otel.toml": "0644",
    },
    empty_dirs = [
        "etc/serviceradar/certs",
        "var/log/serviceradar",
        "var/lib/serviceradar",
    ],
    package_dir = "/",
)

oci_image(
    name = "otel_image_amd64",
    base = "@ubuntu_jammy_linux_amd64//:ubuntu_jammy_linux_amd64",
    tars = [":common_tools_amd64", ":otel_layer_amd64"],
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    cmd = ["serviceradar-otel"],
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    workdir = "/var/lib/serviceradar",
    exposed_ports = ["4317/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-otel",
    },
)

oci_load(
    name = "otel_image_amd64_tar",
    image = ":otel_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-otel:local"],
)

pkg_tar(
    name = "snmp_checker_layer_amd64",
    files = {
        "//cmd/checkers/snmp:snmp": "usr/local/bin/serviceradar-snmp-checker",
        "//docker/compose:entrypoint-snmp-checker.sh": "usr/local/bin/entrypoint.sh",
        "//docker/compose:snmp-checker.docker.json": "etc/serviceradar/checkers/snmp.json",
    },
    modes = {
        "usr/local/bin/serviceradar-snmp-checker": "0755",
        "usr/local/bin/entrypoint.sh": "0755",
        "etc/serviceradar/checkers/snmp.json": "0644",
    },
    empty_dirs = [
        "etc/serviceradar/checkers",
        "etc/serviceradar/certs",
        "var/log/serviceradar",
        "var/lib/serviceradar",
    ],
    package_dir = "/",
)

oci_image(
    name = "snmp_checker_image_amd64",
    base = "@alpine_3_20_linux_amd64//:alpine_3_20_linux_amd64",
    tars = [":common_tools_amd64", ":snmp_checker_layer_amd64"],
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    cmd = ["serviceradar-snmp-checker"],
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    workdir = "/var/lib/serviceradar",
    exposed_ports = ["50054/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-snmp-checker",
    },
)

oci_load(
    name = "snmp_checker_image_amd64_tar",
    image = ":snmp_checker_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-snmp-checker:local"],
)

pkg_tar(
    name = "rperf_client_layer_amd64",
    files = {
        "//cmd/checkers/rperf-client:rperf_checker": "usr/local/bin/serviceradar-rperf-checker",
        "//docker/compose:entrypoint-rperf-client.sh": "usr/local/bin/entrypoint.sh",
        "//docker/compose:rperf-client.docker.json": "tmp/rperf-client.docker.json",
    },
    modes = {
        "usr/local/bin/serviceradar-rperf-checker": "0755",
        "usr/local/bin/entrypoint.sh": "0755",
        "tmp/rperf-client.docker.json": "0644",
    },
    empty_dirs = [
        "etc/serviceradar/checkers",
        "etc/serviceradar/certs",
        "var/log/serviceradar",
        "var/lib/serviceradar",
    ],
    package_dir = "/",
)

oci_image(
    name = "rperf_client_image_amd64",
    base = "@debian_bookworm_slim_linux_amd64//:debian_bookworm_slim_linux_amd64",
    tars = [":common_tools_amd64", ":rperf_client_layer_amd64"],
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    cmd = ["/usr/local/bin/serviceradar-rperf-checker", "--config", "/etc/serviceradar/checkers/rperf.json"],
    env = {
        "PATH": "/usr/local/bin:/usr/bin:/bin",
    },
    workdir = "/var/lib/serviceradar",
    exposed_ports = ["50059/tcp"],
    labels = {
        "org.opencontainers.image.title": "serviceradar-rperf-client",
    },
)

oci_load(
    name = "rperf_client_image_amd64_tar",
    image = ":rperf_client_image_amd64",
    repo_tags = ["ghcr.io/carverauto/serviceradar-rperf-client:local"],
)
