# Stage 1: Build the Go binary
FROM --platform=linux/amd64 golang:1.24-bullseye AS builder

WORKDIR /src
COPY . .

# Build the binary (passed as build arg)
ARG COMPONENT
ARG BINARY_PATH

# Build with the correct output name
RUN if [ "${COMPONENT}" = "dusk-checker" ]; then \
    GOOS=linux GOARCH=amd64 go build -o "/build-out/dusk-checker" "$BINARY_PATH"; \
    else \
    GOOS=linux GOARCH=amd64 go build -o "/build-out/serviceradar-${COMPONENT}" "$BINARY_PATH"; \
    fi

# Stage 2: Create RPM
FROM --platform=linux/amd64 rockylinux:9 AS rpm-builder

# Update and install RPM build tools and build dependencies
# Use --nogpgcheck for build environment
RUN dnf update -y && \
    dnf install -y --nogpgcheck \
    rpm-build \
    rpmdevtools \
    systemd-devel \
    libcap-devel \
    gcc \
    make

# Set up RPM build environment
RUN rpmdev-setuptree

# Create source directories
RUN mkdir -p /root/rpmbuild/SOURCES/systemd /root/rpmbuild/SOURCES/config/checkers

# Copy built binary and spec file
ARG COMPONENT
COPY --from=builder /build-out/* /root/rpmbuild/BUILD/
COPY packaging/specs/serviceradar-${COMPONENT}.spec /root/rpmbuild/SPECS/

# Copy configs and systemd files
COPY packaging/config/*.json /root/rpmbuild/SOURCES/config/
COPY packaging/config/checkers/*.json /root/rpmbuild/SOURCES/config/checkers/
COPY packaging/${COMPONENT}/systemd/serviceradar-${COMPONENT}.service /root/rpmbuild/SOURCES/systemd/

# Debugging: List files in directories
RUN echo "=== Files in BUILD ===" && \
    ls -la /root/rpmbuild/BUILD/ && \
    echo "=== Files in config ===" && \
    ls -la /root/rpmbuild/SOURCES/config/ && \
    echo "=== Files in checkers ===" && \
    ls -la /root/rpmbuild/SOURCES/config/checkers/

# Set default version (can be overridden at build time)
ARG VERSION=1.0.20
ARG RELEASE=1

# Build the RPM
RUN rpmbuild -bb \
    --define "version ${VERSION}" \
    --define "release ${RELEASE}" \
    /root/rpmbuild/SPECS/serviceradar-${COMPONENT}.spec

# Final stage to store RPM
FROM --platform=linux/amd64 rockylinux:9
WORKDIR /rpms
COPY --from=rpm-builder /root/rpmbuild/RPMS/*/*.rpm .
CMD ["/bin/bash"]