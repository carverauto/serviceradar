name: Publish OCI Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Optional extra tag to apply to all pushed images (e.g. v1.2.3)"
        required: false
        type: string

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: oracle
    env:
      BUILDBUDDY_ORG_API_KEY: ${{ secrets.BUILDBUDDY_ORG_API_KEY }}
      GHCR_DOCKER_AUTH: ${{ secrets.GHCR_DOCKER_AUTH }}
      GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
      GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
      GHCR_REGISTRY: ghcr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Configure BuildBuddy remote cache
        if: ${{ env.BUILDBUDDY_ORG_API_KEY != '' }}
        run: |
          umask 077
          printf 'common --remote_header=x-buildbuddy-api-key=%s\n' "${BUILDBUDDY_ORG_API_KEY}" > .bazelrc.remote

      - name: Resolve release tag
        id: release
        env:
          WORKFLOW_INPUT: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag || '' }}
        run: |
          tag="$WORKFLOW_INPUT"
          if [[ -z "$tag" && "${GITHUB_REF}" == refs/tags/* ]]; then
            tag="${GITHUB_REF#refs/tags/}"
          fi
          echo "tag=${tag}" >> "$GITHUB_OUTPUT"

      - name: Authenticate Docker for GHCR
        run: |
          bazel run \
            --config=remote \
            -c opt \
            //:buildbuddy_setup_docker_auth

      - name: Build (no publish)
        run: |
          bazel build \
            --config=remote \
            -c opt \
            //docker/images:push_all

      - name: Publish images
        env:
          EXTRA_TAG: ${{ steps.release.outputs.tag }}
        run: |
          set -euo pipefail
          cmd=(bazel run --config=remote -c opt --stamp //docker/images:push_all)
          if [[ -n "${EXTRA_TAG}" ]]; then
            cmd+=(-- --tag "${EXTRA_TAG}")
          fi
          "${cmd[@]}"

      - name: Summarize pushed tags
        env:
          EXTRA_TAG: ${{ steps.release.outputs.tag }}
        run: |
          printf 'Published tags include:\n'
          printf '  - latest\n'
          printf '  - sha-${GITHUB_SHA:0:12}\n'
          if [[ -n "${EXTRA_TAG}" ]]; then
            printf '  - %s\n' "${EXTRA_TAG}"
          fi
