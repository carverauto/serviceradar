# .github/workflows/container-build.yml
name: Build and Push Containers
on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.github/**'
      - '!.github/workflows/container-build.yml'

permissions:
  contents: read
  packages: write

jobs:
  build-containers:
    runs-on: ubuntu-latest
    env:
      VERSION: latest
      KO_DOCKER_REPO: ghcr.io/carverauto/serviceradar
    steps:
      - uses: actions/checkout@v4
      - name: Extract short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      - name: Setup ko
        uses: ko-build/setup-ko@v0.6
      - name: Build web UI
        run: ./scripts/build-web.sh
      - name: Move web artifacts
        run: |
          mkdir -p pkg/cloud/api/web/
          cp -r web/dist pkg/cloud/api/web/
          mkdir -p cmd/cloud/.kodata
          cp -r web/dist cmd/cloud/.kodata/web
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push container images
        run: |
          # Set up ko repository
          export KO_DOCKER_REPO=ghcr.io/carverauto/serviceradar
          
          # Build and push container images for all components
          GOFLAGS="-tags=containers" ko build \
            --platform=linux/amd64,linux/arm64 \
            --base-import-paths \
            --tags=sha-${{ steps.vars.outputs.sha_short }},latest \
            --image-refs=image-refs.txt \
            ./cmd/agent \
            ./cmd/poller \
            ./cmd/cloud \
            ./cmd/checkers/dusk \
            ./cmd/checkers/snmp