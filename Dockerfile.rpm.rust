FROM rockylinux:9 AS builder

ARG VERSION=1.0.28
ARG RELEASE=1
ARG COMPONENT
ARG BINARY_PATH

# Install build dependencies
RUN dnf install -y rpm-build rpmdevtools dnf-plugins-core git gcc make \
    && dnf config-manager --set-enabled crb \
    && dnf install -y curl

# Install rustup and a compatible Rust version
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.81.0 \
    && echo "source $HOME/.cargo/env" >> $HOME/.bashrc
ENV PATH="/root/.cargo/bin:${PATH}"

# Verify Rust version
RUN rustc --version

# Copy source code and spec file
WORKDIR /src
COPY . .
COPY packaging/specs/serviceradar-${COMPONENT}.spec /root/rpmbuild/SPECS/

# Build the Rust binary
WORKDIR /src/${BINARY_PATH}
RUN cargo build --release

# Build the RPM using the pre-existing spec file
WORKDIR /root/rpmbuild
RUN sed -i "s/%{version}/${VERSION}/g" SPECS/serviceradar-${COMPONENT}.spec && \
    sed -i "s/%{release}/${RELEASE}/g" SPECS/serviceradar-${COMPONENT}.spec && \
    mkdir -p /src/BUILD && \
    cp /src/${BINARY_PATH}/target/release/serviceradar-${COMPONENT} /src/BUILD/ && \
    rpmbuild -bb SPECS/serviceradar-${COMPONENT}.spec

# Copy the RPM to /rpms
RUN mkdir -p /rpms && \
    cp /root/rpmbuild/RPMS/*/serviceradar-${COMPONENT}-*.rpm /rpms/

# Final image just to provide the RPM
FROM scratch
COPY --from=builder /rpms/ /rpms/