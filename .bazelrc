# Global Bazel configuration for the ServiceRadar monorepo.
# Keep this file minimal and import developer- or environment-specific overrides
# via the optional .bazelrc.local and .bazelrc.remote files.

startup --max_idle_secs=60

common --announce_rc
common --experimental_convenience_symlinks=clean
common --color=yes
common --curses=yes

build --keep_going
build --jobs=auto
build --show_timestamps

# Standard test ergonomics: show failing logs and retry known flaky tests once.
test --test_output=errors
test --flaky_test_attempts=2

# Allow developers to extend configuration locally (ignored in version control).
try-import %workspace%/.bazelrc.local

# Remote caching/execution settings live here; provide BuildBuddy endpoints in
# .bazelrc.remote (kept out of version control until credentials are ready).
try-import %workspace%/.bazelrc.remote

# CI profile can layer on top of the remote config without re-declaring values.
build:ci --keep_going --build_tag_filters=-manual

# CI tests should avoid manual-only targets and preserve detailed output.
test:ci --test_tag_filters=-manual --test_output=errors

# Remote execution profile (opt-in via --config=remote).
build:remote --remote_executor=grpcs://remote.buildbuddy.io
build:remote --host_platform=@buildbuddy_toolchain//:platform_linux_x86_64
build:remote --platforms=@buildbuddy_toolchain//:platform_linux_x86_64
build:remote --extra_execution_platforms=@buildbuddy_toolchain//:platform_linux_x86_64
build:remote --crosstool_top=@buildbuddy_toolchain//:toolchain
build:remote --extra_toolchains=@buildbuddy_toolchain//:cc_toolchain
build:remote --repo_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
build:remote --java_language_version=11
build:remote --tool_java_language_version=11
build:remote --java_runtime_version=remotejdk_11
build:remote --tool_java_runtime_version=remotejdk_11
build:remote --define=EXECUTOR=remote
build:remote --incompatible_strict_action_env
build:remote --remote_timeout=10m

build --build_metadata=REPO_URL=git@github.com:carverauto/serviceradar.git
