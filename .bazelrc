# Global Bazel configuration for the ServiceRadar monorepo.
# Keep this file minimal and import developer- or environment-specific overrides
# via the optional .bazelrc.local and .bazelrc.remote files.

startup --max_idle_secs=60

common --announce_rc
common --experimental_convenience_symlinks=clean
common --color=yes
common --curses=yes

build --keep_going
build --jobs=auto
build --show_timestamps
build --action_env=OPENSSL_NO_PKG_CONFIG=1
build --java_runtime_version=local_jdk
build --tool_java_runtime_version=local_jdk
build --@io_bazel_rules_go//go/config:pure


# Standard test ergonomics: show failing logs and retry known flaky tests once.
test --test_output=errors
test --action_env=OPENSSL_NO_PKG_CONFIG=1
test --@io_bazel_rules_go//go/config:pure
test --flaky_test_attempts=2

# Allow developers to extend configuration locally (ignored in version control).
try-import %workspace%/.bazelrc.local

# Remote caching/execution settings live here; provide BuildBuddy endpoints in
# .bazelrc.remote (kept out of version control until credentials are ready).
try-import %workspace%/.bazelrc.remote

# Metadata for buildbuddy
build --workspace_status_command=$(pwd)/scripts/workspace_status.sh

# CI profile can layer on top of the remote config without re-declaring values.
build:ci --keep_going --build_tag_filters=-manual
build:ci --config=remote
build:ci --build_metadata=ROLE=CI
build:ci --bes_results_url=https://app.buildbuddy.io/invocation/
build:ci --bes_backend=grpcs://remote.buildbuddy.io
build:ci --bes_backend=grpcs://carverauto.buildbuddy.io
build:ci --remote_cache=grpcs://carverauto.buildbuddy.io
build:ci --remote_timeout=15m

# CI tests should avoid manual-only targets and preserve detailed output.
test:ci --config=remote
test:ci --test_tag_filters=-manual --test_output=errors

# Remote execution profile (opt-in via --config=remote).
build:remote --remote_executor=grpcs://remote.buildbuddy.io
build:remote --remote_cache=grpcs://remote.buildbuddy.io
build:remote --host_platform=//docker:rbe_platform
build:remote --platforms=//docker:rbe_platform
build:remote --crosstool_top=@buildbuddy_toolchain//:toolchain
build:remote --extra_toolchains=@buildbuddy_toolchain//:cc_toolchain
build:remote --repo_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
build:remote --copt=-Wno-use-after-free
build:remote --java_language_version=11
build:remote --tool_java_language_version=11
build:remote --java_runtime_version=remotejdk_11
build:remote --tool_java_runtime_version=remotejdk_11
build:remote --define=EXECUTOR=remote
build:remote --incompatible_strict_action_env
build:remote --remote_timeout=10m
build:remote --remote_download_minimal
build:remote --remote_upload_local_results
build:remote --jobs=100
test:remote --copt=-Wno-use-after-free

# Enable clang-tidy diagnostics via --config=clang-tidy
build:clang-tidy --features=clang_tidy
test:clang-tidy --features=clang_tidy

# OCaml toolchain generated via tools_opam is macOS-hosted, which cannot run on
# Linux remote executors. Force OCaml compilation/linking actions to run locally
# until a hermetic Linux toolchain is available.
#build:remote --strategy=CompileOCamlModule=local
#build:remote --strategy=CompileOCamlLibrary=local
#build:remote --strategy=CompileOCamlArchive=local
#build:remote --strategy=OcamlPack=local
#build:remote --strategy=OcamlLink=local

build --build_metadata=REPO_URL=git@github.com:carverauto/serviceradar.git

build:ci --config=remote
build --extra_execution_platforms=//platforms:darwin_exec

build:darwin_pkg --platforms=//platforms:darwin_exec
build:darwin_pkg --host_platform=//platforms:darwin_exec
build:darwin_pkg --action_env=DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer
build:darwin_pkg --action_env=PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/homebrew/bin:/usr/local/go/bin
build:darwin_pkg --action_env=PKG_SIGN_IDENTITY
build:darwin_pkg --action_env=PKG_NOTARIZE_PROFILE
build:darwin_pkg --action_env=PKG_VERSION
build:darwin_pkg --action_env=PKG_IDENTIFIER
build:darwin_pkg --action_env=PKG_DISABLE_TIMESTAMP=1
build:darwin_pkg --action_env=XCODE_VERSION_OVERRIDE=26.0
build:darwin_pkg --remote_default_exec_properties=OSFamily=MacOS
build:darwin_pkg --repo_env=PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin
build:darwin_pkg --repo_env=BAZEL=/usr/local/bin/bazel
build:darwin_pkg --repo_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
build:darwin_pkg --noremote
build:darwin_pkg --noremote_accept_cached
